
--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k=="script" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting"))
Model0 = Instance.new("Model")
BodyColors1 = Instance.new("BodyColors")
Script2 = Instance.new("Script")
Script3 = Instance.new("Script")
LocalScript4 = Instance.new("LocalScript")
LocalScript5 = Instance.new("LocalScript")
StringValue6 = Instance.new("StringValue")
Animation7 = Instance.new("Animation")
NumberValue8 = Instance.new("NumberValue")
Animation9 = Instance.new("Animation")
NumberValue10 = Instance.new("NumberValue")
StringValue11 = Instance.new("StringValue")
Animation12 = Instance.new("Animation")
StringValue13 = Instance.new("StringValue")
Animation14 = Instance.new("Animation")
StringValue15 = Instance.new("StringValue")
Animation16 = Instance.new("Animation")
StringValue17 = Instance.new("StringValue")
Animation18 = Instance.new("Animation")
StringValue19 = Instance.new("StringValue")
Animation20 = Instance.new("Animation")
StringValue21 = Instance.new("StringValue")
Animation22 = Instance.new("Animation")
StringValue23 = Instance.new("StringValue")
Animation24 = Instance.new("Animation")
Part25 = Instance.new("Part")
SpecialMesh26 = Instance.new("SpecialMesh")
Part27 = Instance.new("Part")
Motor6D28 = Instance.new("Motor6D")
Part29 = Instance.new("Part")
SpecialMesh30 = Instance.new("SpecialMesh")
Part31 = Instance.new("Part")
SpecialMesh32 = Instance.new("SpecialMesh")
Part33 = Instance.new("Part")
SpecialMesh34 = Instance.new("SpecialMesh")
Part35 = Instance.new("Part")
SpecialMesh36 = Instance.new("SpecialMesh")
Part37 = Instance.new("Part")
Decal38 = Instance.new("Decal")
Motor6D39 = Instance.new("Motor6D")
Motor6D40 = Instance.new("Motor6D")
Motor6D41 = Instance.new("Motor6D")
Motor6D42 = Instance.new("Motor6D")
Motor6D43 = Instance.new("Motor6D")
SpecialMesh44 = Instance.new("SpecialMesh")
Sound45 = Instance.new("Sound")
Model46 = Instance.new("Model")
BodyColors47 = Instance.new("BodyColors")
Script48 = Instance.new("Script")
Script49 = Instance.new("Script")
LocalScript50 = Instance.new("LocalScript")
LocalScript51 = Instance.new("LocalScript")
StringValue52 = Instance.new("StringValue")
Animation53 = Instance.new("Animation")
NumberValue54 = Instance.new("NumberValue")
Animation55 = Instance.new("Animation")
NumberValue56 = Instance.new("NumberValue")
StringValue57 = Instance.new("StringValue")
Animation58 = Instance.new("Animation")
StringValue59 = Instance.new("StringValue")
Animation60 = Instance.new("Animation")
StringValue61 = Instance.new("StringValue")
Animation62 = Instance.new("Animation")
StringValue63 = Instance.new("StringValue")
Animation64 = Instance.new("Animation")
StringValue65 = Instance.new("StringValue")
Animation66 = Instance.new("Animation")
StringValue67 = Instance.new("StringValue")
Animation68 = Instance.new("Animation")
StringValue69 = Instance.new("StringValue")
Animation70 = Instance.new("Animation")
Part71 = Instance.new("Part")
SpecialMesh72 = Instance.new("SpecialMesh")
Part73 = Instance.new("Part")
Motor6D74 = Instance.new("Motor6D")
Part75 = Instance.new("Part")
SpecialMesh76 = Instance.new("SpecialMesh")
Part77 = Instance.new("Part")
SpecialMesh78 = Instance.new("SpecialMesh")
Part79 = Instance.new("Part")
SpecialMesh80 = Instance.new("SpecialMesh")
Part81 = Instance.new("Part")
SpecialMesh82 = Instance.new("SpecialMesh")
Part83 = Instance.new("Part")
Decal84 = Instance.new("Decal")
Motor6D85 = Instance.new("Motor6D")
Motor6D86 = Instance.new("Motor6D")
Motor6D87 = Instance.new("Motor6D")
Motor6D88 = Instance.new("Motor6D")
Motor6D89 = Instance.new("Motor6D")
SpecialMesh90 = Instance.new("SpecialMesh")
Sky91 = Instance.new("Sky")
Script92 = Instance.new("Script")
Model93 = Instance.new("Model")
BodyColors94 = Instance.new("BodyColors")
Script95 = Instance.new("Script")
Script96 = Instance.new("Script")
LocalScript97 = Instance.new("LocalScript")
LocalScript98 = Instance.new("LocalScript")
StringValue99 = Instance.new("StringValue")
Animation100 = Instance.new("Animation")
NumberValue101 = Instance.new("NumberValue")
Animation102 = Instance.new("Animation")
NumberValue103 = Instance.new("NumberValue")
StringValue104 = Instance.new("StringValue")
Animation105 = Instance.new("Animation")
StringValue106 = Instance.new("StringValue")
Animation107 = Instance.new("Animation")
StringValue108 = Instance.new("StringValue")
Animation109 = Instance.new("Animation")
StringValue110 = Instance.new("StringValue")
Animation111 = Instance.new("Animation")
StringValue112 = Instance.new("StringValue")
Animation113 = Instance.new("Animation")
StringValue114 = Instance.new("StringValue")
Animation115 = Instance.new("Animation")
StringValue116 = Instance.new("StringValue")
Animation117 = Instance.new("Animation")
Part118 = Instance.new("Part")
SpecialMesh119 = Instance.new("SpecialMesh")
Part120 = Instance.new("Part")
Motor6D121 = Instance.new("Motor6D")
Part122 = Instance.new("Part")
SpecialMesh123 = Instance.new("SpecialMesh")
Part124 = Instance.new("Part")
SpecialMesh125 = Instance.new("SpecialMesh")
Part126 = Instance.new("Part")
SpecialMesh127 = Instance.new("SpecialMesh")
Part128 = Instance.new("Part")
SpecialMesh129 = Instance.new("SpecialMesh")
Part130 = Instance.new("Part")
Decal131 = Instance.new("Decal")
Motor6D132 = Instance.new("Motor6D")
Motor6D133 = Instance.new("Motor6D")
Motor6D134 = Instance.new("Motor6D")
Motor6D135 = Instance.new("Motor6D")
Motor6D136 = Instance.new("Motor6D")
SpecialMesh137 = Instance.new("SpecialMesh")
Model138 = Instance.new("Model")
BodyColors139 = Instance.new("BodyColors")
Script140 = Instance.new("Script")
Script141 = Instance.new("Script")
LocalScript142 = Instance.new("LocalScript")
LocalScript143 = Instance.new("LocalScript")
StringValue144 = Instance.new("StringValue")
Animation145 = Instance.new("Animation")
NumberValue146 = Instance.new("NumberValue")
Animation147 = Instance.new("Animation")
NumberValue148 = Instance.new("NumberValue")
StringValue149 = Instance.new("StringValue")
Animation150 = Instance.new("Animation")
StringValue151 = Instance.new("StringValue")
Animation152 = Instance.new("Animation")
StringValue153 = Instance.new("StringValue")
Animation154 = Instance.new("Animation")
StringValue155 = Instance.new("StringValue")
Animation156 = Instance.new("Animation")
StringValue157 = Instance.new("StringValue")
Animation158 = Instance.new("Animation")
StringValue159 = Instance.new("StringValue")
Animation160 = Instance.new("Animation")
StringValue161 = Instance.new("StringValue")
Animation162 = Instance.new("Animation")
Part163 = Instance.new("Part")
SpecialMesh164 = Instance.new("SpecialMesh")
Part165 = Instance.new("Part")
Motor6D166 = Instance.new("Motor6D")
Part167 = Instance.new("Part")
SpecialMesh168 = Instance.new("SpecialMesh")
Part169 = Instance.new("Part")
SpecialMesh170 = Instance.new("SpecialMesh")
Part171 = Instance.new("Part")
SpecialMesh172 = Instance.new("SpecialMesh")
Part173 = Instance.new("Part")
SpecialMesh174 = Instance.new("SpecialMesh")
Part175 = Instance.new("Part")
Decal176 = Instance.new("Decal")
Motor6D177 = Instance.new("Motor6D")
Motor6D178 = Instance.new("Motor6D")
Motor6D179 = Instance.new("Motor6D")
Motor6D180 = Instance.new("Motor6D")
Motor6D181 = Instance.new("Motor6D")
SpecialMesh182 = Instance.new("SpecialMesh")
Model183 = Instance.new("Model")
BodyColors184 = Instance.new("BodyColors")
Script185 = Instance.new("Script")
Script186 = Instance.new("Script")
LocalScript187 = Instance.new("LocalScript")
LocalScript188 = Instance.new("LocalScript")
StringValue189 = Instance.new("StringValue")
Animation190 = Instance.new("Animation")
NumberValue191 = Instance.new("NumberValue")
Animation192 = Instance.new("Animation")
NumberValue193 = Instance.new("NumberValue")
StringValue194 = Instance.new("StringValue")
Animation195 = Instance.new("Animation")
StringValue196 = Instance.new("StringValue")
Animation197 = Instance.new("Animation")
StringValue198 = Instance.new("StringValue")
Animation199 = Instance.new("Animation")
StringValue200 = Instance.new("StringValue")
Animation201 = Instance.new("Animation")
StringValue202 = Instance.new("StringValue")
Animation203 = Instance.new("Animation")
StringValue204 = Instance.new("StringValue")
Animation205 = Instance.new("Animation")
StringValue206 = Instance.new("StringValue")
Animation207 = Instance.new("Animation")
Part208 = Instance.new("Part")
SpecialMesh209 = Instance.new("SpecialMesh")
Part210 = Instance.new("Part")
Motor6D211 = Instance.new("Motor6D")
Part212 = Instance.new("Part")
SpecialMesh213 = Instance.new("SpecialMesh")
Part214 = Instance.new("Part")
SpecialMesh215 = Instance.new("SpecialMesh")
Part216 = Instance.new("Part")
SpecialMesh217 = Instance.new("SpecialMesh")
Part218 = Instance.new("Part")
SpecialMesh219 = Instance.new("SpecialMesh")
Part220 = Instance.new("Part")
Decal221 = Instance.new("Decal")
Motor6D222 = Instance.new("Motor6D")
Motor6D223 = Instance.new("Motor6D")
Motor6D224 = Instance.new("Motor6D")
Motor6D225 = Instance.new("Motor6D")
Motor6D226 = Instance.new("Motor6D")
SpecialMesh227 = Instance.new("SpecialMesh")
Model228 = Instance.new("Model")
BodyColors229 = Instance.new("BodyColors")
Script230 = Instance.new("Script")
Script231 = Instance.new("Script")
LocalScript232 = Instance.new("LocalScript")
LocalScript233 = Instance.new("LocalScript")
StringValue234 = Instance.new("StringValue")
Animation235 = Instance.new("Animation")
NumberValue236 = Instance.new("NumberValue")
Animation237 = Instance.new("Animation")
NumberValue238 = Instance.new("NumberValue")
StringValue239 = Instance.new("StringValue")
Animation240 = Instance.new("Animation")
StringValue241 = Instance.new("StringValue")
Animation242 = Instance.new("Animation")
StringValue243 = Instance.new("StringValue")
Animation244 = Instance.new("Animation")
StringValue245 = Instance.new("StringValue")
Animation246 = Instance.new("Animation")
StringValue247 = Instance.new("StringValue")
Animation248 = Instance.new("Animation")
StringValue249 = Instance.new("StringValue")
Animation250 = Instance.new("Animation")
StringValue251 = Instance.new("StringValue")
Animation252 = Instance.new("Animation")
Part253 = Instance.new("Part")
SpecialMesh254 = Instance.new("SpecialMesh")
Part255 = Instance.new("Part")
Motor6D256 = Instance.new("Motor6D")
Part257 = Instance.new("Part")
SpecialMesh258 = Instance.new("SpecialMesh")
Part259 = Instance.new("Part")
SpecialMesh260 = Instance.new("SpecialMesh")
Part261 = Instance.new("Part")
SpecialMesh262 = Instance.new("SpecialMesh")
Part263 = Instance.new("Part")
SpecialMesh264 = Instance.new("SpecialMesh")
Part265 = Instance.new("Part")
Decal266 = Instance.new("Decal")
Motor6D267 = Instance.new("Motor6D")
Motor6D268 = Instance.new("Motor6D")
Motor6D269 = Instance.new("Motor6D")
Motor6D270 = Instance.new("Motor6D")
Motor6D271 = Instance.new("Motor6D")
SpecialMesh272 = Instance.new("SpecialMesh")
Model273 = Instance.new("Model")
BodyColors274 = Instance.new("BodyColors")
Script275 = Instance.new("Script")
Script276 = Instance.new("Script")
LocalScript277 = Instance.new("LocalScript")
LocalScript278 = Instance.new("LocalScript")
StringValue279 = Instance.new("StringValue")
Animation280 = Instance.new("Animation")
NumberValue281 = Instance.new("NumberValue")
Animation282 = Instance.new("Animation")
NumberValue283 = Instance.new("NumberValue")
StringValue284 = Instance.new("StringValue")
Animation285 = Instance.new("Animation")
StringValue286 = Instance.new("StringValue")
Animation287 = Instance.new("Animation")
StringValue288 = Instance.new("StringValue")
Animation289 = Instance.new("Animation")
StringValue290 = Instance.new("StringValue")
Animation291 = Instance.new("Animation")
StringValue292 = Instance.new("StringValue")
Animation293 = Instance.new("Animation")
StringValue294 = Instance.new("StringValue")
Animation295 = Instance.new("Animation")
StringValue296 = Instance.new("StringValue")
Animation297 = Instance.new("Animation")
Part298 = Instance.new("Part")
SpecialMesh299 = Instance.new("SpecialMesh")
Part300 = Instance.new("Part")
Motor6D301 = Instance.new("Motor6D")
Part302 = Instance.new("Part")
SpecialMesh303 = Instance.new("SpecialMesh")
Part304 = Instance.new("Part")
SpecialMesh305 = Instance.new("SpecialMesh")
Part306 = Instance.new("Part")
SpecialMesh307 = Instance.new("SpecialMesh")
Part308 = Instance.new("Part")
SpecialMesh309 = Instance.new("SpecialMesh")
Part310 = Instance.new("Part")
Decal311 = Instance.new("Decal")
Motor6D312 = Instance.new("Motor6D")
Motor6D313 = Instance.new("Motor6D")
Motor6D314 = Instance.new("Motor6D")
Motor6D315 = Instance.new("Motor6D")
Motor6D316 = Instance.new("Motor6D")
SpecialMesh317 = Instance.new("SpecialMesh")
Model318 = Instance.new("Model")
BodyColors319 = Instance.new("BodyColors")
Script320 = Instance.new("Script")
Script321 = Instance.new("Script")
LocalScript322 = Instance.new("LocalScript")
LocalScript323 = Instance.new("LocalScript")
StringValue324 = Instance.new("StringValue")
Animation325 = Instance.new("Animation")
NumberValue326 = Instance.new("NumberValue")
Animation327 = Instance.new("Animation")
NumberValue328 = Instance.new("NumberValue")
StringValue329 = Instance.new("StringValue")
Animation330 = Instance.new("Animation")
StringValue331 = Instance.new("StringValue")
Animation332 = Instance.new("Animation")
StringValue333 = Instance.new("StringValue")
Animation334 = Instance.new("Animation")
StringValue335 = Instance.new("StringValue")
Animation336 = Instance.new("Animation")
StringValue337 = Instance.new("StringValue")
Animation338 = Instance.new("Animation")
StringValue339 = Instance.new("StringValue")
Animation340 = Instance.new("Animation")
StringValue341 = Instance.new("StringValue")
Animation342 = Instance.new("Animation")
Part343 = Instance.new("Part")
SpecialMesh344 = Instance.new("SpecialMesh")
Part345 = Instance.new("Part")
Motor6D346 = Instance.new("Motor6D")
Part347 = Instance.new("Part")
SpecialMesh348 = Instance.new("SpecialMesh")
Part349 = Instance.new("Part")
SpecialMesh350 = Instance.new("SpecialMesh")
Part351 = Instance.new("Part")
SpecialMesh352 = Instance.new("SpecialMesh")
Part353 = Instance.new("Part")
SpecialMesh354 = Instance.new("SpecialMesh")
Part355 = Instance.new("Part")
Decal356 = Instance.new("Decal")
Motor6D357 = Instance.new("Motor6D")
Motor6D358 = Instance.new("Motor6D")
Motor6D359 = Instance.new("Motor6D")
Motor6D360 = Instance.new("Motor6D")
Motor6D361 = Instance.new("Motor6D")
SpecialMesh362 = Instance.new("SpecialMesh")
Model363 = Instance.new("Model")
BodyColors364 = Instance.new("BodyColors")
Script365 = Instance.new("Script")
Script366 = Instance.new("Script")
LocalScript367 = Instance.new("LocalScript")
LocalScript368 = Instance.new("LocalScript")
StringValue369 = Instance.new("StringValue")
Animation370 = Instance.new("Animation")
NumberValue371 = Instance.new("NumberValue")
Animation372 = Instance.new("Animation")
NumberValue373 = Instance.new("NumberValue")
StringValue374 = Instance.new("StringValue")
Animation375 = Instance.new("Animation")
StringValue376 = Instance.new("StringValue")
Animation377 = Instance.new("Animation")
StringValue378 = Instance.new("StringValue")
Animation379 = Instance.new("Animation")
StringValue380 = Instance.new("StringValue")
Animation381 = Instance.new("Animation")
StringValue382 = Instance.new("StringValue")
Animation383 = Instance.new("Animation")
StringValue384 = Instance.new("StringValue")
Animation385 = Instance.new("Animation")
StringValue386 = Instance.new("StringValue")
Animation387 = Instance.new("Animation")
Part388 = Instance.new("Part")
SpecialMesh389 = Instance.new("SpecialMesh")
Part390 = Instance.new("Part")
Motor6D391 = Instance.new("Motor6D")
Part392 = Instance.new("Part")
SpecialMesh393 = Instance.new("SpecialMesh")
Part394 = Instance.new("Part")
SpecialMesh395 = Instance.new("SpecialMesh")
Part396 = Instance.new("Part")
SpecialMesh397 = Instance.new("SpecialMesh")
Part398 = Instance.new("Part")
SpecialMesh399 = Instance.new("SpecialMesh")
Part400 = Instance.new("Part")
Decal401 = Instance.new("Decal")
Motor6D402 = Instance.new("Motor6D")
Motor6D403 = Instance.new("Motor6D")
Motor6D404 = Instance.new("Motor6D")
Motor6D405 = Instance.new("Motor6D")
Motor6D406 = Instance.new("Motor6D")
SpecialMesh407 = Instance.new("SpecialMesh")
Model408 = Instance.new("Model")
BodyColors409 = Instance.new("BodyColors")
Script410 = Instance.new("Script")
Script411 = Instance.new("Script")
LocalScript412 = Instance.new("LocalScript")
LocalScript413 = Instance.new("LocalScript")
StringValue414 = Instance.new("StringValue")
Animation415 = Instance.new("Animation")
NumberValue416 = Instance.new("NumberValue")
Animation417 = Instance.new("Animation")
NumberValue418 = Instance.new("NumberValue")
StringValue419 = Instance.new("StringValue")
Animation420 = Instance.new("Animation")
StringValue421 = Instance.new("StringValue")
Animation422 = Instance.new("Animation")
StringValue423 = Instance.new("StringValue")
Animation424 = Instance.new("Animation")
StringValue425 = Instance.new("StringValue")
Animation426 = Instance.new("Animation")
StringValue427 = Instance.new("StringValue")
Animation428 = Instance.new("Animation")
StringValue429 = Instance.new("StringValue")
Animation430 = Instance.new("Animation")
StringValue431 = Instance.new("StringValue")
Animation432 = Instance.new("Animation")
Part433 = Instance.new("Part")
SpecialMesh434 = Instance.new("SpecialMesh")
Part435 = Instance.new("Part")
Motor6D436 = Instance.new("Motor6D")
Part437 = Instance.new("Part")
SpecialMesh438 = Instance.new("SpecialMesh")
Part439 = Instance.new("Part")
SpecialMesh440 = Instance.new("SpecialMesh")
Part441 = Instance.new("Part")
SpecialMesh442 = Instance.new("SpecialMesh")
Part443 = Instance.new("Part")
SpecialMesh444 = Instance.new("SpecialMesh")
Part445 = Instance.new("Part")
Decal446 = Instance.new("Decal")
Motor6D447 = Instance.new("Motor6D")
Motor6D448 = Instance.new("Motor6D")
Motor6D449 = Instance.new("Motor6D")
Motor6D450 = Instance.new("Motor6D")
Motor6D451 = Instance.new("Motor6D")
SpecialMesh452 = Instance.new("SpecialMesh")
Model453 = Instance.new("Model")
BodyColors454 = Instance.new("BodyColors")
Script455 = Instance.new("Script")
Script456 = Instance.new("Script")
LocalScript457 = Instance.new("LocalScript")
LocalScript458 = Instance.new("LocalScript")
StringValue459 = Instance.new("StringValue")
Animation460 = Instance.new("Animation")
NumberValue461 = Instance.new("NumberValue")
Animation462 = Instance.new("Animation")
NumberValue463 = Instance.new("NumberValue")
StringValue464 = Instance.new("StringValue")
Animation465 = Instance.new("Animation")
StringValue466 = Instance.new("StringValue")
Animation467 = Instance.new("Animation")
StringValue468 = Instance.new("StringValue")
Animation469 = Instance.new("Animation")
StringValue470 = Instance.new("StringValue")
Animation471 = Instance.new("Animation")
StringValue472 = Instance.new("StringValue")
Animation473 = Instance.new("Animation")
StringValue474 = Instance.new("StringValue")
Animation475 = Instance.new("Animation")
StringValue476 = Instance.new("StringValue")
Animation477 = Instance.new("Animation")
Part478 = Instance.new("Part")
SpecialMesh479 = Instance.new("SpecialMesh")
Part480 = Instance.new("Part")
Motor6D481 = Instance.new("Motor6D")
Part482 = Instance.new("Part")
SpecialMesh483 = Instance.new("SpecialMesh")
Part484 = Instance.new("Part")
SpecialMesh485 = Instance.new("SpecialMesh")
Part486 = Instance.new("Part")
SpecialMesh487 = Instance.new("SpecialMesh")
Part488 = Instance.new("Part")
SpecialMesh489 = Instance.new("SpecialMesh")
Part490 = Instance.new("Part")
Decal491 = Instance.new("Decal")
Motor6D492 = Instance.new("Motor6D")
Motor6D493 = Instance.new("Motor6D")
Motor6D494 = Instance.new("Motor6D")
Motor6D495 = Instance.new("Motor6D")
Motor6D496 = Instance.new("Motor6D")
SpecialMesh497 = Instance.new("SpecialMesh")
Model498 = Instance.new("Model")
BodyColors499 = Instance.new("BodyColors")
Script500 = Instance.new("Script")
Script501 = Instance.new("Script")
LocalScript502 = Instance.new("LocalScript")
LocalScript503 = Instance.new("LocalScript")
StringValue504 = Instance.new("StringValue")
Animation505 = Instance.new("Animation")
NumberValue506 = Instance.new("NumberValue")
Animation507 = Instance.new("Animation")
NumberValue508 = Instance.new("NumberValue")
StringValue509 = Instance.new("StringValue")
Animation510 = Instance.new("Animation")
StringValue511 = Instance.new("StringValue")
Animation512 = Instance.new("Animation")
StringValue513 = Instance.new("StringValue")
Animation514 = Instance.new("Animation")
StringValue515 = Instance.new("StringValue")
Animation516 = Instance.new("Animation")
StringValue517 = Instance.new("StringValue")
Animation518 = Instance.new("Animation")
StringValue519 = Instance.new("StringValue")
Animation520 = Instance.new("Animation")
StringValue521 = Instance.new("StringValue")
Animation522 = Instance.new("Animation")
Part523 = Instance.new("Part")
SpecialMesh524 = Instance.new("SpecialMesh")
Part525 = Instance.new("Part")
Motor6D526 = Instance.new("Motor6D")
Part527 = Instance.new("Part")
SpecialMesh528 = Instance.new("SpecialMesh")
Part529 = Instance.new("Part")
SpecialMesh530 = Instance.new("SpecialMesh")
Part531 = Instance.new("Part")
SpecialMesh532 = Instance.new("SpecialMesh")
Part533 = Instance.new("Part")
SpecialMesh534 = Instance.new("SpecialMesh")
Part535 = Instance.new("Part")
Decal536 = Instance.new("Decal")
Motor6D537 = Instance.new("Motor6D")
Motor6D538 = Instance.new("Motor6D")
Motor6D539 = Instance.new("Motor6D")
Motor6D540 = Instance.new("Motor6D")
Motor6D541 = Instance.new("Motor6D")
SpecialMesh542 = Instance.new("SpecialMesh")
Model543 = Instance.new("Model")
BodyColors544 = Instance.new("BodyColors")
Script545 = Instance.new("Script")
Script546 = Instance.new("Script")
LocalScript547 = Instance.new("LocalScript")
LocalScript548 = Instance.new("LocalScript")
StringValue549 = Instance.new("StringValue")
Animation550 = Instance.new("Animation")
NumberValue551 = Instance.new("NumberValue")
Animation552 = Instance.new("Animation")
NumberValue553 = Instance.new("NumberValue")
StringValue554 = Instance.new("StringValue")
Animation555 = Instance.new("Animation")
StringValue556 = Instance.new("StringValue")
Animation557 = Instance.new("Animation")
StringValue558 = Instance.new("StringValue")
Animation559 = Instance.new("Animation")
StringValue560 = Instance.new("StringValue")
Animation561 = Instance.new("Animation")
StringValue562 = Instance.new("StringValue")
Animation563 = Instance.new("Animation")
StringValue564 = Instance.new("StringValue")
Animation565 = Instance.new("Animation")
StringValue566 = Instance.new("StringValue")
Animation567 = Instance.new("Animation")
Part568 = Instance.new("Part")
SpecialMesh569 = Instance.new("SpecialMesh")
Part570 = Instance.new("Part")
Motor6D571 = Instance.new("Motor6D")
Part572 = Instance.new("Part")
SpecialMesh573 = Instance.new("SpecialMesh")
Part574 = Instance.new("Part")
SpecialMesh575 = Instance.new("SpecialMesh")
Part576 = Instance.new("Part")
SpecialMesh577 = Instance.new("SpecialMesh")
Part578 = Instance.new("Part")
SpecialMesh579 = Instance.new("SpecialMesh")
Part580 = Instance.new("Part")
Decal581 = Instance.new("Decal")
Motor6D582 = Instance.new("Motor6D")
Motor6D583 = Instance.new("Motor6D")
Motor6D584 = Instance.new("Motor6D")
Motor6D585 = Instance.new("Motor6D")
Motor6D586 = Instance.new("Motor6D")
SpecialMesh587 = Instance.new("SpecialMesh")
Model588 = Instance.new("Model")
BodyColors589 = Instance.new("BodyColors")
Script590 = Instance.new("Script")
Script591 = Instance.new("Script")
LocalScript592 = Instance.new("LocalScript")
LocalScript593 = Instance.new("LocalScript")
StringValue594 = Instance.new("StringValue")
Animation595 = Instance.new("Animation")
NumberValue596 = Instance.new("NumberValue")
Animation597 = Instance.new("Animation")
NumberValue598 = Instance.new("NumberValue")
StringValue599 = Instance.new("StringValue")
Animation600 = Instance.new("Animation")
StringValue601 = Instance.new("StringValue")
Animation602 = Instance.new("Animation")
StringValue603 = Instance.new("StringValue")
Animation604 = Instance.new("Animation")
StringValue605 = Instance.new("StringValue")
Animation606 = Instance.new("Animation")
StringValue607 = Instance.new("StringValue")
Animation608 = Instance.new("Animation")
StringValue609 = Instance.new("StringValue")
Animation610 = Instance.new("Animation")
StringValue611 = Instance.new("StringValue")
Animation612 = Instance.new("Animation")
Part613 = Instance.new("Part")
SpecialMesh614 = Instance.new("SpecialMesh")
Part615 = Instance.new("Part")
Motor6D616 = Instance.new("Motor6D")
Part617 = Instance.new("Part")
SpecialMesh618 = Instance.new("SpecialMesh")
Part619 = Instance.new("Part")
SpecialMesh620 = Instance.new("SpecialMesh")
Part621 = Instance.new("Part")
SpecialMesh622 = Instance.new("SpecialMesh")
Part623 = Instance.new("Part")
SpecialMesh624 = Instance.new("SpecialMesh")
Part625 = Instance.new("Part")
Decal626 = Instance.new("Decal")
Motor6D627 = Instance.new("Motor6D")
Motor6D628 = Instance.new("Motor6D")
Motor6D629 = Instance.new("Motor6D")
Motor6D630 = Instance.new("Motor6D")
Motor6D631 = Instance.new("Motor6D")
SpecialMesh632 = Instance.new("SpecialMesh")
Model633 = Instance.new("Model")
BodyColors634 = Instance.new("BodyColors")
Script635 = Instance.new("Script")
Script636 = Instance.new("Script")
LocalScript637 = Instance.new("LocalScript")
LocalScript638 = Instance.new("LocalScript")
StringValue639 = Instance.new("StringValue")
Animation640 = Instance.new("Animation")
NumberValue641 = Instance.new("NumberValue")
Animation642 = Instance.new("Animation")
NumberValue643 = Instance.new("NumberValue")
StringValue644 = Instance.new("StringValue")
Animation645 = Instance.new("Animation")
StringValue646 = Instance.new("StringValue")
Animation647 = Instance.new("Animation")
StringValue648 = Instance.new("StringValue")
Animation649 = Instance.new("Animation")
StringValue650 = Instance.new("StringValue")
Animation651 = Instance.new("Animation")
StringValue652 = Instance.new("StringValue")
Animation653 = Instance.new("Animation")
StringValue654 = Instance.new("StringValue")
Animation655 = Instance.new("Animation")
StringValue656 = Instance.new("StringValue")
Animation657 = Instance.new("Animation")
Part658 = Instance.new("Part")
SpecialMesh659 = Instance.new("SpecialMesh")
Part660 = Instance.new("Part")
Motor6D661 = Instance.new("Motor6D")
Part662 = Instance.new("Part")
SpecialMesh663 = Instance.new("SpecialMesh")
Part664 = Instance.new("Part")
SpecialMesh665 = Instance.new("SpecialMesh")
Part666 = Instance.new("Part")
SpecialMesh667 = Instance.new("SpecialMesh")
Part668 = Instance.new("Part")
SpecialMesh669 = Instance.new("SpecialMesh")
Part670 = Instance.new("Part")
Decal671 = Instance.new("Decal")
Motor6D672 = Instance.new("Motor6D")
Motor6D673 = Instance.new("Motor6D")
Motor6D674 = Instance.new("Motor6D")
Motor6D675 = Instance.new("Motor6D")
Motor6D676 = Instance.new("Motor6D")
SpecialMesh677 = Instance.new("SpecialMesh")
Model678 = Instance.new("Model")
BodyColors679 = Instance.new("BodyColors")
Script680 = Instance.new("Script")
Script681 = Instance.new("Script")
LocalScript682 = Instance.new("LocalScript")
LocalScript683 = Instance.new("LocalScript")
StringValue684 = Instance.new("StringValue")
Animation685 = Instance.new("Animation")
NumberValue686 = Instance.new("NumberValue")
Animation687 = Instance.new("Animation")
NumberValue688 = Instance.new("NumberValue")
StringValue689 = Instance.new("StringValue")
Animation690 = Instance.new("Animation")
StringValue691 = Instance.new("StringValue")
Animation692 = Instance.new("Animation")
StringValue693 = Instance.new("StringValue")
Animation694 = Instance.new("Animation")
StringValue695 = Instance.new("StringValue")
Animation696 = Instance.new("Animation")
StringValue697 = Instance.new("StringValue")
Animation698 = Instance.new("Animation")
StringValue699 = Instance.new("StringValue")
Animation700 = Instance.new("Animation")
StringValue701 = Instance.new("StringValue")
Animation702 = Instance.new("Animation")
Part703 = Instance.new("Part")
SpecialMesh704 = Instance.new("SpecialMesh")
Part705 = Instance.new("Part")
Motor6D706 = Instance.new("Motor6D")
Part707 = Instance.new("Part")
SpecialMesh708 = Instance.new("SpecialMesh")
Part709 = Instance.new("Part")
SpecialMesh710 = Instance.new("SpecialMesh")
Part711 = Instance.new("Part")
SpecialMesh712 = Instance.new("SpecialMesh")
Part713 = Instance.new("Part")
SpecialMesh714 = Instance.new("SpecialMesh")
Part715 = Instance.new("Part")
Decal716 = Instance.new("Decal")
Motor6D717 = Instance.new("Motor6D")
Motor6D718 = Instance.new("Motor6D")
Motor6D719 = Instance.new("Motor6D")
Motor6D720 = Instance.new("Motor6D")
Motor6D721 = Instance.new("Motor6D")
SpecialMesh722 = Instance.new("SpecialMesh")
Model723 = Instance.new("Model")
BodyColors724 = Instance.new("BodyColors")
Script725 = Instance.new("Script")
Script726 = Instance.new("Script")
LocalScript727 = Instance.new("LocalScript")
LocalScript728 = Instance.new("LocalScript")
StringValue729 = Instance.new("StringValue")
Animation730 = Instance.new("Animation")
NumberValue731 = Instance.new("NumberValue")
Animation732 = Instance.new("Animation")
NumberValue733 = Instance.new("NumberValue")
StringValue734 = Instance.new("StringValue")
Animation735 = Instance.new("Animation")
StringValue736 = Instance.new("StringValue")
Animation737 = Instance.new("Animation")
StringValue738 = Instance.new("StringValue")
Animation739 = Instance.new("Animation")
StringValue740 = Instance.new("StringValue")
Animation741 = Instance.new("Animation")
StringValue742 = Instance.new("StringValue")
Animation743 = Instance.new("Animation")
StringValue744 = Instance.new("StringValue")
Animation745 = Instance.new("Animation")
StringValue746 = Instance.new("StringValue")
Animation747 = Instance.new("Animation")
Part748 = Instance.new("Part")
SpecialMesh749 = Instance.new("SpecialMesh")
Part750 = Instance.new("Part")
Motor6D751 = Instance.new("Motor6D")
Part752 = Instance.new("Part")
SpecialMesh753 = Instance.new("SpecialMesh")
Part754 = Instance.new("Part")
SpecialMesh755 = Instance.new("SpecialMesh")
Part756 = Instance.new("Part")
SpecialMesh757 = Instance.new("SpecialMesh")
Part758 = Instance.new("Part")
SpecialMesh759 = Instance.new("SpecialMesh")
Part760 = Instance.new("Part")
Decal761 = Instance.new("Decal")
Motor6D762 = Instance.new("Motor6D")
Motor6D763 = Instance.new("Motor6D")
Motor6D764 = Instance.new("Motor6D")
Motor6D765 = Instance.new("Motor6D")
Motor6D766 = Instance.new("Motor6D")
SpecialMesh767 = Instance.new("SpecialMesh")
Model768 = Instance.new("Model")
BodyColors769 = Instance.new("BodyColors")
Script770 = Instance.new("Script")
Script771 = Instance.new("Script")
LocalScript772 = Instance.new("LocalScript")
LocalScript773 = Instance.new("LocalScript")
StringValue774 = Instance.new("StringValue")
Animation775 = Instance.new("Animation")
NumberValue776 = Instance.new("NumberValue")
Animation777 = Instance.new("Animation")
NumberValue778 = Instance.new("NumberValue")
StringValue779 = Instance.new("StringValue")
Animation780 = Instance.new("Animation")
StringValue781 = Instance.new("StringValue")
Animation782 = Instance.new("Animation")
StringValue783 = Instance.new("StringValue")
Animation784 = Instance.new("Animation")
StringValue785 = Instance.new("StringValue")
Animation786 = Instance.new("Animation")
StringValue787 = Instance.new("StringValue")
Animation788 = Instance.new("Animation")
StringValue789 = Instance.new("StringValue")
Animation790 = Instance.new("Animation")
StringValue791 = Instance.new("StringValue")
Animation792 = Instance.new("Animation")
Part793 = Instance.new("Part")
SpecialMesh794 = Instance.new("SpecialMesh")
Part795 = Instance.new("Part")
Motor6D796 = Instance.new("Motor6D")
Part797 = Instance.new("Part")
SpecialMesh798 = Instance.new("SpecialMesh")
Part799 = Instance.new("Part")
SpecialMesh800 = Instance.new("SpecialMesh")
Part801 = Instance.new("Part")
SpecialMesh802 = Instance.new("SpecialMesh")
Part803 = Instance.new("Part")
SpecialMesh804 = Instance.new("SpecialMesh")
Part805 = Instance.new("Part")
Decal806 = Instance.new("Decal")
Motor6D807 = Instance.new("Motor6D")
Motor6D808 = Instance.new("Motor6D")
Motor6D809 = Instance.new("Motor6D")
Motor6D810 = Instance.new("Motor6D")
Motor6D811 = Instance.new("Motor6D")
SpecialMesh812 = Instance.new("SpecialMesh")
Model813 = Instance.new("Model")
BodyColors814 = Instance.new("BodyColors")
Script815 = Instance.new("Script")
Script816 = Instance.new("Script")
LocalScript817 = Instance.new("LocalScript")
LocalScript818 = Instance.new("LocalScript")
StringValue819 = Instance.new("StringValue")
Animation820 = Instance.new("Animation")
NumberValue821 = Instance.new("NumberValue")
Animation822 = Instance.new("Animation")
NumberValue823 = Instance.new("NumberValue")
StringValue824 = Instance.new("StringValue")
Animation825 = Instance.new("Animation")
StringValue826 = Instance.new("StringValue")
Animation827 = Instance.new("Animation")
StringValue828 = Instance.new("StringValue")
Animation829 = Instance.new("Animation")
StringValue830 = Instance.new("StringValue")
Animation831 = Instance.new("Animation")
StringValue832 = Instance.new("StringValue")
Animation833 = Instance.new("Animation")
StringValue834 = Instance.new("StringValue")
Animation835 = Instance.new("Animation")
StringValue836 = Instance.new("StringValue")
Animation837 = Instance.new("Animation")
Part838 = Instance.new("Part")
SpecialMesh839 = Instance.new("SpecialMesh")
Part840 = Instance.new("Part")
Motor6D841 = Instance.new("Motor6D")
Part842 = Instance.new("Part")
SpecialMesh843 = Instance.new("SpecialMesh")
Part844 = Instance.new("Part")
SpecialMesh845 = Instance.new("SpecialMesh")
Part846 = Instance.new("Part")
SpecialMesh847 = Instance.new("SpecialMesh")
Part848 = Instance.new("Part")
SpecialMesh849 = Instance.new("SpecialMesh")
Part850 = Instance.new("Part")
Decal851 = Instance.new("Decal")
Motor6D852 = Instance.new("Motor6D")
Motor6D853 = Instance.new("Motor6D")
Motor6D854 = Instance.new("Motor6D")
Motor6D855 = Instance.new("Motor6D")
Motor6D856 = Instance.new("Motor6D")
SpecialMesh857 = Instance.new("SpecialMesh")
Model858 = Instance.new("Model")
BodyColors859 = Instance.new("BodyColors")
Script860 = Instance.new("Script")
Script861 = Instance.new("Script")
LocalScript862 = Instance.new("LocalScript")
LocalScript863 = Instance.new("LocalScript")
StringValue864 = Instance.new("StringValue")
Animation865 = Instance.new("Animation")
NumberValue866 = Instance.new("NumberValue")
Animation867 = Instance.new("Animation")
NumberValue868 = Instance.new("NumberValue")
StringValue869 = Instance.new("StringValue")
Animation870 = Instance.new("Animation")
StringValue871 = Instance.new("StringValue")
Animation872 = Instance.new("Animation")
StringValue873 = Instance.new("StringValue")
Animation874 = Instance.new("Animation")
StringValue875 = Instance.new("StringValue")
Animation876 = Instance.new("Animation")
StringValue877 = Instance.new("StringValue")
Animation878 = Instance.new("Animation")
StringValue879 = Instance.new("StringValue")
Animation880 = Instance.new("Animation")
StringValue881 = Instance.new("StringValue")
Animation882 = Instance.new("Animation")
Part883 = Instance.new("Part")
SpecialMesh884 = Instance.new("SpecialMesh")
Part885 = Instance.new("Part")
Motor6D886 = Instance.new("Motor6D")
Part887 = Instance.new("Part")
SpecialMesh888 = Instance.new("SpecialMesh")
Part889 = Instance.new("Part")
SpecialMesh890 = Instance.new("SpecialMesh")
Part891 = Instance.new("Part")
SpecialMesh892 = Instance.new("SpecialMesh")
Part893 = Instance.new("Part")
SpecialMesh894 = Instance.new("SpecialMesh")
Part895 = Instance.new("Part")
Decal896 = Instance.new("Decal")
Motor6D897 = Instance.new("Motor6D")
Motor6D898 = Instance.new("Motor6D")
Motor6D899 = Instance.new("Motor6D")
Motor6D900 = Instance.new("Motor6D")
Motor6D901 = Instance.new("Motor6D")
SpecialMesh902 = Instance.new("SpecialMesh")
Model0.Name = "DanTDM"
Model0.Parent = mas
BodyColors1.Parent = Model0
BodyColors1.HeadColor = BrickColor.new("Bright yellow")
BodyColors1.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors1.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors1.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors1.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors1.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors1.RightArmColor = BrickColor.new("Bright yellow")
BodyColors1.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors1.RightLegColor = BrickColor.new("Bright yellow")
BodyColors1.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors1.TorsoColor = BrickColor.new("Bright yellow")
BodyColors1.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script2.Name = "Health"
Script2.Parent = Model0
table.insert(cors,sandbox(Script2,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild("Head")
local Humanoid = Figure:WaitForChild("Humanoid")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script3.Name = "Sound"
Script3.Parent = Model0
table.insert(cors,sandbox(Script3,function()
---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
--Remove the local script if you copy this into an NPC.

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

function newSound(name, id)
	local sound = Instance.new("Sound")
	sound.SoundId = id
	sound.Name = name
	sound.archivable = false
	sound.Parent = script.Parent.Head
	return sound
end

-- declarations

local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
sRunning.Looped = true
local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
sSwimming.Looped = true
local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
sClimbing.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")
local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
local filteringEnabled = game.Workspace.FilteringEnabled

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

if hasPlayer == nil then
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)
end

end))
LocalScript4.Name = "LocalSound"
LocalScript4.Parent = Script3
table.insert(cors,sandbox(LocalScript4,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript5.Name = "Animate"
LocalScript5.Parent = Model0
table.insert(cors,sandbox(LocalScript5,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue6.Name = "idle"
StringValue6.Parent = LocalScript5
Animation7.Name = "Animation1"
Animation7.Parent = StringValue6
Animation7.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue8.Name = "Weight"
NumberValue8.Parent = Animation7
NumberValue8.Value = 9
Animation9.Name = "Animation2"
Animation9.Parent = StringValue6
Animation9.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue10.Name = "Weight"
NumberValue10.Parent = Animation9
NumberValue10.Value = 1
StringValue11.Name = "walk"
StringValue11.Parent = LocalScript5
Animation12.Name = "WalkAnim"
Animation12.Parent = StringValue11
Animation12.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue13.Name = "run"
StringValue13.Parent = LocalScript5
Animation14.Name = "RunAnim"
Animation14.Parent = StringValue13
Animation14.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue15.Name = "jump"
StringValue15.Parent = LocalScript5
Animation16.Name = "JumpAnim"
Animation16.Parent = StringValue15
Animation16.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue17.Name = "climb"
StringValue17.Parent = LocalScript5
Animation18.Name = "ClimbAnim"
Animation18.Parent = StringValue17
Animation18.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue19.Name = "toolnone"
StringValue19.Parent = LocalScript5
Animation20.Name = "ToolNoneAnim"
Animation20.Parent = StringValue19
Animation20.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue21.Name = "fall"
StringValue21.Parent = LocalScript5
Animation22.Name = "FallAnim"
Animation22.Parent = StringValue21
Animation22.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue23.Name = "sit"
StringValue23.Parent = LocalScript5
Animation24.Name = "SitAnim"
Animation24.Parent = StringValue23
Animation24.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part25.Name = "Head"
Part25.Parent = Model0
Part25.CFrame = CFrame.new(-8.8614502, 57.424427, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part25.Position = Vector3.new(-8.8614502, 57.424427, 16.3850555)
Part25.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part25.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part25.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part25.BrickColor = BrickColor.new("Bright yellow")
Part25.TopSurface = Enum.SurfaceType.Smooth
Part25.brickColor = BrickColor.new("Bright yellow")
Part25.FormFactor = Enum.FormFactor.Symmetric
Part25.formFactor = Enum.FormFactor.Symmetric
SpecialMesh26.Parent = Part25
SpecialMesh26.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh26.TextureId = "rbxassetid://300344518"
SpecialMesh26.MeshType = Enum.MeshType.FileMesh
Part27.Name = "HumanoidRootPart"
Part27.Parent = Model0
Part27.CFrame = CFrame.new(-8.8614502, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part27.Position = Vector3.new(-8.8614502, 52.1646652, 16.3850555)
Part27.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part27.Transparency = 1
Part27.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part27.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part27.BottomSurface = Enum.SurfaceType.Smooth
Part27.BrickColor = BrickColor.new("Bright blue")
Part27.CanCollide = false
Part27.LeftParamA = 0
Part27.LeftParamB = 0
Part27.RightParamA = 0
Part27.RightParamB = 0
Part27.TopSurface = Enum.SurfaceType.Smooth
Part27.brickColor = BrickColor.new("Bright blue")
Part27.FormFactor = Enum.FormFactor.Symmetric
Part27.formFactor = Enum.FormFactor.Symmetric
Motor6D28.Name = "RootJoint"
Motor6D28.Parent = Part27
Motor6D28.MaxVelocity = 0.10000000149012
Motor6D28.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D28.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D28.Part0 = Part27
Motor6D28.Part1 = Part37
Motor6D28.part1 = Part37
Part29.Name = "Left Arm"
Part29.Parent = Model0
Part29.CFrame = CFrame.new(-14.1212111, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part29.Position = Vector3.new(-14.1212111, 52.1646652, 16.3850555)
Part29.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part29.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part29.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part29.BrickColor = BrickColor.new("Bright yellow")
Part29.CanCollide = false
Part29.brickColor = BrickColor.new("Bright yellow")
Part29.FormFactor = Enum.FormFactor.Symmetric
Part29.formFactor = Enum.FormFactor.Symmetric
SpecialMesh30.Parent = Part29
SpecialMesh30.MeshId = "rbxassetid://300344022"
SpecialMesh30.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh30.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh30.TextureId = "rbxassetid://300344518"
SpecialMesh30.MeshType = Enum.MeshType.FileMesh
Part31.Name = "Left Leg"
Part31.Parent = Model0
Part31.CFrame = CFrame.new(-10.6147041, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part31.Position = Vector3.new(-10.6147041, 45.1516495, 16.3850555)
Part31.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part31.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part31.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part31.BottomSurface = Enum.SurfaceType.Smooth
Part31.BrickColor = BrickColor.new("Bright yellow")
Part31.CanCollide = false
Part31.brickColor = BrickColor.new("Bright yellow")
Part31.FormFactor = Enum.FormFactor.Symmetric
Part31.formFactor = Enum.FormFactor.Symmetric
SpecialMesh32.Parent = Part31
SpecialMesh32.MeshId = "rbxassetid://300344043"
SpecialMesh32.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh32.TextureId = "rbxassetid://300344518"
SpecialMesh32.MeshType = Enum.MeshType.FileMesh
Part33.Name = "Right Arm"
Part33.Parent = Model0
Part33.CFrame = CFrame.new(-3.60168934, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part33.Position = Vector3.new(-3.60168934, 52.1646652, 16.3850555)
Part33.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part33.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part33.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part33.BrickColor = BrickColor.new("Bright yellow")
Part33.CanCollide = false
Part33.brickColor = BrickColor.new("Bright yellow")
Part33.FormFactor = Enum.FormFactor.Symmetric
Part33.formFactor = Enum.FormFactor.Symmetric
SpecialMesh34.Parent = Part33
SpecialMesh34.MeshId = "rbxassetid://300344064"
SpecialMesh34.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh34.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh34.TextureId = "rbxassetid://300344518"
SpecialMesh34.MeshType = Enum.MeshType.FileMesh
Part35.Name = "Right Leg"
Part35.Parent = Model0
Part35.CFrame = CFrame.new(-7.10819674, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part35.Position = Vector3.new(-7.10819674, 45.1516495, 16.3850555)
Part35.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part35.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part35.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part35.BottomSurface = Enum.SurfaceType.Smooth
Part35.BrickColor = BrickColor.new("Bright yellow")
Part35.CanCollide = false
Part35.brickColor = BrickColor.new("Bright yellow")
Part35.FormFactor = Enum.FormFactor.Symmetric
Part35.formFactor = Enum.FormFactor.Symmetric
SpecialMesh36.Parent = Part35
SpecialMesh36.MeshId = "rbxassetid://300344090"
SpecialMesh36.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh36.TextureId = "rbxassetid://300344518"
SpecialMesh36.MeshType = Enum.MeshType.FileMesh
Part37.Name = "Torso"
Part37.Parent = Model0
Part37.CFrame = CFrame.new(-8.8614502, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part37.Position = Vector3.new(-8.8614502, 52.1646652, 16.3850555)
Part37.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part37.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part37.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part37.BrickColor = BrickColor.new("Bright yellow")
Part37.LeftParamA = 0
Part37.LeftParamB = 0
Part37.LeftSurface = Enum.SurfaceType.Weld
Part37.RightParamA = 0
Part37.RightParamB = 0
Part37.RightSurface = Enum.SurfaceType.Weld
Part37.brickColor = BrickColor.new("Bright yellow")
Part37.FormFactor = Enum.FormFactor.Symmetric
Part37.formFactor = Enum.FormFactor.Symmetric
Decal38.Name = "roblox"
Decal38.Parent = Part37
Motor6D39.Name = "Right Shoulder"
Motor6D39.Parent = Part37
Motor6D39.MaxVelocity = 0.10000000149012
Motor6D39.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D39.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D39.Part0 = Part37
Motor6D39.Part1 = Part33
Motor6D39.part1 = Part33
Motor6D40.Name = "Left Shoulder"
Motor6D40.Parent = Part37
Motor6D40.MaxVelocity = 0.10000000149012
Motor6D40.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D40.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D40.Part0 = Part37
Motor6D40.Part1 = Part29
Motor6D40.part1 = Part29
Motor6D41.Name = "Right Hip"
Motor6D41.Parent = Part37
Motor6D41.MaxVelocity = 0.10000000149012
Motor6D41.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D41.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D41.Part0 = Part37
Motor6D41.Part1 = Part35
Motor6D41.part1 = Part35
Motor6D42.Name = "Left Hip"
Motor6D42.Parent = Part37
Motor6D42.MaxVelocity = 0.10000000149012
Motor6D42.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D42.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D42.Part0 = Part37
Motor6D42.Part1 = Part31
Motor6D42.part1 = Part31
Motor6D43.Name = "Neck"
Motor6D43.Parent = Part37
Motor6D43.MaxVelocity = 0.10000000149012
Motor6D43.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D43.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D43.Part0 = Part37
Motor6D43.Part1 = Part25
Motor6D43.part1 = Part25
SpecialMesh44.Parent = Part37
SpecialMesh44.MeshId = "rbxassetid://300344229"
SpecialMesh44.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh44.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh44.TextureId = "rbxassetid://300344518"
SpecialMesh44.MeshType = Enum.MeshType.FileMesh
Sound45.Parent = Model0
Sound45.Looped = true
Sound45.PlayOnRemove = true
Sound45.Playing = true
Sound45.SoundId = "rbxassetid://643380337"
Sound45.Volume = 10
Model46.Name = "DanTDM"
Model46.Parent = mas
BodyColors47.Parent = Model46
BodyColors47.HeadColor = BrickColor.new("Bright yellow")
BodyColors47.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors47.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors47.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors47.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors47.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors47.RightArmColor = BrickColor.new("Bright yellow")
BodyColors47.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors47.RightLegColor = BrickColor.new("Bright yellow")
BodyColors47.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors47.TorsoColor = BrickColor.new("Bright yellow")
BodyColors47.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script48.Name = "Health"
Script48.Parent = Model46
table.insert(cors,sandbox(Script48,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild("Head")
local Humanoid = Figure:WaitForChild("Humanoid")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script49.Name = "Sound"
Script49.Parent = Model46
table.insert(cors,sandbox(Script49,function()
---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
--Remove the local script if you copy this into an NPC.

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

function newSound(name, id)
	local sound = Instance.new("Sound")
	sound.SoundId = id
	sound.Name = name
	sound.archivable = false
	sound.Parent = script.Parent.Head
	return sound
end

-- declarations

local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
sRunning.Looped = true
local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
sSwimming.Looped = true
local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
sClimbing.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")
local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
local filteringEnabled = game.Workspace.FilteringEnabled

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

if hasPlayer == nil then
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)
end

end))
LocalScript50.Name = "LocalSound"
LocalScript50.Parent = Script49
table.insert(cors,sandbox(LocalScript50,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript51.Name = "Animate"
LocalScript51.Parent = Model46
table.insert(cors,sandbox(LocalScript51,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue52.Name = "idle"
StringValue52.Parent = LocalScript51
Animation53.Name = "Animation1"
Animation53.Parent = StringValue52
Animation53.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue54.Name = "Weight"
NumberValue54.Parent = Animation53
NumberValue54.Value = 9
Animation55.Name = "Animation2"
Animation55.Parent = StringValue52
Animation55.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue56.Name = "Weight"
NumberValue56.Parent = Animation55
NumberValue56.Value = 1
StringValue57.Name = "walk"
StringValue57.Parent = LocalScript51
Animation58.Name = "WalkAnim"
Animation58.Parent = StringValue57
Animation58.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue59.Name = "run"
StringValue59.Parent = LocalScript51
Animation60.Name = "RunAnim"
Animation60.Parent = StringValue59
Animation60.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue61.Name = "jump"
StringValue61.Parent = LocalScript51
Animation62.Name = "JumpAnim"
Animation62.Parent = StringValue61
Animation62.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue63.Name = "climb"
StringValue63.Parent = LocalScript51
Animation64.Name = "ClimbAnim"
Animation64.Parent = StringValue63
Animation64.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue65.Name = "toolnone"
StringValue65.Parent = LocalScript51
Animation66.Name = "ToolNoneAnim"
Animation66.Parent = StringValue65
Animation66.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue67.Name = "fall"
StringValue67.Parent = LocalScript51
Animation68.Name = "FallAnim"
Animation68.Parent = StringValue67
Animation68.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue69.Name = "sit"
StringValue69.Parent = LocalScript51
Animation70.Name = "SitAnim"
Animation70.Parent = StringValue69
Animation70.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part71.Name = "Head"
Part71.Parent = Model46
Part71.CFrame = CFrame.new(2.30972672, 57.424427, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part71.Position = Vector3.new(2.30972672, 57.424427, 16.3850555)
Part71.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part71.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part71.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part71.BrickColor = BrickColor.new("Bright yellow")
Part71.TopSurface = Enum.SurfaceType.Smooth
Part71.brickColor = BrickColor.new("Bright yellow")
Part71.FormFactor = Enum.FormFactor.Symmetric
Part71.formFactor = Enum.FormFactor.Symmetric
SpecialMesh72.Parent = Part71
SpecialMesh72.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh72.TextureId = "rbxassetid://300344518"
SpecialMesh72.MeshType = Enum.MeshType.FileMesh
Part73.Name = "HumanoidRootPart"
Part73.Parent = Model46
Part73.CFrame = CFrame.new(2.30972672, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part73.Position = Vector3.new(2.30972672, 52.1646652, 16.3850555)
Part73.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part73.Transparency = 1
Part73.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part73.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part73.BottomSurface = Enum.SurfaceType.Smooth
Part73.BrickColor = BrickColor.new("Bright blue")
Part73.CanCollide = false
Part73.LeftParamA = 0
Part73.LeftParamB = 0
Part73.RightParamA = 0
Part73.RightParamB = 0
Part73.TopSurface = Enum.SurfaceType.Smooth
Part73.brickColor = BrickColor.new("Bright blue")
Part73.FormFactor = Enum.FormFactor.Symmetric
Part73.formFactor = Enum.FormFactor.Symmetric
Motor6D74.Name = "RootJoint"
Motor6D74.Parent = Part73
Motor6D74.MaxVelocity = 0.10000000149012
Motor6D74.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D74.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D74.Part0 = Part73
Motor6D74.Part1 = Part83
Motor6D74.part1 = Part83
Part75.Name = "Left Arm"
Part75.Parent = Model46
Part75.CFrame = CFrame.new(-2.95003414, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part75.Position = Vector3.new(-2.95003414, 52.1646652, 16.3850555)
Part75.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part75.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part75.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part75.BrickColor = BrickColor.new("Bright yellow")
Part75.CanCollide = false
Part75.brickColor = BrickColor.new("Bright yellow")
Part75.FormFactor = Enum.FormFactor.Symmetric
Part75.formFactor = Enum.FormFactor.Symmetric
SpecialMesh76.Parent = Part75
SpecialMesh76.MeshId = "rbxassetid://300344022"
SpecialMesh76.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh76.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh76.TextureId = "rbxassetid://300344518"
SpecialMesh76.MeshType = Enum.MeshType.FileMesh
Part77.Name = "Left Leg"
Part77.Parent = Model46
Part77.CFrame = CFrame.new(0.556473136, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part77.Position = Vector3.new(0.556473136, 45.1516495, 16.3850555)
Part77.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part77.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part77.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part77.BottomSurface = Enum.SurfaceType.Smooth
Part77.BrickColor = BrickColor.new("Bright yellow")
Part77.CanCollide = false
Part77.brickColor = BrickColor.new("Bright yellow")
Part77.FormFactor = Enum.FormFactor.Symmetric
Part77.formFactor = Enum.FormFactor.Symmetric
SpecialMesh78.Parent = Part77
SpecialMesh78.MeshId = "rbxassetid://300344043"
SpecialMesh78.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh78.TextureId = "rbxassetid://300344518"
SpecialMesh78.MeshType = Enum.MeshType.FileMesh
Part79.Name = "Right Arm"
Part79.Parent = Model46
Part79.CFrame = CFrame.new(7.56948757, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part79.Position = Vector3.new(7.56948757, 52.1646652, 16.3850555)
Part79.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part79.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part79.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part79.BrickColor = BrickColor.new("Bright yellow")
Part79.CanCollide = false
Part79.brickColor = BrickColor.new("Bright yellow")
Part79.FormFactor = Enum.FormFactor.Symmetric
Part79.formFactor = Enum.FormFactor.Symmetric
SpecialMesh80.Parent = Part79
SpecialMesh80.MeshId = "rbxassetid://300344064"
SpecialMesh80.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh80.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh80.TextureId = "rbxassetid://300344518"
SpecialMesh80.MeshType = Enum.MeshType.FileMesh
Part81.Name = "Right Leg"
Part81.Parent = Model46
Part81.CFrame = CFrame.new(4.06298018, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part81.Position = Vector3.new(4.06298018, 45.1516495, 16.3850555)
Part81.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part81.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part81.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part81.BottomSurface = Enum.SurfaceType.Smooth
Part81.BrickColor = BrickColor.new("Bright yellow")
Part81.CanCollide = false
Part81.brickColor = BrickColor.new("Bright yellow")
Part81.FormFactor = Enum.FormFactor.Symmetric
Part81.formFactor = Enum.FormFactor.Symmetric
SpecialMesh82.Parent = Part81
SpecialMesh82.MeshId = "rbxassetid://300344090"
SpecialMesh82.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh82.TextureId = "rbxassetid://300344518"
SpecialMesh82.MeshType = Enum.MeshType.FileMesh
Part83.Name = "Torso"
Part83.Parent = Model46
Part83.CFrame = CFrame.new(2.30972672, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part83.Position = Vector3.new(2.30972672, 52.1646652, 16.3850555)
Part83.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part83.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part83.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part83.BrickColor = BrickColor.new("Bright yellow")
Part83.LeftParamA = 0
Part83.LeftParamB = 0
Part83.LeftSurface = Enum.SurfaceType.Weld
Part83.RightParamA = 0
Part83.RightParamB = 0
Part83.RightSurface = Enum.SurfaceType.Weld
Part83.brickColor = BrickColor.new("Bright yellow")
Part83.FormFactor = Enum.FormFactor.Symmetric
Part83.formFactor = Enum.FormFactor.Symmetric
Decal84.Name = "roblox"
Decal84.Parent = Part83
Motor6D85.Name = "Right Shoulder"
Motor6D85.Parent = Part83
Motor6D85.MaxVelocity = 0.10000000149012
Motor6D85.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D85.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D85.Part0 = Part83
Motor6D85.Part1 = Part79
Motor6D85.part1 = Part79
Motor6D86.Name = "Left Shoulder"
Motor6D86.Parent = Part83
Motor6D86.MaxVelocity = 0.10000000149012
Motor6D86.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D86.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D86.Part0 = Part83
Motor6D86.Part1 = Part75
Motor6D86.part1 = Part75
Motor6D87.Name = "Right Hip"
Motor6D87.Parent = Part83
Motor6D87.MaxVelocity = 0.10000000149012
Motor6D87.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D87.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D87.Part0 = Part83
Motor6D87.Part1 = Part81
Motor6D87.part1 = Part81
Motor6D88.Name = "Left Hip"
Motor6D88.Parent = Part83
Motor6D88.MaxVelocity = 0.10000000149012
Motor6D88.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D88.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D88.Part0 = Part83
Motor6D88.Part1 = Part77
Motor6D88.part1 = Part77
Motor6D89.Name = "Neck"
Motor6D89.Parent = Part83
Motor6D89.MaxVelocity = 0.10000000149012
Motor6D89.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D89.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D89.Part0 = Part83
Motor6D89.Part1 = Part71
Motor6D89.part1 = Part71
SpecialMesh90.Parent = Part83
SpecialMesh90.MeshId = "rbxassetid://300344229"
SpecialMesh90.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh90.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh90.TextureId = "rbxassetid://300344518"
SpecialMesh90.MeshType = Enum.MeshType.FileMesh
Sky91.Name = "dantdm sky"
Sky91.Parent = Model46
Sky91.MoonTextureId = "rbxassetid://459587226"
Sky91.SkyboxBk = "rbxassetid://459587226"
Sky91.SkyboxDn = "rbxassetid://459587226"
Sky91.SkyboxFt = "rbxassetid://459587226"
Sky91.SkyboxLf = "rbxassetid://459587226"
Sky91.SkyboxRt = "rbxassetid://459587226"
Sky91.SkyboxUp = "rbxassetid://459587226"
Script92.Parent = Sky91
table.insert(cors,sandbox(Script92,function()
script.Parent = game.Lighting
end))
Model93.Name = "DanTDM"
Model93.Parent = mas
BodyColors94.Parent = Model93
BodyColors94.HeadColor = BrickColor.new("Bright yellow")
BodyColors94.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors94.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors94.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors94.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors94.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors94.RightArmColor = BrickColor.new("Bright yellow")
BodyColors94.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors94.RightLegColor = BrickColor.new("Bright yellow")
BodyColors94.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors94.TorsoColor = BrickColor.new("Bright yellow")
BodyColors94.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script95.Name = "Health"
Script95.Parent = Model93
table.insert(cors,sandbox(Script95,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild("Head")
local Humanoid = Figure:WaitForChild("Humanoid")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script96.Name = "Sound"
Script96.Parent = Model93
table.insert(cors,sandbox(Script96,function()
---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
--Remove the local script if you copy this into an NPC.

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

function newSound(name, id)
	local sound = Instance.new("Sound")
	sound.SoundId = id
	sound.Name = name
	sound.archivable = false
	sound.Parent = script.Parent.Head
	return sound
end

-- declarations

local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
sRunning.Looped = true
local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
sSwimming.Looped = true
local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
sClimbing.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")
local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
local filteringEnabled = game.Workspace.FilteringEnabled

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

if hasPlayer == nil then
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)
end

end))
LocalScript97.Name = "LocalSound"
LocalScript97.Parent = Script96
table.insert(cors,sandbox(LocalScript97,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript98.Name = "Animate"
LocalScript98.Parent = Model93
table.insert(cors,sandbox(LocalScript98,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue99.Name = "idle"
StringValue99.Parent = LocalScript98
Animation100.Name = "Animation1"
Animation100.Parent = StringValue99
Animation100.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue101.Name = "Weight"
NumberValue101.Parent = Animation100
NumberValue101.Value = 9
Animation102.Name = "Animation2"
Animation102.Parent = StringValue99
Animation102.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue103.Name = "Weight"
NumberValue103.Parent = Animation102
NumberValue103.Value = 1
StringValue104.Name = "walk"
StringValue104.Parent = LocalScript98
Animation105.Name = "WalkAnim"
Animation105.Parent = StringValue104
Animation105.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue106.Name = "run"
StringValue106.Parent = LocalScript98
Animation107.Name = "RunAnim"
Animation107.Parent = StringValue106
Animation107.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue108.Name = "jump"
StringValue108.Parent = LocalScript98
Animation109.Name = "JumpAnim"
Animation109.Parent = StringValue108
Animation109.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue110.Name = "climb"
StringValue110.Parent = LocalScript98
Animation111.Name = "ClimbAnim"
Animation111.Parent = StringValue110
Animation111.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue112.Name = "toolnone"
StringValue112.Parent = LocalScript98
Animation113.Name = "ToolNoneAnim"
Animation113.Parent = StringValue112
Animation113.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue114.Name = "fall"
StringValue114.Parent = LocalScript98
Animation115.Name = "FallAnim"
Animation115.Parent = StringValue114
Animation115.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue116.Name = "sit"
StringValue116.Parent = LocalScript98
Animation117.Name = "SitAnim"
Animation117.Parent = StringValue116
Animation117.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part118.Name = "Head"
Part118.Parent = Model93
Part118.CFrame = CFrame.new(14.2657824, 57.424427, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part118.Position = Vector3.new(14.2657824, 57.424427, 16.3850555)
Part118.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part118.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part118.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part118.BrickColor = BrickColor.new("Bright yellow")
Part118.TopSurface = Enum.SurfaceType.Smooth
Part118.brickColor = BrickColor.new("Bright yellow")
Part118.FormFactor = Enum.FormFactor.Symmetric
Part118.formFactor = Enum.FormFactor.Symmetric
SpecialMesh119.Parent = Part118
SpecialMesh119.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh119.TextureId = "rbxassetid://300344518"
SpecialMesh119.MeshType = Enum.MeshType.FileMesh
Part120.Name = "HumanoidRootPart"
Part120.Parent = Model93
Part120.CFrame = CFrame.new(14.2657824, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part120.Position = Vector3.new(14.2657824, 52.1646652, 16.3850555)
Part120.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part120.Transparency = 1
Part120.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part120.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part120.BottomSurface = Enum.SurfaceType.Smooth
Part120.BrickColor = BrickColor.new("Bright blue")
Part120.CanCollide = false
Part120.LeftParamA = 0
Part120.LeftParamB = 0
Part120.RightParamA = 0
Part120.RightParamB = 0
Part120.TopSurface = Enum.SurfaceType.Smooth
Part120.brickColor = BrickColor.new("Bright blue")
Part120.FormFactor = Enum.FormFactor.Symmetric
Part120.formFactor = Enum.FormFactor.Symmetric
Motor6D121.Name = "RootJoint"
Motor6D121.Parent = Part120
Motor6D121.MaxVelocity = 0.10000000149012
Motor6D121.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D121.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D121.Part0 = Part120
Motor6D121.Part1 = Part130
Motor6D121.part1 = Part130
Part122.Name = "Left Arm"
Part122.Parent = Model93
Part122.CFrame = CFrame.new(9.0060215, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part122.Position = Vector3.new(9.0060215, 52.1646652, 16.3850555)
Part122.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part122.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part122.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part122.BrickColor = BrickColor.new("Bright yellow")
Part122.CanCollide = false
Part122.brickColor = BrickColor.new("Bright yellow")
Part122.FormFactor = Enum.FormFactor.Symmetric
Part122.formFactor = Enum.FormFactor.Symmetric
SpecialMesh123.Parent = Part122
SpecialMesh123.MeshId = "rbxassetid://300344022"
SpecialMesh123.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh123.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh123.TextureId = "rbxassetid://300344518"
SpecialMesh123.MeshType = Enum.MeshType.FileMesh
Part124.Name = "Left Leg"
Part124.Parent = Model93
Part124.CFrame = CFrame.new(12.5125284, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part124.Position = Vector3.new(12.5125284, 45.1516495, 16.3850555)
Part124.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part124.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part124.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part124.BottomSurface = Enum.SurfaceType.Smooth
Part124.BrickColor = BrickColor.new("Bright yellow")
Part124.CanCollide = false
Part124.brickColor = BrickColor.new("Bright yellow")
Part124.FormFactor = Enum.FormFactor.Symmetric
Part124.formFactor = Enum.FormFactor.Symmetric
SpecialMesh125.Parent = Part124
SpecialMesh125.MeshId = "rbxassetid://300344043"
SpecialMesh125.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh125.TextureId = "rbxassetid://300344518"
SpecialMesh125.MeshType = Enum.MeshType.FileMesh
Part126.Name = "Right Arm"
Part126.Parent = Model93
Part126.CFrame = CFrame.new(19.5255432, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part126.Position = Vector3.new(19.5255432, 52.1646652, 16.3850555)
Part126.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part126.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part126.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part126.BrickColor = BrickColor.new("Bright yellow")
Part126.CanCollide = false
Part126.brickColor = BrickColor.new("Bright yellow")
Part126.FormFactor = Enum.FormFactor.Symmetric
Part126.formFactor = Enum.FormFactor.Symmetric
SpecialMesh127.Parent = Part126
SpecialMesh127.MeshId = "rbxassetid://300344064"
SpecialMesh127.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh127.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh127.TextureId = "rbxassetid://300344518"
SpecialMesh127.MeshType = Enum.MeshType.FileMesh
Part128.Name = "Right Leg"
Part128.Parent = Model93
Part128.CFrame = CFrame.new(16.0190353, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part128.Position = Vector3.new(16.0190353, 45.1516495, 16.3850555)
Part128.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part128.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part128.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part128.BottomSurface = Enum.SurfaceType.Smooth
Part128.BrickColor = BrickColor.new("Bright yellow")
Part128.CanCollide = false
Part128.brickColor = BrickColor.new("Bright yellow")
Part128.FormFactor = Enum.FormFactor.Symmetric
Part128.formFactor = Enum.FormFactor.Symmetric
SpecialMesh129.Parent = Part128
SpecialMesh129.MeshId = "rbxassetid://300344090"
SpecialMesh129.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh129.TextureId = "rbxassetid://300344518"
SpecialMesh129.MeshType = Enum.MeshType.FileMesh
Part130.Name = "Torso"
Part130.Parent = Model93
Part130.CFrame = CFrame.new(14.2657824, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part130.Position = Vector3.new(14.2657824, 52.1646652, 16.3850555)
Part130.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part130.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part130.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part130.BrickColor = BrickColor.new("Bright yellow")
Part130.LeftParamA = 0
Part130.LeftParamB = 0
Part130.LeftSurface = Enum.SurfaceType.Weld
Part130.RightParamA = 0
Part130.RightParamB = 0
Part130.RightSurface = Enum.SurfaceType.Weld
Part130.brickColor = BrickColor.new("Bright yellow")
Part130.FormFactor = Enum.FormFactor.Symmetric
Part130.formFactor = Enum.FormFactor.Symmetric
Decal131.Name = "roblox"
Decal131.Parent = Part130
Motor6D132.Name = "Right Shoulder"
Motor6D132.Parent = Part130
Motor6D132.MaxVelocity = 0.10000000149012
Motor6D132.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D132.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D132.Part0 = Part130
Motor6D132.Part1 = Part126
Motor6D132.part1 = Part126
Motor6D133.Name = "Left Shoulder"
Motor6D133.Parent = Part130
Motor6D133.MaxVelocity = 0.10000000149012
Motor6D133.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D133.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D133.Part0 = Part130
Motor6D133.Part1 = Part122
Motor6D133.part1 = Part122
Motor6D134.Name = "Right Hip"
Motor6D134.Parent = Part130
Motor6D134.MaxVelocity = 0.10000000149012
Motor6D134.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D134.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D134.Part0 = Part130
Motor6D134.Part1 = Part128
Motor6D134.part1 = Part128
Motor6D135.Name = "Left Hip"
Motor6D135.Parent = Part130
Motor6D135.MaxVelocity = 0.10000000149012
Motor6D135.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D135.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D135.Part0 = Part130
Motor6D135.Part1 = Part124
Motor6D135.part1 = Part124
Motor6D136.Name = "Neck"
Motor6D136.Parent = Part130
Motor6D136.MaxVelocity = 0.10000000149012
Motor6D136.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D136.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D136.Part0 = Part130
Motor6D136.Part1 = Part118
Motor6D136.part1 = Part118
SpecialMesh137.Parent = Part130
SpecialMesh137.MeshId = "rbxassetid://300344229"
SpecialMesh137.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh137.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh137.TextureId = "rbxassetid://300344518"
SpecialMesh137.MeshType = Enum.MeshType.FileMesh
Model138.Name = "DanTDM"
Model138.Parent = mas
BodyColors139.Parent = Model138
BodyColors139.HeadColor = BrickColor.new("Bright yellow")
BodyColors139.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors139.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors139.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors139.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors139.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors139.RightArmColor = BrickColor.new("Bright yellow")
BodyColors139.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors139.RightLegColor = BrickColor.new("Bright yellow")
BodyColors139.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors139.TorsoColor = BrickColor.new("Bright yellow")
BodyColors139.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script140.Name = "Health"
Script140.Parent = Model138
table.insert(cors,sandbox(Script140,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script141.Name = "Sound"
Script141.Parent = Model138
table.insert(cors,sandbox(Script141,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript142.Name = "LocalSound"
LocalScript142.Parent = Script141
table.insert(cors,sandbox(LocalScript142,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript143.Name = "Animate"
LocalScript143.Parent = Model138
table.insert(cors,sandbox(LocalScript143,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue144.Name = "idle"
StringValue144.Parent = LocalScript143
Animation145.Name = "Animation1"
Animation145.Parent = StringValue144
Animation145.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue146.Name = "Weight"
NumberValue146.Parent = Animation145
NumberValue146.Value = 9
Animation147.Name = "Animation2"
Animation147.Parent = StringValue144
Animation147.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue148.Name = "Weight"
NumberValue148.Parent = Animation147
NumberValue148.Value = 1
StringValue149.Name = "walk"
StringValue149.Parent = LocalScript143
Animation150.Name = "WalkAnim"
Animation150.Parent = StringValue149
Animation150.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue151.Name = "run"
StringValue151.Parent = LocalScript143
Animation152.Name = "RunAnim"
Animation152.Parent = StringValue151
Animation152.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue153.Name = "jump"
StringValue153.Parent = LocalScript143
Animation154.Name = "JumpAnim"
Animation154.Parent = StringValue153
Animation154.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue155.Name = "climb"
StringValue155.Parent = LocalScript143
Animation156.Name = "ClimbAnim"
Animation156.Parent = StringValue155
Animation156.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue157.Name = "toolnone"
StringValue157.Parent = LocalScript143
Animation158.Name = "ToolNoneAnim"
Animation158.Parent = StringValue157
Animation158.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue159.Name = "fall"
StringValue159.Parent = LocalScript143
Animation160.Name = "FallAnim"
Animation160.Parent = StringValue159
Animation160.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue161.Name = "sit"
StringValue161.Parent = LocalScript143
Animation162.Name = "SitAnim"
Animation162.Parent = StringValue161
Animation162.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part163.Name = "Head"
Part163.Parent = Model138
Part163.CFrame = CFrame.new(25.2900009, 57.424427, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part163.Position = Vector3.new(25.2900009, 57.424427, 16.3850555)
Part163.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part163.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part163.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part163.BrickColor = BrickColor.new("Bright yellow")
Part163.TopSurface = Enum.SurfaceType.Smooth
Part163.brickColor = BrickColor.new("Bright yellow")
Part163.FormFactor = Enum.FormFactor.Symmetric
Part163.formFactor = Enum.FormFactor.Symmetric
SpecialMesh164.Parent = Part163
SpecialMesh164.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh164.TextureId = "rbxassetid://300344518"
SpecialMesh164.MeshType = Enum.MeshType.FileMesh
Part165.Name = "HumanoidRootPart"
Part165.Parent = Model138
Part165.CFrame = CFrame.new(25.2900009, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part165.Position = Vector3.new(25.2900009, 52.1646652, 16.3850555)
Part165.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part165.Transparency = 1
Part165.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part165.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part165.BottomSurface = Enum.SurfaceType.Smooth
Part165.BrickColor = BrickColor.new("Bright blue")
Part165.CanCollide = false
Part165.LeftParamA = 0
Part165.LeftParamB = 0
Part165.RightParamA = 0
Part165.RightParamB = 0
Part165.TopSurface = Enum.SurfaceType.Smooth
Part165.brickColor = BrickColor.new("Bright blue")
Part165.FormFactor = Enum.FormFactor.Symmetric
Part165.formFactor = Enum.FormFactor.Symmetric
Motor6D166.Name = "RootJoint"
Motor6D166.Parent = Part165
Motor6D166.MaxVelocity = 0.10000000149012
Motor6D166.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D166.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D166.Part0 = Part165
Motor6D166.Part1 = Part175
Motor6D166.part1 = Part175
Part167.Name = "Left Arm"
Part167.Parent = Model138
Part167.CFrame = CFrame.new(20.0302391, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part167.Position = Vector3.new(20.0302391, 52.1646652, 16.3850555)
Part167.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part167.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part167.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part167.BrickColor = BrickColor.new("Bright yellow")
Part167.CanCollide = false
Part167.brickColor = BrickColor.new("Bright yellow")
Part167.FormFactor = Enum.FormFactor.Symmetric
Part167.formFactor = Enum.FormFactor.Symmetric
SpecialMesh168.Parent = Part167
SpecialMesh168.MeshId = "rbxassetid://300344022"
SpecialMesh168.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh168.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh168.TextureId = "rbxassetid://300344518"
SpecialMesh168.MeshType = Enum.MeshType.FileMesh
Part169.Name = "Left Leg"
Part169.Parent = Model138
Part169.CFrame = CFrame.new(23.536747, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part169.Position = Vector3.new(23.536747, 45.1516495, 16.3850555)
Part169.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part169.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part169.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part169.BottomSurface = Enum.SurfaceType.Smooth
Part169.BrickColor = BrickColor.new("Bright yellow")
Part169.CanCollide = false
Part169.brickColor = BrickColor.new("Bright yellow")
Part169.FormFactor = Enum.FormFactor.Symmetric
Part169.formFactor = Enum.FormFactor.Symmetric
SpecialMesh170.Parent = Part169
SpecialMesh170.MeshId = "rbxassetid://300344043"
SpecialMesh170.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh170.TextureId = "rbxassetid://300344518"
SpecialMesh170.MeshType = Enum.MeshType.FileMesh
Part171.Name = "Right Arm"
Part171.Parent = Model138
Part171.CFrame = CFrame.new(30.5497627, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part171.Position = Vector3.new(30.5497627, 52.1646652, 16.3850555)
Part171.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part171.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part171.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part171.BrickColor = BrickColor.new("Bright yellow")
Part171.CanCollide = false
Part171.brickColor = BrickColor.new("Bright yellow")
Part171.FormFactor = Enum.FormFactor.Symmetric
Part171.formFactor = Enum.FormFactor.Symmetric
SpecialMesh172.Parent = Part171
SpecialMesh172.MeshId = "rbxassetid://300344064"
SpecialMesh172.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh172.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh172.TextureId = "rbxassetid://300344518"
SpecialMesh172.MeshType = Enum.MeshType.FileMesh
Part173.Name = "Right Leg"
Part173.Parent = Model138
Part173.CFrame = CFrame.new(27.0432549, 45.1516495, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part173.Position = Vector3.new(27.0432549, 45.1516495, 16.3850555)
Part173.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part173.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part173.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part173.BottomSurface = Enum.SurfaceType.Smooth
Part173.BrickColor = BrickColor.new("Bright yellow")
Part173.CanCollide = false
Part173.brickColor = BrickColor.new("Bright yellow")
Part173.FormFactor = Enum.FormFactor.Symmetric
Part173.formFactor = Enum.FormFactor.Symmetric
SpecialMesh174.Parent = Part173
SpecialMesh174.MeshId = "rbxassetid://300344090"
SpecialMesh174.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh174.TextureId = "rbxassetid://300344518"
SpecialMesh174.MeshType = Enum.MeshType.FileMesh
Part175.Name = "Torso"
Part175.Parent = Model138
Part175.CFrame = CFrame.new(25.2900009, 52.1646652, 16.3850555, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part175.Position = Vector3.new(25.2900009, 52.1646652, 16.3850555)
Part175.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part175.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part175.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part175.BrickColor = BrickColor.new("Bright yellow")
Part175.LeftParamA = 0
Part175.LeftParamB = 0
Part175.LeftSurface = Enum.SurfaceType.Weld
Part175.RightParamA = 0
Part175.RightParamB = 0
Part175.RightSurface = Enum.SurfaceType.Weld
Part175.brickColor = BrickColor.new("Bright yellow")
Part175.FormFactor = Enum.FormFactor.Symmetric
Part175.formFactor = Enum.FormFactor.Symmetric
Decal176.Name = "roblox"
Decal176.Parent = Part175
Motor6D177.Name = "Right Shoulder"
Motor6D177.Parent = Part175
Motor6D177.MaxVelocity = 0.10000000149012
Motor6D177.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D177.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D177.Part0 = Part175
Motor6D177.Part1 = Part171
Motor6D177.part1 = Part171
Motor6D178.Name = "Left Shoulder"
Motor6D178.Parent = Part175
Motor6D178.MaxVelocity = 0.10000000149012
Motor6D178.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D178.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D178.Part0 = Part175
Motor6D178.Part1 = Part167
Motor6D178.part1 = Part167
Motor6D179.Name = "Right Hip"
Motor6D179.Parent = Part175
Motor6D179.MaxVelocity = 0.10000000149012
Motor6D179.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D179.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D179.Part0 = Part175
Motor6D179.Part1 = Part173
Motor6D179.part1 = Part173
Motor6D180.Name = "Left Hip"
Motor6D180.Parent = Part175
Motor6D180.MaxVelocity = 0.10000000149012
Motor6D180.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D180.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D180.Part0 = Part175
Motor6D180.Part1 = Part169
Motor6D180.part1 = Part169
Motor6D181.Name = "Neck"
Motor6D181.Parent = Part175
Motor6D181.MaxVelocity = 0.10000000149012
Motor6D181.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D181.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D181.Part0 = Part175
Motor6D181.Part1 = Part163
Motor6D181.part1 = Part163
SpecialMesh182.Parent = Part175
SpecialMesh182.MeshId = "rbxassetid://300344229"
SpecialMesh182.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh182.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh182.TextureId = "rbxassetid://300344518"
SpecialMesh182.MeshType = Enum.MeshType.FileMesh
Model183.Name = "DanTDM"
Model183.Parent = mas
BodyColors184.Parent = Model183
BodyColors184.HeadColor = BrickColor.new("Bright yellow")
BodyColors184.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors184.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors184.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors184.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors184.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors184.RightArmColor = BrickColor.new("Bright yellow")
BodyColors184.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors184.RightLegColor = BrickColor.new("Bright yellow")
BodyColors184.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors184.TorsoColor = BrickColor.new("Bright yellow")
BodyColors184.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script185.Name = "Health"
Script185.Parent = Model183
table.insert(cors,sandbox(Script185,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script186.Name = "Sound"
Script186.Parent = Model183
table.insert(cors,sandbox(Script186,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript187.Name = "LocalSound"
LocalScript187.Parent = Script186
table.insert(cors,sandbox(LocalScript187,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript188.Name = "Animate"
LocalScript188.Parent = Model183
table.insert(cors,sandbox(LocalScript188,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue189.Name = "idle"
StringValue189.Parent = LocalScript188
Animation190.Name = "Animation1"
Animation190.Parent = StringValue189
Animation190.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue191.Name = "Weight"
NumberValue191.Parent = Animation190
NumberValue191.Value = 9
Animation192.Name = "Animation2"
Animation192.Parent = StringValue189
Animation192.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue193.Name = "Weight"
NumberValue193.Parent = Animation192
NumberValue193.Value = 1
StringValue194.Name = "walk"
StringValue194.Parent = LocalScript188
Animation195.Name = "WalkAnim"
Animation195.Parent = StringValue194
Animation195.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue196.Name = "run"
StringValue196.Parent = LocalScript188
Animation197.Name = "RunAnim"
Animation197.Parent = StringValue196
Animation197.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue198.Name = "jump"
StringValue198.Parent = LocalScript188
Animation199.Name = "JumpAnim"
Animation199.Parent = StringValue198
Animation199.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue200.Name = "climb"
StringValue200.Parent = LocalScript188
Animation201.Name = "ClimbAnim"
Animation201.Parent = StringValue200
Animation201.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue202.Name = "toolnone"
StringValue202.Parent = LocalScript188
Animation203.Name = "ToolNoneAnim"
Animation203.Parent = StringValue202
Animation203.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue204.Name = "fall"
StringValue204.Parent = LocalScript188
Animation205.Name = "FallAnim"
Animation205.Parent = StringValue204
Animation205.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue206.Name = "sit"
StringValue206.Parent = LocalScript188
Animation207.Name = "SitAnim"
Animation207.Parent = StringValue206
Animation207.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part208.Name = "Head"
Part208.Parent = Model183
Part208.CFrame = CFrame.new(-8.8614502, 57.424427, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part208.Position = Vector3.new(-8.8614502, 57.424427, 5.28057623)
Part208.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part208.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part208.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part208.BrickColor = BrickColor.new("Bright yellow")
Part208.TopSurface = Enum.SurfaceType.Smooth
Part208.brickColor = BrickColor.new("Bright yellow")
Part208.FormFactor = Enum.FormFactor.Symmetric
Part208.formFactor = Enum.FormFactor.Symmetric
SpecialMesh209.Parent = Part208
SpecialMesh209.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh209.TextureId = "rbxassetid://300344518"
SpecialMesh209.MeshType = Enum.MeshType.FileMesh
Part210.Name = "HumanoidRootPart"
Part210.Parent = Model183
Part210.CFrame = CFrame.new(-8.8614502, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part210.Position = Vector3.new(-8.8614502, 52.1646652, 5.28057623)
Part210.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part210.Transparency = 1
Part210.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part210.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part210.BottomSurface = Enum.SurfaceType.Smooth
Part210.BrickColor = BrickColor.new("Bright blue")
Part210.CanCollide = false
Part210.LeftParamA = 0
Part210.LeftParamB = 0
Part210.RightParamA = 0
Part210.RightParamB = 0
Part210.TopSurface = Enum.SurfaceType.Smooth
Part210.brickColor = BrickColor.new("Bright blue")
Part210.FormFactor = Enum.FormFactor.Symmetric
Part210.formFactor = Enum.FormFactor.Symmetric
Motor6D211.Name = "RootJoint"
Motor6D211.Parent = Part210
Motor6D211.MaxVelocity = 0.10000000149012
Motor6D211.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D211.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D211.Part0 = Part210
Motor6D211.Part1 = Part220
Motor6D211.part1 = Part220
Part212.Name = "Left Arm"
Part212.Parent = Model183
Part212.CFrame = CFrame.new(-14.1212111, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part212.Position = Vector3.new(-14.1212111, 52.1646652, 5.28057623)
Part212.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part212.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part212.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part212.BrickColor = BrickColor.new("Bright yellow")
Part212.CanCollide = false
Part212.brickColor = BrickColor.new("Bright yellow")
Part212.FormFactor = Enum.FormFactor.Symmetric
Part212.formFactor = Enum.FormFactor.Symmetric
SpecialMesh213.Parent = Part212
SpecialMesh213.MeshId = "rbxassetid://300344022"
SpecialMesh213.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh213.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh213.TextureId = "rbxassetid://300344518"
SpecialMesh213.MeshType = Enum.MeshType.FileMesh
Part214.Name = "Left Leg"
Part214.Parent = Model183
Part214.CFrame = CFrame.new(-10.6147041, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part214.Position = Vector3.new(-10.6147041, 45.1516495, 5.28057623)
Part214.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part214.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part214.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part214.BottomSurface = Enum.SurfaceType.Smooth
Part214.BrickColor = BrickColor.new("Bright yellow")
Part214.CanCollide = false
Part214.brickColor = BrickColor.new("Bright yellow")
Part214.FormFactor = Enum.FormFactor.Symmetric
Part214.formFactor = Enum.FormFactor.Symmetric
SpecialMesh215.Parent = Part214
SpecialMesh215.MeshId = "rbxassetid://300344043"
SpecialMesh215.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh215.TextureId = "rbxassetid://300344518"
SpecialMesh215.MeshType = Enum.MeshType.FileMesh
Part216.Name = "Right Arm"
Part216.Parent = Model183
Part216.CFrame = CFrame.new(-3.60168934, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part216.Position = Vector3.new(-3.60168934, 52.1646652, 5.28057623)
Part216.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part216.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part216.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part216.BrickColor = BrickColor.new("Bright yellow")
Part216.CanCollide = false
Part216.brickColor = BrickColor.new("Bright yellow")
Part216.FormFactor = Enum.FormFactor.Symmetric
Part216.formFactor = Enum.FormFactor.Symmetric
SpecialMesh217.Parent = Part216
SpecialMesh217.MeshId = "rbxassetid://300344064"
SpecialMesh217.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh217.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh217.TextureId = "rbxassetid://300344518"
SpecialMesh217.MeshType = Enum.MeshType.FileMesh
Part218.Name = "Right Leg"
Part218.Parent = Model183
Part218.CFrame = CFrame.new(-7.10819674, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part218.Position = Vector3.new(-7.10819674, 45.1516495, 5.28057623)
Part218.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part218.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part218.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part218.BottomSurface = Enum.SurfaceType.Smooth
Part218.BrickColor = BrickColor.new("Bright yellow")
Part218.CanCollide = false
Part218.brickColor = BrickColor.new("Bright yellow")
Part218.FormFactor = Enum.FormFactor.Symmetric
Part218.formFactor = Enum.FormFactor.Symmetric
SpecialMesh219.Parent = Part218
SpecialMesh219.MeshId = "rbxassetid://300344090"
SpecialMesh219.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh219.TextureId = "rbxassetid://300344518"
SpecialMesh219.MeshType = Enum.MeshType.FileMesh
Part220.Name = "Torso"
Part220.Parent = Model183
Part220.CFrame = CFrame.new(-8.8614502, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part220.Position = Vector3.new(-8.8614502, 52.1646652, 5.28057623)
Part220.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part220.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part220.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part220.BrickColor = BrickColor.new("Bright yellow")
Part220.LeftParamA = 0
Part220.LeftParamB = 0
Part220.LeftSurface = Enum.SurfaceType.Weld
Part220.RightParamA = 0
Part220.RightParamB = 0
Part220.RightSurface = Enum.SurfaceType.Weld
Part220.brickColor = BrickColor.new("Bright yellow")
Part220.FormFactor = Enum.FormFactor.Symmetric
Part220.formFactor = Enum.FormFactor.Symmetric
Decal221.Name = "roblox"
Decal221.Parent = Part220
Motor6D222.Name = "Right Shoulder"
Motor6D222.Parent = Part220
Motor6D222.MaxVelocity = 0.10000000149012
Motor6D222.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D222.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D222.Part0 = Part220
Motor6D222.Part1 = Part216
Motor6D222.part1 = Part216
Motor6D223.Name = "Left Shoulder"
Motor6D223.Parent = Part220
Motor6D223.MaxVelocity = 0.10000000149012
Motor6D223.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D223.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D223.Part0 = Part220
Motor6D223.Part1 = Part212
Motor6D223.part1 = Part212
Motor6D224.Name = "Right Hip"
Motor6D224.Parent = Part220
Motor6D224.MaxVelocity = 0.10000000149012
Motor6D224.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D224.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D224.Part0 = Part220
Motor6D224.Part1 = Part218
Motor6D224.part1 = Part218
Motor6D225.Name = "Left Hip"
Motor6D225.Parent = Part220
Motor6D225.MaxVelocity = 0.10000000149012
Motor6D225.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D225.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D225.Part0 = Part220
Motor6D225.Part1 = Part214
Motor6D225.part1 = Part214
Motor6D226.Name = "Neck"
Motor6D226.Parent = Part220
Motor6D226.MaxVelocity = 0.10000000149012
Motor6D226.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D226.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D226.Part0 = Part220
Motor6D226.Part1 = Part208
Motor6D226.part1 = Part208
SpecialMesh227.Parent = Part220
SpecialMesh227.MeshId = "rbxassetid://300344229"
SpecialMesh227.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh227.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh227.TextureId = "rbxassetid://300344518"
SpecialMesh227.MeshType = Enum.MeshType.FileMesh
Model228.Name = "DanTDM"
Model228.Parent = mas
BodyColors229.Parent = Model228
BodyColors229.HeadColor = BrickColor.new("Bright yellow")
BodyColors229.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors229.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors229.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors229.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors229.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors229.RightArmColor = BrickColor.new("Bright yellow")
BodyColors229.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors229.RightLegColor = BrickColor.new("Bright yellow")
BodyColors229.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors229.TorsoColor = BrickColor.new("Bright yellow")
BodyColors229.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script230.Name = "Health"
Script230.Parent = Model228
table.insert(cors,sandbox(Script230,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script231.Name = "Sound"
Script231.Parent = Model228
table.insert(cors,sandbox(Script231,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript232.Name = "LocalSound"
LocalScript232.Parent = Script231
table.insert(cors,sandbox(LocalScript232,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript233.Name = "Animate"
LocalScript233.Parent = Model228
table.insert(cors,sandbox(LocalScript233,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue234.Name = "idle"
StringValue234.Parent = LocalScript233
Animation235.Name = "Animation1"
Animation235.Parent = StringValue234
Animation235.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue236.Name = "Weight"
NumberValue236.Parent = Animation235
NumberValue236.Value = 9
Animation237.Name = "Animation2"
Animation237.Parent = StringValue234
Animation237.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue238.Name = "Weight"
NumberValue238.Parent = Animation237
NumberValue238.Value = 1
StringValue239.Name = "walk"
StringValue239.Parent = LocalScript233
Animation240.Name = "WalkAnim"
Animation240.Parent = StringValue239
Animation240.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue241.Name = "run"
StringValue241.Parent = LocalScript233
Animation242.Name = "RunAnim"
Animation242.Parent = StringValue241
Animation242.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue243.Name = "jump"
StringValue243.Parent = LocalScript233
Animation244.Name = "JumpAnim"
Animation244.Parent = StringValue243
Animation244.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue245.Name = "climb"
StringValue245.Parent = LocalScript233
Animation246.Name = "ClimbAnim"
Animation246.Parent = StringValue245
Animation246.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue247.Name = "toolnone"
StringValue247.Parent = LocalScript233
Animation248.Name = "ToolNoneAnim"
Animation248.Parent = StringValue247
Animation248.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue249.Name = "fall"
StringValue249.Parent = LocalScript233
Animation250.Name = "FallAnim"
Animation250.Parent = StringValue249
Animation250.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue251.Name = "sit"
StringValue251.Parent = LocalScript233
Animation252.Name = "SitAnim"
Animation252.Parent = StringValue251
Animation252.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part253.Name = "Head"
Part253.Parent = Model228
Part253.CFrame = CFrame.new(2.30972672, 57.424427, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part253.Position = Vector3.new(2.30972672, 57.424427, 5.28057623)
Part253.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part253.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part253.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part253.BrickColor = BrickColor.new("Bright yellow")
Part253.TopSurface = Enum.SurfaceType.Smooth
Part253.brickColor = BrickColor.new("Bright yellow")
Part253.FormFactor = Enum.FormFactor.Symmetric
Part253.formFactor = Enum.FormFactor.Symmetric
SpecialMesh254.Parent = Part253
SpecialMesh254.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh254.TextureId = "rbxassetid://300344518"
SpecialMesh254.MeshType = Enum.MeshType.FileMesh
Part255.Name = "HumanoidRootPart"
Part255.Parent = Model228
Part255.CFrame = CFrame.new(2.30972672, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part255.Position = Vector3.new(2.30972672, 52.1646652, 5.28057623)
Part255.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part255.Transparency = 1
Part255.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part255.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part255.BottomSurface = Enum.SurfaceType.Smooth
Part255.BrickColor = BrickColor.new("Bright blue")
Part255.CanCollide = false
Part255.LeftParamA = 0
Part255.LeftParamB = 0
Part255.RightParamA = 0
Part255.RightParamB = 0
Part255.TopSurface = Enum.SurfaceType.Smooth
Part255.brickColor = BrickColor.new("Bright blue")
Part255.FormFactor = Enum.FormFactor.Symmetric
Part255.formFactor = Enum.FormFactor.Symmetric
Motor6D256.Name = "RootJoint"
Motor6D256.Parent = Part255
Motor6D256.MaxVelocity = 0.10000000149012
Motor6D256.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D256.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D256.Part0 = Part255
Motor6D256.Part1 = Part265
Motor6D256.part1 = Part265
Part257.Name = "Left Arm"
Part257.Parent = Model228
Part257.CFrame = CFrame.new(-2.95003414, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part257.Position = Vector3.new(-2.95003414, 52.1646652, 5.28057623)
Part257.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part257.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part257.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part257.BrickColor = BrickColor.new("Bright yellow")
Part257.CanCollide = false
Part257.brickColor = BrickColor.new("Bright yellow")
Part257.FormFactor = Enum.FormFactor.Symmetric
Part257.formFactor = Enum.FormFactor.Symmetric
SpecialMesh258.Parent = Part257
SpecialMesh258.MeshId = "rbxassetid://300344022"
SpecialMesh258.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh258.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh258.TextureId = "rbxassetid://300344518"
SpecialMesh258.MeshType = Enum.MeshType.FileMesh
Part259.Name = "Left Leg"
Part259.Parent = Model228
Part259.CFrame = CFrame.new(0.556473136, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part259.Position = Vector3.new(0.556473136, 45.1516495, 5.28057623)
Part259.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part259.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part259.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part259.BottomSurface = Enum.SurfaceType.Smooth
Part259.BrickColor = BrickColor.new("Bright yellow")
Part259.CanCollide = false
Part259.brickColor = BrickColor.new("Bright yellow")
Part259.FormFactor = Enum.FormFactor.Symmetric
Part259.formFactor = Enum.FormFactor.Symmetric
SpecialMesh260.Parent = Part259
SpecialMesh260.MeshId = "rbxassetid://300344043"
SpecialMesh260.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh260.TextureId = "rbxassetid://300344518"
SpecialMesh260.MeshType = Enum.MeshType.FileMesh
Part261.Name = "Right Arm"
Part261.Parent = Model228
Part261.CFrame = CFrame.new(7.56948757, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part261.Position = Vector3.new(7.56948757, 52.1646652, 5.28057623)
Part261.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part261.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part261.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part261.BrickColor = BrickColor.new("Bright yellow")
Part261.CanCollide = false
Part261.brickColor = BrickColor.new("Bright yellow")
Part261.FormFactor = Enum.FormFactor.Symmetric
Part261.formFactor = Enum.FormFactor.Symmetric
SpecialMesh262.Parent = Part261
SpecialMesh262.MeshId = "rbxassetid://300344064"
SpecialMesh262.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh262.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh262.TextureId = "rbxassetid://300344518"
SpecialMesh262.MeshType = Enum.MeshType.FileMesh
Part263.Name = "Right Leg"
Part263.Parent = Model228
Part263.CFrame = CFrame.new(4.06298018, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part263.Position = Vector3.new(4.06298018, 45.1516495, 5.28057623)
Part263.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part263.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part263.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part263.BottomSurface = Enum.SurfaceType.Smooth
Part263.BrickColor = BrickColor.new("Bright yellow")
Part263.CanCollide = false
Part263.brickColor = BrickColor.new("Bright yellow")
Part263.FormFactor = Enum.FormFactor.Symmetric
Part263.formFactor = Enum.FormFactor.Symmetric
SpecialMesh264.Parent = Part263
SpecialMesh264.MeshId = "rbxassetid://300344090"
SpecialMesh264.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh264.TextureId = "rbxassetid://300344518"
SpecialMesh264.MeshType = Enum.MeshType.FileMesh
Part265.Name = "Torso"
Part265.Parent = Model228
Part265.CFrame = CFrame.new(2.30972672, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part265.Position = Vector3.new(2.30972672, 52.1646652, 5.28057623)
Part265.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part265.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part265.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part265.BrickColor = BrickColor.new("Bright yellow")
Part265.LeftParamA = 0
Part265.LeftParamB = 0
Part265.LeftSurface = Enum.SurfaceType.Weld
Part265.RightParamA = 0
Part265.RightParamB = 0
Part265.RightSurface = Enum.SurfaceType.Weld
Part265.brickColor = BrickColor.new("Bright yellow")
Part265.FormFactor = Enum.FormFactor.Symmetric
Part265.formFactor = Enum.FormFactor.Symmetric
Decal266.Name = "roblox"
Decal266.Parent = Part265
Motor6D267.Name = "Right Shoulder"
Motor6D267.Parent = Part265
Motor6D267.MaxVelocity = 0.10000000149012
Motor6D267.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D267.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D267.Part0 = Part265
Motor6D267.Part1 = Part261
Motor6D267.part1 = Part261
Motor6D268.Name = "Left Shoulder"
Motor6D268.Parent = Part265
Motor6D268.MaxVelocity = 0.10000000149012
Motor6D268.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D268.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D268.Part0 = Part265
Motor6D268.Part1 = Part257
Motor6D268.part1 = Part257
Motor6D269.Name = "Right Hip"
Motor6D269.Parent = Part265
Motor6D269.MaxVelocity = 0.10000000149012
Motor6D269.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D269.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D269.Part0 = Part265
Motor6D269.Part1 = Part263
Motor6D269.part1 = Part263
Motor6D270.Name = "Left Hip"
Motor6D270.Parent = Part265
Motor6D270.MaxVelocity = 0.10000000149012
Motor6D270.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D270.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D270.Part0 = Part265
Motor6D270.Part1 = Part259
Motor6D270.part1 = Part259
Motor6D271.Name = "Neck"
Motor6D271.Parent = Part265
Motor6D271.MaxVelocity = 0.10000000149012
Motor6D271.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D271.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D271.Part0 = Part265
Motor6D271.Part1 = Part253
Motor6D271.part1 = Part253
SpecialMesh272.Parent = Part265
SpecialMesh272.MeshId = "rbxassetid://300344229"
SpecialMesh272.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh272.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh272.TextureId = "rbxassetid://300344518"
SpecialMesh272.MeshType = Enum.MeshType.FileMesh
Model273.Name = "DanTDM"
Model273.Parent = mas
BodyColors274.Parent = Model273
BodyColors274.HeadColor = BrickColor.new("Bright yellow")
BodyColors274.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors274.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors274.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors274.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors274.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors274.RightArmColor = BrickColor.new("Bright yellow")
BodyColors274.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors274.RightLegColor = BrickColor.new("Bright yellow")
BodyColors274.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors274.TorsoColor = BrickColor.new("Bright yellow")
BodyColors274.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script275.Name = "Health"
Script275.Parent = Model273
table.insert(cors,sandbox(Script275,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script276.Name = "Sound"
Script276.Parent = Model273
table.insert(cors,sandbox(Script276,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript277.Name = "LocalSound"
LocalScript277.Parent = Script276
table.insert(cors,sandbox(LocalScript277,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript278.Name = "Animate"
LocalScript278.Parent = Model273
table.insert(cors,sandbox(LocalScript278,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue279.Name = "idle"
StringValue279.Parent = LocalScript278
Animation280.Name = "Animation1"
Animation280.Parent = StringValue279
Animation280.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue281.Name = "Weight"
NumberValue281.Parent = Animation280
NumberValue281.Value = 9
Animation282.Name = "Animation2"
Animation282.Parent = StringValue279
Animation282.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue283.Name = "Weight"
NumberValue283.Parent = Animation282
NumberValue283.Value = 1
StringValue284.Name = "walk"
StringValue284.Parent = LocalScript278
Animation285.Name = "WalkAnim"
Animation285.Parent = StringValue284
Animation285.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue286.Name = "run"
StringValue286.Parent = LocalScript278
Animation287.Name = "RunAnim"
Animation287.Parent = StringValue286
Animation287.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue288.Name = "jump"
StringValue288.Parent = LocalScript278
Animation289.Name = "JumpAnim"
Animation289.Parent = StringValue288
Animation289.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue290.Name = "climb"
StringValue290.Parent = LocalScript278
Animation291.Name = "ClimbAnim"
Animation291.Parent = StringValue290
Animation291.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue292.Name = "toolnone"
StringValue292.Parent = LocalScript278
Animation293.Name = "ToolNoneAnim"
Animation293.Parent = StringValue292
Animation293.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue294.Name = "fall"
StringValue294.Parent = LocalScript278
Animation295.Name = "FallAnim"
Animation295.Parent = StringValue294
Animation295.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue296.Name = "sit"
StringValue296.Parent = LocalScript278
Animation297.Name = "SitAnim"
Animation297.Parent = StringValue296
Animation297.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part298.Name = "Head"
Part298.Parent = Model273
Part298.CFrame = CFrame.new(14.2657824, 57.424427, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part298.Position = Vector3.new(14.2657824, 57.424427, 5.28057623)
Part298.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part298.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part298.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part298.BrickColor = BrickColor.new("Bright yellow")
Part298.TopSurface = Enum.SurfaceType.Smooth
Part298.brickColor = BrickColor.new("Bright yellow")
Part298.FormFactor = Enum.FormFactor.Symmetric
Part298.formFactor = Enum.FormFactor.Symmetric
SpecialMesh299.Parent = Part298
SpecialMesh299.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh299.TextureId = "rbxassetid://300344518"
SpecialMesh299.MeshType = Enum.MeshType.FileMesh
Part300.Name = "HumanoidRootPart"
Part300.Parent = Model273
Part300.CFrame = CFrame.new(14.2657824, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part300.Position = Vector3.new(14.2657824, 52.1646652, 5.28057623)
Part300.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part300.Transparency = 1
Part300.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part300.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part300.BottomSurface = Enum.SurfaceType.Smooth
Part300.BrickColor = BrickColor.new("Bright blue")
Part300.CanCollide = false
Part300.LeftParamA = 0
Part300.LeftParamB = 0
Part300.RightParamA = 0
Part300.RightParamB = 0
Part300.TopSurface = Enum.SurfaceType.Smooth
Part300.brickColor = BrickColor.new("Bright blue")
Part300.FormFactor = Enum.FormFactor.Symmetric
Part300.formFactor = Enum.FormFactor.Symmetric
Motor6D301.Name = "RootJoint"
Motor6D301.Parent = Part300
Motor6D301.MaxVelocity = 0.10000000149012
Motor6D301.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D301.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D301.Part0 = Part300
Motor6D301.Part1 = Part310
Motor6D301.part1 = Part310
Part302.Name = "Left Arm"
Part302.Parent = Model273
Part302.CFrame = CFrame.new(9.0060215, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part302.Position = Vector3.new(9.0060215, 52.1646652, 5.28057623)
Part302.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part302.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part302.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part302.BrickColor = BrickColor.new("Bright yellow")
Part302.CanCollide = false
Part302.brickColor = BrickColor.new("Bright yellow")
Part302.FormFactor = Enum.FormFactor.Symmetric
Part302.formFactor = Enum.FormFactor.Symmetric
SpecialMesh303.Parent = Part302
SpecialMesh303.MeshId = "rbxassetid://300344022"
SpecialMesh303.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh303.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh303.TextureId = "rbxassetid://300344518"
SpecialMesh303.MeshType = Enum.MeshType.FileMesh
Part304.Name = "Left Leg"
Part304.Parent = Model273
Part304.CFrame = CFrame.new(12.5125284, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part304.Position = Vector3.new(12.5125284, 45.1516495, 5.28057623)
Part304.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part304.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part304.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part304.BottomSurface = Enum.SurfaceType.Smooth
Part304.BrickColor = BrickColor.new("Bright yellow")
Part304.CanCollide = false
Part304.brickColor = BrickColor.new("Bright yellow")
Part304.FormFactor = Enum.FormFactor.Symmetric
Part304.formFactor = Enum.FormFactor.Symmetric
SpecialMesh305.Parent = Part304
SpecialMesh305.MeshId = "rbxassetid://300344043"
SpecialMesh305.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh305.TextureId = "rbxassetid://300344518"
SpecialMesh305.MeshType = Enum.MeshType.FileMesh
Part306.Name = "Right Arm"
Part306.Parent = Model273
Part306.CFrame = CFrame.new(19.5255432, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part306.Position = Vector3.new(19.5255432, 52.1646652, 5.28057623)
Part306.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part306.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part306.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part306.BrickColor = BrickColor.new("Bright yellow")
Part306.CanCollide = false
Part306.brickColor = BrickColor.new("Bright yellow")
Part306.FormFactor = Enum.FormFactor.Symmetric
Part306.formFactor = Enum.FormFactor.Symmetric
SpecialMesh307.Parent = Part306
SpecialMesh307.MeshId = "rbxassetid://300344064"
SpecialMesh307.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh307.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh307.TextureId = "rbxassetid://300344518"
SpecialMesh307.MeshType = Enum.MeshType.FileMesh
Part308.Name = "Right Leg"
Part308.Parent = Model273
Part308.CFrame = CFrame.new(16.0190353, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part308.Position = Vector3.new(16.0190353, 45.1516495, 5.28057623)
Part308.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part308.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part308.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part308.BottomSurface = Enum.SurfaceType.Smooth
Part308.BrickColor = BrickColor.new("Bright yellow")
Part308.CanCollide = false
Part308.brickColor = BrickColor.new("Bright yellow")
Part308.FormFactor = Enum.FormFactor.Symmetric
Part308.formFactor = Enum.FormFactor.Symmetric
SpecialMesh309.Parent = Part308
SpecialMesh309.MeshId = "rbxassetid://300344090"
SpecialMesh309.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh309.TextureId = "rbxassetid://300344518"
SpecialMesh309.MeshType = Enum.MeshType.FileMesh
Part310.Name = "Torso"
Part310.Parent = Model273
Part310.CFrame = CFrame.new(14.2657824, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part310.Position = Vector3.new(14.2657824, 52.1646652, 5.28057623)
Part310.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part310.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part310.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part310.BrickColor = BrickColor.new("Bright yellow")
Part310.LeftParamA = 0
Part310.LeftParamB = 0
Part310.LeftSurface = Enum.SurfaceType.Weld
Part310.RightParamA = 0
Part310.RightParamB = 0
Part310.RightSurface = Enum.SurfaceType.Weld
Part310.brickColor = BrickColor.new("Bright yellow")
Part310.FormFactor = Enum.FormFactor.Symmetric
Part310.formFactor = Enum.FormFactor.Symmetric
Decal311.Name = "roblox"
Decal311.Parent = Part310
Motor6D312.Name = "Right Shoulder"
Motor6D312.Parent = Part310
Motor6D312.MaxVelocity = 0.10000000149012
Motor6D312.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D312.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D312.Part0 = Part310
Motor6D312.Part1 = Part306
Motor6D312.part1 = Part306
Motor6D313.Name = "Left Shoulder"
Motor6D313.Parent = Part310
Motor6D313.MaxVelocity = 0.10000000149012
Motor6D313.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D313.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D313.Part0 = Part310
Motor6D313.Part1 = Part302
Motor6D313.part1 = Part302
Motor6D314.Name = "Right Hip"
Motor6D314.Parent = Part310
Motor6D314.MaxVelocity = 0.10000000149012
Motor6D314.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D314.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D314.Part0 = Part310
Motor6D314.Part1 = Part308
Motor6D314.part1 = Part308
Motor6D315.Name = "Left Hip"
Motor6D315.Parent = Part310
Motor6D315.MaxVelocity = 0.10000000149012
Motor6D315.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D315.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D315.Part0 = Part310
Motor6D315.Part1 = Part304
Motor6D315.part1 = Part304
Motor6D316.Name = "Neck"
Motor6D316.Parent = Part310
Motor6D316.MaxVelocity = 0.10000000149012
Motor6D316.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D316.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D316.Part0 = Part310
Motor6D316.Part1 = Part298
Motor6D316.part1 = Part298
SpecialMesh317.Parent = Part310
SpecialMesh317.MeshId = "rbxassetid://300344229"
SpecialMesh317.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh317.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh317.TextureId = "rbxassetid://300344518"
SpecialMesh317.MeshType = Enum.MeshType.FileMesh
Model318.Name = "DanTDM"
Model318.Parent = mas
BodyColors319.Parent = Model318
BodyColors319.HeadColor = BrickColor.new("Bright yellow")
BodyColors319.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors319.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors319.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.RightArmColor = BrickColor.new("Bright yellow")
BodyColors319.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.RightLegColor = BrickColor.new("Bright yellow")
BodyColors319.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.TorsoColor = BrickColor.new("Bright yellow")
BodyColors319.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script320.Name = "Health"
Script320.Parent = Model318
table.insert(cors,sandbox(Script320,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild("Head")
local Humanoid = Figure:WaitForChild("Humanoid")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script321.Name = "Sound"
Script321.Parent = Model318
table.insert(cors,sandbox(Script321,function()
---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
--Remove the local script if you copy this into an NPC.

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

function newSound(name, id)
	local sound = Instance.new("Sound")
	sound.SoundId = id
	sound.Name = name
	sound.archivable = false
	sound.Parent = script.Parent.Head
	return sound
end

-- declarations

local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
sRunning.Looped = true
local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
sSwimming.Looped = true
local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
sClimbing.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")
local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
local filteringEnabled = game.Workspace.FilteringEnabled

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

if hasPlayer == nil then
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)
end

end))
LocalScript322.Name = "LocalSound"
LocalScript322.Parent = Script321
table.insert(cors,sandbox(LocalScript322,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript323.Name = "Animate"
LocalScript323.Parent = Model318
table.insert(cors,sandbox(LocalScript323,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue324.Name = "idle"
StringValue324.Parent = LocalScript323
Animation325.Name = "Animation1"
Animation325.Parent = StringValue324
Animation325.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue326.Name = "Weight"
NumberValue326.Parent = Animation325
NumberValue326.Value = 9
Animation327.Name = "Animation2"
Animation327.Parent = StringValue324
Animation327.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue328.Name = "Weight"
NumberValue328.Parent = Animation327
NumberValue328.Value = 1
StringValue329.Name = "walk"
StringValue329.Parent = LocalScript323
Animation330.Name = "WalkAnim"
Animation330.Parent = StringValue329
Animation330.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue331.Name = "run"
StringValue331.Parent = LocalScript323
Animation332.Name = "RunAnim"
Animation332.Parent = StringValue331
Animation332.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue333.Name = "jump"
StringValue333.Parent = LocalScript323
Animation334.Name = "JumpAnim"
Animation334.Parent = StringValue333
Animation334.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue335.Name = "climb"
StringValue335.Parent = LocalScript323
Animation336.Name = "ClimbAnim"
Animation336.Parent = StringValue335
Animation336.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue337.Name = "toolnone"
StringValue337.Parent = LocalScript323
Animation338.Name = "ToolNoneAnim"
Animation338.Parent = StringValue337
Animation338.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue339.Name = "fall"
StringValue339.Parent = LocalScript323
Animation340.Name = "FallAnim"
Animation340.Parent = StringValue339
Animation340.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue341.Name = "sit"
StringValue341.Parent = LocalScript323
Animation342.Name = "SitAnim"
Animation342.Parent = StringValue341
Animation342.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part343.Name = "Head"
Part343.Parent = Model318
Part343.CFrame = CFrame.new(25.2900009, 57.424427, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part343.Position = Vector3.new(25.2900009, 57.424427, 5.28057623)
Part343.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part343.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part343.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part343.BrickColor = BrickColor.new("Bright yellow")
Part343.TopSurface = Enum.SurfaceType.Smooth
Part343.brickColor = BrickColor.new("Bright yellow")
Part343.FormFactor = Enum.FormFactor.Symmetric
Part343.formFactor = Enum.FormFactor.Symmetric
SpecialMesh344.Parent = Part343
SpecialMesh344.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh344.TextureId = "rbxassetid://300344518"
SpecialMesh344.MeshType = Enum.MeshType.FileMesh
Part345.Name = "HumanoidRootPart"
Part345.Parent = Model318
Part345.CFrame = CFrame.new(25.2900009, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part345.Position = Vector3.new(25.2900009, 52.1646652, 5.28057623)
Part345.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part345.Transparency = 1
Part345.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part345.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part345.BottomSurface = Enum.SurfaceType.Smooth
Part345.BrickColor = BrickColor.new("Bright blue")
Part345.CanCollide = false
Part345.LeftParamA = 0
Part345.LeftParamB = 0
Part345.RightParamA = 0
Part345.RightParamB = 0
Part345.TopSurface = Enum.SurfaceType.Smooth
Part345.brickColor = BrickColor.new("Bright blue")
Part345.FormFactor = Enum.FormFactor.Symmetric
Part345.formFactor = Enum.FormFactor.Symmetric
Motor6D346.Name = "RootJoint"
Motor6D346.Parent = Part345
Motor6D346.MaxVelocity = 0.10000000149012
Motor6D346.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D346.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D346.Part0 = Part345
Motor6D346.Part1 = Part355
Motor6D346.part1 = Part355
Part347.Name = "Left Arm"
Part347.Parent = Model318
Part347.CFrame = CFrame.new(20.0302391, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part347.Position = Vector3.new(20.0302391, 52.1646652, 5.28057623)
Part347.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part347.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part347.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part347.BrickColor = BrickColor.new("Bright yellow")
Part347.CanCollide = false
Part347.brickColor = BrickColor.new("Bright yellow")
Part347.FormFactor = Enum.FormFactor.Symmetric
Part347.formFactor = Enum.FormFactor.Symmetric
SpecialMesh348.Parent = Part347
SpecialMesh348.MeshId = "rbxassetid://300344022"
SpecialMesh348.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh348.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh348.TextureId = "rbxassetid://300344518"
SpecialMesh348.MeshType = Enum.MeshType.FileMesh
Part349.Name = "Left Leg"
Part349.Parent = Model318
Part349.CFrame = CFrame.new(23.536747, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part349.Position = Vector3.new(23.536747, 45.1516495, 5.28057623)
Part349.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part349.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part349.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part349.BottomSurface = Enum.SurfaceType.Smooth
Part349.BrickColor = BrickColor.new("Bright yellow")
Part349.CanCollide = false
Part349.brickColor = BrickColor.new("Bright yellow")
Part349.FormFactor = Enum.FormFactor.Symmetric
Part349.formFactor = Enum.FormFactor.Symmetric
SpecialMesh350.Parent = Part349
SpecialMesh350.MeshId = "rbxassetid://300344043"
SpecialMesh350.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh350.TextureId = "rbxassetid://300344518"
SpecialMesh350.MeshType = Enum.MeshType.FileMesh
Part351.Name = "Right Arm"
Part351.Parent = Model318
Part351.CFrame = CFrame.new(30.5497627, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part351.Position = Vector3.new(30.5497627, 52.1646652, 5.28057623)
Part351.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part351.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part351.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part351.BrickColor = BrickColor.new("Bright yellow")
Part351.CanCollide = false
Part351.brickColor = BrickColor.new("Bright yellow")
Part351.FormFactor = Enum.FormFactor.Symmetric
Part351.formFactor = Enum.FormFactor.Symmetric
SpecialMesh352.Parent = Part351
SpecialMesh352.MeshId = "rbxassetid://300344064"
SpecialMesh352.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh352.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh352.TextureId = "rbxassetid://300344518"
SpecialMesh352.MeshType = Enum.MeshType.FileMesh
Part353.Name = "Right Leg"
Part353.Parent = Model318
Part353.CFrame = CFrame.new(27.0432549, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part353.Position = Vector3.new(27.0432549, 45.1516495, 5.28057623)
Part353.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part353.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part353.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part353.BottomSurface = Enum.SurfaceType.Smooth
Part353.BrickColor = BrickColor.new("Bright yellow")
Part353.CanCollide = false
Part353.brickColor = BrickColor.new("Bright yellow")
Part353.FormFactor = Enum.FormFactor.Symmetric
Part353.formFactor = Enum.FormFactor.Symmetric
SpecialMesh354.Parent = Part353
SpecialMesh354.MeshId = "rbxassetid://300344090"
SpecialMesh354.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh354.TextureId = "rbxassetid://300344518"
SpecialMesh354.MeshType = Enum.MeshType.FileMesh
Part355.Name = "Torso"
Part355.Parent = Model318
Part355.CFrame = CFrame.new(25.2900009, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part355.Position = Vector3.new(25.2900009, 52.1646652, 5.28057623)
Part355.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part355.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part355.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part355.BrickColor = BrickColor.new("Bright yellow")
Part355.LeftParamA = 0
Part355.LeftParamB = 0
Part355.LeftSurface = Enum.SurfaceType.Weld
Part355.RightParamA = 0
Part355.RightParamB = 0
Part355.RightSurface = Enum.SurfaceType.Weld
Part355.brickColor = BrickColor.new("Bright yellow")
Part355.FormFactor = Enum.FormFactor.Symmetric
Part355.formFactor = Enum.FormFactor.Symmetric
Decal356.Name = "roblox"
Decal356.Parent = Part355
Motor6D357.Name = "Right Shoulder"
Motor6D357.Parent = Part355
Motor6D357.MaxVelocity = 0.10000000149012
Motor6D357.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D357.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D357.Part0 = Part355
Motor6D357.Part1 = Part351
Motor6D357.part1 = Part351
Motor6D358.Name = "Left Shoulder"
Motor6D358.Parent = Part355
Motor6D358.MaxVelocity = 0.10000000149012
Motor6D358.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D358.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D358.Part0 = Part355
Motor6D358.Part1 = Part347
Motor6D358.part1 = Part347
Motor6D359.Name = "Right Hip"
Motor6D359.Parent = Part355
Motor6D359.MaxVelocity = 0.10000000149012
Motor6D359.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D359.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D359.Part0 = Part355
Motor6D359.Part1 = Part353
Motor6D359.part1 = Part353
Motor6D360.Name = "Left Hip"
Motor6D360.Parent = Part355
Motor6D360.MaxVelocity = 0.10000000149012
Motor6D360.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D360.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D360.Part0 = Part355
Motor6D360.Part1 = Part349
Motor6D360.part1 = Part349
Motor6D361.Name = "Neck"
Motor6D361.Parent = Part355
Motor6D361.MaxVelocity = 0.10000000149012
Motor6D361.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D361.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D361.Part0 = Part355
Motor6D361.Part1 = Part343
Motor6D361.part1 = Part343
SpecialMesh362.Parent = Part355
SpecialMesh362.MeshId = "rbxassetid://300344229"
SpecialMesh362.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh362.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh362.TextureId = "rbxassetid://300344518"
SpecialMesh362.MeshType = Enum.MeshType.FileMesh
Model363.Name = "DanTDM"
Model363.Parent = mas
BodyColors364.Parent = Model363
BodyColors364.HeadColor = BrickColor.new("Bright yellow")
BodyColors364.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors364.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors364.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.RightArmColor = BrickColor.new("Bright yellow")
BodyColors364.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.RightLegColor = BrickColor.new("Bright yellow")
BodyColors364.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.TorsoColor = BrickColor.new("Bright yellow")
BodyColors364.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script365.Name = "Health"
Script365.Parent = Model363
table.insert(cors,sandbox(Script365,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild("Head")
local Humanoid = Figure:WaitForChild("Humanoid")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script366.Name = "Sound"
Script366.Parent = Model363
table.insert(cors,sandbox(Script366,function()
---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
--Remove the local script if you copy this into an NPC.

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

function newSound(name, id)
	local sound = Instance.new("Sound")
	sound.SoundId = id
	sound.Name = name
	sound.archivable = false
	sound.Parent = script.Parent.Head
	return sound
end

-- declarations

local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
sRunning.Looped = true
local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
sSwimming.Looped = true
local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
sClimbing.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")
local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
local filteringEnabled = game.Workspace.FilteringEnabled

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

if hasPlayer == nil then
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)
end

end))
LocalScript367.Name = "LocalSound"
LocalScript367.Parent = Script366
table.insert(cors,sandbox(LocalScript367,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript368.Name = "Animate"
LocalScript368.Parent = Model363
table.insert(cors,sandbox(LocalScript368,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue369.Name = "idle"
StringValue369.Parent = LocalScript368
Animation370.Name = "Animation1"
Animation370.Parent = StringValue369
Animation370.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue371.Name = "Weight"
NumberValue371.Parent = Animation370
NumberValue371.Value = 9
Animation372.Name = "Animation2"
Animation372.Parent = StringValue369
Animation372.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue373.Name = "Weight"
NumberValue373.Parent = Animation372
NumberValue373.Value = 1
StringValue374.Name = "walk"
StringValue374.Parent = LocalScript368
Animation375.Name = "WalkAnim"
Animation375.Parent = StringValue374
Animation375.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue376.Name = "run"
StringValue376.Parent = LocalScript368
Animation377.Name = "RunAnim"
Animation377.Parent = StringValue376
Animation377.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue378.Name = "jump"
StringValue378.Parent = LocalScript368
Animation379.Name = "JumpAnim"
Animation379.Parent = StringValue378
Animation379.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue380.Name = "climb"
StringValue380.Parent = LocalScript368
Animation381.Name = "ClimbAnim"
Animation381.Parent = StringValue380
Animation381.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue382.Name = "toolnone"
StringValue382.Parent = LocalScript368
Animation383.Name = "ToolNoneAnim"
Animation383.Parent = StringValue382
Animation383.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue384.Name = "fall"
StringValue384.Parent = LocalScript368
Animation385.Name = "FallAnim"
Animation385.Parent = StringValue384
Animation385.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue386.Name = "sit"
StringValue386.Parent = LocalScript368
Animation387.Name = "SitAnim"
Animation387.Parent = StringValue386
Animation387.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part388.Name = "Head"
Part388.Parent = Model363
Part388.CFrame = CFrame.new(-8.8614502, 57.424427, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part388.Position = Vector3.new(-8.8614502, 57.424427, -5.30866861)
Part388.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part388.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part388.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part388.BrickColor = BrickColor.new("Bright yellow")
Part388.TopSurface = Enum.SurfaceType.Smooth
Part388.brickColor = BrickColor.new("Bright yellow")
Part388.FormFactor = Enum.FormFactor.Symmetric
Part388.formFactor = Enum.FormFactor.Symmetric
SpecialMesh389.Parent = Part388
SpecialMesh389.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh389.TextureId = "rbxassetid://300344518"
SpecialMesh389.MeshType = Enum.MeshType.FileMesh
Part390.Name = "HumanoidRootPart"
Part390.Parent = Model363
Part390.CFrame = CFrame.new(-8.8614502, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part390.Position = Vector3.new(-8.8614502, 52.1646652, -5.30866861)
Part390.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part390.Transparency = 1
Part390.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part390.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part390.BottomSurface = Enum.SurfaceType.Smooth
Part390.BrickColor = BrickColor.new("Bright blue")
Part390.CanCollide = false
Part390.LeftParamA = 0
Part390.LeftParamB = 0
Part390.RightParamA = 0
Part390.RightParamB = 0
Part390.TopSurface = Enum.SurfaceType.Smooth
Part390.brickColor = BrickColor.new("Bright blue")
Part390.FormFactor = Enum.FormFactor.Symmetric
Part390.formFactor = Enum.FormFactor.Symmetric
Motor6D391.Name = "RootJoint"
Motor6D391.Parent = Part390
Motor6D391.MaxVelocity = 0.10000000149012
Motor6D391.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D391.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D391.Part0 = Part390
Motor6D391.Part1 = Part400
Motor6D391.part1 = Part400
Part392.Name = "Left Arm"
Part392.Parent = Model363
Part392.CFrame = CFrame.new(-14.1212111, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part392.Position = Vector3.new(-14.1212111, 52.1646652, -5.30866861)
Part392.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part392.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part392.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part392.BrickColor = BrickColor.new("Bright yellow")
Part392.CanCollide = false
Part392.brickColor = BrickColor.new("Bright yellow")
Part392.FormFactor = Enum.FormFactor.Symmetric
Part392.formFactor = Enum.FormFactor.Symmetric
SpecialMesh393.Parent = Part392
SpecialMesh393.MeshId = "rbxassetid://300344022"
SpecialMesh393.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh393.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh393.TextureId = "rbxassetid://300344518"
SpecialMesh393.MeshType = Enum.MeshType.FileMesh
Part394.Name = "Left Leg"
Part394.Parent = Model363
Part394.CFrame = CFrame.new(-10.6147041, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part394.Position = Vector3.new(-10.6147041, 45.1516495, -5.30866861)
Part394.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part394.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part394.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part394.BottomSurface = Enum.SurfaceType.Smooth
Part394.BrickColor = BrickColor.new("Bright yellow")
Part394.CanCollide = false
Part394.brickColor = BrickColor.new("Bright yellow")
Part394.FormFactor = Enum.FormFactor.Symmetric
Part394.formFactor = Enum.FormFactor.Symmetric
SpecialMesh395.Parent = Part394
SpecialMesh395.MeshId = "rbxassetid://300344043"
SpecialMesh395.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh395.TextureId = "rbxassetid://300344518"
SpecialMesh395.MeshType = Enum.MeshType.FileMesh
Part396.Name = "Right Arm"
Part396.Parent = Model363
Part396.CFrame = CFrame.new(-3.60168934, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part396.Position = Vector3.new(-3.60168934, 52.1646652, -5.30866861)
Part396.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part396.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part396.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part396.BrickColor = BrickColor.new("Bright yellow")
Part396.CanCollide = false
Part396.brickColor = BrickColor.new("Bright yellow")
Part396.FormFactor = Enum.FormFactor.Symmetric
Part396.formFactor = Enum.FormFactor.Symmetric
SpecialMesh397.Parent = Part396
SpecialMesh397.MeshId = "rbxassetid://300344064"
SpecialMesh397.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh397.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh397.TextureId = "rbxassetid://300344518"
SpecialMesh397.MeshType = Enum.MeshType.FileMesh
Part398.Name = "Right Leg"
Part398.Parent = Model363
Part398.CFrame = CFrame.new(-7.10819674, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part398.Position = Vector3.new(-7.10819674, 45.1516495, -5.30866861)
Part398.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part398.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part398.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part398.BottomSurface = Enum.SurfaceType.Smooth
Part398.BrickColor = BrickColor.new("Bright yellow")
Part398.CanCollide = false
Part398.brickColor = BrickColor.new("Bright yellow")
Part398.FormFactor = Enum.FormFactor.Symmetric
Part398.formFactor = Enum.FormFactor.Symmetric
SpecialMesh399.Parent = Part398
SpecialMesh399.MeshId = "rbxassetid://300344090"
SpecialMesh399.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh399.TextureId = "rbxassetid://300344518"
SpecialMesh399.MeshType = Enum.MeshType.FileMesh
Part400.Name = "Torso"
Part400.Parent = Model363
Part400.CFrame = CFrame.new(-8.8614502, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part400.Position = Vector3.new(-8.8614502, 52.1646652, -5.30866861)
Part400.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part400.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part400.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part400.BrickColor = BrickColor.new("Bright yellow")
Part400.LeftParamA = 0
Part400.LeftParamB = 0
Part400.LeftSurface = Enum.SurfaceType.Weld
Part400.RightParamA = 0
Part400.RightParamB = 0
Part400.RightSurface = Enum.SurfaceType.Weld
Part400.brickColor = BrickColor.new("Bright yellow")
Part400.FormFactor = Enum.FormFactor.Symmetric
Part400.formFactor = Enum.FormFactor.Symmetric
Decal401.Name = "roblox"
Decal401.Parent = Part400
Motor6D402.Name = "Right Shoulder"
Motor6D402.Parent = Part400
Motor6D402.MaxVelocity = 0.10000000149012
Motor6D402.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D402.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D402.Part0 = Part400
Motor6D402.Part1 = Part396
Motor6D402.part1 = Part396
Motor6D403.Name = "Left Shoulder"
Motor6D403.Parent = Part400
Motor6D403.MaxVelocity = 0.10000000149012
Motor6D403.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D403.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D403.Part0 = Part400
Motor6D403.Part1 = Part392
Motor6D403.part1 = Part392
Motor6D404.Name = "Right Hip"
Motor6D404.Parent = Part400
Motor6D404.MaxVelocity = 0.10000000149012
Motor6D404.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D404.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D404.Part0 = Part400
Motor6D404.Part1 = Part398
Motor6D404.part1 = Part398
Motor6D405.Name = "Left Hip"
Motor6D405.Parent = Part400
Motor6D405.MaxVelocity = 0.10000000149012
Motor6D405.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D405.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D405.Part0 = Part400
Motor6D405.Part1 = Part394
Motor6D405.part1 = Part394
Motor6D406.Name = "Neck"
Motor6D406.Parent = Part400
Motor6D406.MaxVelocity = 0.10000000149012
Motor6D406.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D406.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D406.Part0 = Part400
Motor6D406.Part1 = Part388
Motor6D406.part1 = Part388
SpecialMesh407.Parent = Part400
SpecialMesh407.MeshId = "rbxassetid://300344229"
SpecialMesh407.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh407.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh407.TextureId = "rbxassetid://300344518"
SpecialMesh407.MeshType = Enum.MeshType.FileMesh
Model408.Name = "DanTDM"
Model408.Parent = mas
BodyColors409.Parent = Model408
BodyColors409.HeadColor = BrickColor.new("Bright yellow")
BodyColors409.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors409.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors409.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.RightArmColor = BrickColor.new("Bright yellow")
BodyColors409.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.RightLegColor = BrickColor.new("Bright yellow")
BodyColors409.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.TorsoColor = BrickColor.new("Bright yellow")
BodyColors409.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script410.Name = "Health"
Script410.Parent = Model408
table.insert(cors,sandbox(Script410,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild("Head")
local Humanoid = Figure:WaitForChild("Humanoid")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script411.Name = "Sound"
Script411.Parent = Model408
table.insert(cors,sandbox(Script411,function()
---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
--Remove the local script if you copy this into an NPC.

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

function newSound(name, id)
	local sound = Instance.new("Sound")
	sound.SoundId = id
	sound.Name = name
	sound.archivable = false
	sound.Parent = script.Parent.Head
	return sound
end

-- declarations

local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
sRunning.Looped = true
local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
sSwimming.Looped = true
local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
sClimbing.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")
local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
local filteringEnabled = game.Workspace.FilteringEnabled

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

if hasPlayer == nil then
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)
end

end))
LocalScript412.Name = "LocalSound"
LocalScript412.Parent = Script411
table.insert(cors,sandbox(LocalScript412,function()
--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
-- util

function waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end


-- declarations

local Figure = script.Parent.Parent
local Head = waitForChild(Figure, "Head")
local Humanoid = waitForChild(Figure, "Humanoid")

local sGettingUp = waitForChild(Head, "GettingUp")
local sDied = waitForChild(Head, "Died") 
local sFreeFalling = waitForChild(Head, "FreeFalling")
local sJumping = waitForChild(Head, "Jumping")
local sLanding = waitForChild(Head, "Landing")
local sSplash = waitForChild(Head, "Splash")
local sRunning = waitForChild(Head, "Running")
sRunning.Looped = true
local sSwimming = waitForChild(Head, "Swimming")
sSwimming.Looped = true
local sClimbing =waitForChild(Head, "Climbing")
sClimbing.Looped = true

local prevState = "None"

-- functions

function onDied()
	stopLoopedSounds()
	sDied:Play()
end

local fallCount = 0
local fallSpeed = 0
function onStateFall(state, sound)
	fallCount = fallCount + 1
	if state then
		sound.Volume = 0
		sound:Play()
		Spawn( function()
			local t = 0
			local thisFall = fallCount
			while t < 1.5 and fallCount == thisFall do
				local vol = math.max(t - 0.3 , 0)
				sound.Volume = vol
				wait(0.1)
				t = t + 0.1
			end
		end)
	else
		sound:Stop()
	end
	fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
end


function onStateNoStop(state, sound)
	if state then
		sound:Play()
	end
end


function onRunning(speed)
	sClimbing:Stop()
	sSwimming:Stop()
	if (prevState == "FreeFall" and fallSpeed > 0.1) then
		local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
		sLanding.Volume = vol
		sLanding:Play()
		fallSpeed = 0
	end
	if speed>0.5 then
		sRunning:Play()
		sRunning.Pitch = speed / 8.0
	else
		sRunning:Stop()
	end
	prevState = "Run"
end

function onSwimming(speed)
	if (prevState ~= "Swim" and speed > 0.1) then
		local volume = math.min(1.0, speed / 350)
		sSplash.Volume = volume
		sSplash:Play()
		prevState = "Swim"
	end
	sClimbing:Stop()
	sRunning:Stop()
	sSwimming.Pitch = 1.6
	sSwimming:Play()
end

function onClimbing(speed)
	sRunning:Stop()
	sSwimming:Stop()	
	if speed>0.01 then
		sClimbing:Play()
		sClimbing.Pitch = speed / 5.5
	else
		sClimbing:Stop()
	end
	prevState = "Climb"
end
-- connect up

function stopLoopedSounds()
	sRunning:Stop() 
	sClimbing:Stop()
	sSwimming:Stop()
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Swimming:connect(onSwimming)
Humanoid.Climbing:connect(onClimbing)
Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
Humanoid.StateChanged:connect(function(old, new) 
	if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
		stopLoopedSounds()
	end
end)


end))
LocalScript413.Name = "Animate"
LocalScript413.Parent = Model408
table.insert(cors,sandbox(LocalScript413,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game.Players.LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
LocalScript277.Name = "LocalSound"
LocalScript277.Parent = Script276
table.insert(cors,sandbox(LocalScript277,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript278.Name = "Animate"
LocalScript278.Parent = Model273
table.insert(cors,sandbox(LocalScript278,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue279.Name = "idle"
StringValue279.Parent = LocalScript278
Animation280.Name = "Animation1"
Animation280.Parent = StringValue279
Animation280.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue281.Name = "Weight"
NumberValue281.Parent = Animation280
NumberValue281.Value = 9
Animation282.Name = "Animation2"
Animation282.Parent = StringValue279
Animation282.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue283.Name = "Weight"
NumberValue283.Parent = Animation282
NumberValue283.Value = 1
StringValue284.Name = "walk"
StringValue284.Parent = LocalScript278
Animation285.Name = "WalkAnim"
Animation285.Parent = StringValue284
Animation285.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue286.Name = "run"
StringValue286.Parent = LocalScript278
Animation287.Name = "RunAnim"
Animation287.Parent = StringValue286
Animation287.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue288.Name = "jump"
StringValue288.Parent = LocalScript278
Animation289.Name = "JumpAnim"
Animation289.Parent = StringValue288
Animation289.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue290.Name = "climb"
StringValue290.Parent = LocalScript278
Animation291.Name = "ClimbAnim"
Animation291.Parent = StringValue290
Animation291.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue292.Name = "toolnone"
StringValue292.Parent = LocalScript278
Animation293.Name = "ToolNoneAnim"
Animation293.Parent = StringValue292
Animation293.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue294.Name = "fall"
StringValue294.Parent = LocalScript278
Animation295.Name = "FallAnim"
Animation295.Parent = StringValue294
Animation295.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue296.Name = "sit"
StringValue296.Parent = LocalScript278
Animation297.Name = "SitAnim"
Animation297.Parent = StringValue296
Animation297.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part298.Name = "Head"
Part298.Parent = Model273
Part298.CFrame = CFrame.new(14.2657824, 57.424427, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part298.Position = Vector3.new(14.2657824, 57.424427, 5.28057623)
Part298.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part298.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part298.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part298.BrickColor = BrickColor.new("Bright yellow")
Part298.TopSurface = Enum.SurfaceType.Smooth
Part298.brickColor = BrickColor.new("Bright yellow")
Part298.FormFactor = Enum.FormFactor.Symmetric
Part298.formFactor = Enum.FormFactor.Symmetric
SpecialMesh299.Parent = Part298
SpecialMesh299.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh299.TextureId = "rbxassetid://300344518"
SpecialMesh299.MeshType = Enum.MeshType.FileMesh
Part300.Name = "HumanoidRootPart"
Part300.Parent = Model273
Part300.CFrame = CFrame.new(14.2657824, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part300.Position = Vector3.new(14.2657824, 52.1646652, 5.28057623)
Part300.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part300.Transparency = 1
Part300.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part300.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part300.BottomSurface = Enum.SurfaceType.Smooth
Part300.BrickColor = BrickColor.new("Bright blue")
Part300.CanCollide = false
Part300.LeftParamA = 0
Part300.LeftParamB = 0
Part300.RightParamA = 0
Part300.RightParamB = 0
Part300.TopSurface = Enum.SurfaceType.Smooth
Part300.brickColor = BrickColor.new("Bright blue")
Part300.FormFactor = Enum.FormFactor.Symmetric
Part300.formFactor = Enum.FormFactor.Symmetric
Motor6D301.Name = "RootJoint"
Motor6D301.Parent = Part300
Motor6D301.MaxVelocity = 0.10000000149012
Motor6D301.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D301.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D301.Part0 = Part300
Motor6D301.Part1 = Part310
Motor6D301.part1 = Part310
Part302.Name = "Left Arm"
Part302.Parent = Model273
Part302.CFrame = CFrame.new(9.0060215, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part302.Position = Vector3.new(9.0060215, 52.1646652, 5.28057623)
Part302.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part302.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part302.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part302.BrickColor = BrickColor.new("Bright yellow")
Part302.CanCollide = false
Part302.brickColor = BrickColor.new("Bright yellow")
Part302.FormFactor = Enum.FormFactor.Symmetric
Part302.formFactor = Enum.FormFactor.Symmetric
SpecialMesh303.Parent = Part302
SpecialMesh303.MeshId = "rbxassetid://300344022"
SpecialMesh303.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh303.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh303.TextureId = "rbxassetid://300344518"
SpecialMesh303.MeshType = Enum.MeshType.FileMesh
Part304.Name = "Left Leg"
Part304.Parent = Model273
Part304.CFrame = CFrame.new(12.5125284, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part304.Position = Vector3.new(12.5125284, 45.1516495, 5.28057623)
Part304.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part304.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part304.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part304.BottomSurface = Enum.SurfaceType.Smooth
Part304.BrickColor = BrickColor.new("Bright yellow")
Part304.CanCollide = false
Part304.brickColor = BrickColor.new("Bright yellow")
Part304.FormFactor = Enum.FormFactor.Symmetric
Part304.formFactor = Enum.FormFactor.Symmetric
SpecialMesh305.Parent = Part304
SpecialMesh305.MeshId = "rbxassetid://300344043"
SpecialMesh305.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh305.TextureId = "rbxassetid://300344518"
SpecialMesh305.MeshType = Enum.MeshType.FileMesh
Part306.Name = "Right Arm"
Part306.Parent = Model273
Part306.CFrame = CFrame.new(19.5255432, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part306.Position = Vector3.new(19.5255432, 52.1646652, 5.28057623)
Part306.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part306.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part306.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part306.BrickColor = BrickColor.new("Bright yellow")
Part306.CanCollide = false
Part306.brickColor = BrickColor.new("Bright yellow")
Part306.FormFactor = Enum.FormFactor.Symmetric
Part306.formFactor = Enum.FormFactor.Symmetric
SpecialMesh307.Parent = Part306
SpecialMesh307.MeshId = "rbxassetid://300344064"
SpecialMesh307.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh307.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh307.TextureId = "rbxassetid://300344518"
SpecialMesh307.MeshType = Enum.MeshType.FileMesh
Part308.Name = "Right Leg"
Part308.Parent = Model273
Part308.CFrame = CFrame.new(16.0190353, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part308.Position = Vector3.new(16.0190353, 45.1516495, 5.28057623)
Part308.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part308.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part308.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part308.BottomSurface = Enum.SurfaceType.Smooth
Part308.BrickColor = BrickColor.new("Bright yellow")
Part308.CanCollide = false
Part308.brickColor = BrickColor.new("Bright yellow")
Part308.FormFactor = Enum.FormFactor.Symmetric
Part308.formFactor = Enum.FormFactor.Symmetric
SpecialMesh309.Parent = Part308
SpecialMesh309.MeshId = "rbxassetid://300344090"
SpecialMesh309.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh309.TextureId = "rbxassetid://300344518"
SpecialMesh309.MeshType = Enum.MeshType.FileMesh
Part310.Name = "Torso"
Part310.Parent = Model273
Part310.CFrame = CFrame.new(14.2657824, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part310.Position = Vector3.new(14.2657824, 52.1646652, 5.28057623)
Part310.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part310.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part310.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part310.BrickColor = BrickColor.new("Bright yellow")
Part310.LeftParamA = 0
Part310.LeftParamB = 0
Part310.LeftSurface = Enum.SurfaceType.Weld
Part310.RightParamA = 0
Part310.RightParamB = 0
Part310.RightSurface = Enum.SurfaceType.Weld
Part310.brickColor = BrickColor.new("Bright yellow")
Part310.FormFactor = Enum.FormFactor.Symmetric
Part310.formFactor = Enum.FormFactor.Symmetric
Decal311.Name = "roblox"
Decal311.Parent = Part310
Motor6D312.Name = "Right Shoulder"
Motor6D312.Parent = Part310
Motor6D312.MaxVelocity = 0.10000000149012
Motor6D312.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D312.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D312.Part0 = Part310
Motor6D312.Part1 = Part306
Motor6D312.part1 = Part306
Motor6D313.Name = "Left Shoulder"
Motor6D313.Parent = Part310
Motor6D313.MaxVelocity = 0.10000000149012
Motor6D313.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D313.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D313.Part0 = Part310
Motor6D313.Part1 = Part302
Motor6D313.part1 = Part302
Motor6D314.Name = "Right Hip"
Motor6D314.Parent = Part310
Motor6D314.MaxVelocity = 0.10000000149012
Motor6D314.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D314.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D314.Part0 = Part310
Motor6D314.Part1 = Part308
Motor6D314.part1 = Part308
Motor6D315.Name = "Left Hip"
Motor6D315.Parent = Part310
Motor6D315.MaxVelocity = 0.10000000149012
Motor6D315.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D315.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D315.Part0 = Part310
Motor6D315.Part1 = Part304
Motor6D315.part1 = Part304
Motor6D316.Name = "Neck"
Motor6D316.Parent = Part310
Motor6D316.MaxVelocity = 0.10000000149012
Motor6D316.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D316.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D316.Part0 = Part310
Motor6D316.Part1 = Part298
Motor6D316.part1 = Part298
SpecialMesh317.Parent = Part310
SpecialMesh317.MeshId = "rbxassetid://300344229"
SpecialMesh317.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh317.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh317.TextureId = "rbxassetid://300344518"
SpecialMesh317.MeshType = Enum.MeshType.FileMesh
Model318.Name = "DanTDM"
Model318.Parent = mas
BodyColors319.Parent = Model318
BodyColors319.HeadColor = BrickColor.new("Bright yellow")
BodyColors319.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors319.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors319.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.RightArmColor = BrickColor.new("Bright yellow")
BodyColors319.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.RightLegColor = BrickColor.new("Bright yellow")
BodyColors319.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors319.TorsoColor = BrickColor.new("Bright yellow")
BodyColors319.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script320.Name = "Health"
Script320.Parent = Model318
table.insert(cors,sandbox(Script320,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script321.Name = "Sound"
Script321.Parent = Model318
table.insert(cors,sandbox(Script321,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript322.Name = "LocalSound"
LocalScript322.Parent = Script321
table.insert(cors,sandbox(LocalScript322,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript323.Name = "Animate"
LocalScript323.Parent = Model318
table.insert(cors,sandbox(LocalScript323,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue324.Name = "idle"
StringValue324.Parent = LocalScript323
Animation325.Name = "Animation1"
Animation325.Parent = StringValue324
Animation325.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue326.Name = "Weight"
NumberValue326.Parent = Animation325
NumberValue326.Value = 9
Animation327.Name = "Animation2"
Animation327.Parent = StringValue324
Animation327.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue328.Name = "Weight"
NumberValue328.Parent = Animation327
NumberValue328.Value = 1
StringValue329.Name = "walk"
StringValue329.Parent = LocalScript323
Animation330.Name = "WalkAnim"
Animation330.Parent = StringValue329
Animation330.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue331.Name = "run"
StringValue331.Parent = LocalScript323
Animation332.Name = "RunAnim"
Animation332.Parent = StringValue331
Animation332.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue333.Name = "jump"
StringValue333.Parent = LocalScript323
Animation334.Name = "JumpAnim"
Animation334.Parent = StringValue333
Animation334.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue335.Name = "climb"
StringValue335.Parent = LocalScript323
Animation336.Name = "ClimbAnim"
Animation336.Parent = StringValue335
Animation336.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue337.Name = "toolnone"
StringValue337.Parent = LocalScript323
Animation338.Name = "ToolNoneAnim"
Animation338.Parent = StringValue337
Animation338.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue339.Name = "fall"
StringValue339.Parent = LocalScript323
Animation340.Name = "FallAnim"
Animation340.Parent = StringValue339
Animation340.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue341.Name = "sit"
StringValue341.Parent = LocalScript323
Animation342.Name = "SitAnim"
Animation342.Parent = StringValue341
Animation342.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part343.Name = "Head"
Part343.Parent = Model318
Part343.CFrame = CFrame.new(25.2900009, 57.424427, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part343.Position = Vector3.new(25.2900009, 57.424427, 5.28057623)
Part343.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part343.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part343.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part343.BrickColor = BrickColor.new("Bright yellow")
Part343.TopSurface = Enum.SurfaceType.Smooth
Part343.brickColor = BrickColor.new("Bright yellow")
Part343.FormFactor = Enum.FormFactor.Symmetric
Part343.formFactor = Enum.FormFactor.Symmetric
SpecialMesh344.Parent = Part343
SpecialMesh344.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh344.TextureId = "rbxassetid://300344518"
SpecialMesh344.MeshType = Enum.MeshType.FileMesh
Part345.Name = "HumanoidRootPart"
Part345.Parent = Model318
Part345.CFrame = CFrame.new(25.2900009, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part345.Position = Vector3.new(25.2900009, 52.1646652, 5.28057623)
Part345.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part345.Transparency = 1
Part345.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part345.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part345.BottomSurface = Enum.SurfaceType.Smooth
Part345.BrickColor = BrickColor.new("Bright blue")
Part345.CanCollide = false
Part345.LeftParamA = 0
Part345.LeftParamB = 0
Part345.RightParamA = 0
Part345.RightParamB = 0
Part345.TopSurface = Enum.SurfaceType.Smooth
Part345.brickColor = BrickColor.new("Bright blue")
Part345.FormFactor = Enum.FormFactor.Symmetric
Part345.formFactor = Enum.FormFactor.Symmetric
Motor6D346.Name = "RootJoint"
Motor6D346.Parent = Part345
Motor6D346.MaxVelocity = 0.10000000149012
Motor6D346.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D346.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D346.Part0 = Part345
Motor6D346.Part1 = Part355
Motor6D346.part1 = Part355
Part347.Name = "Left Arm"
Part347.Parent = Model318
Part347.CFrame = CFrame.new(20.0302391, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part347.Position = Vector3.new(20.0302391, 52.1646652, 5.28057623)
Part347.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part347.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part347.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part347.BrickColor = BrickColor.new("Bright yellow")
Part347.CanCollide = false
Part347.brickColor = BrickColor.new("Bright yellow")
Part347.FormFactor = Enum.FormFactor.Symmetric
Part347.formFactor = Enum.FormFactor.Symmetric
SpecialMesh348.Parent = Part347
SpecialMesh348.MeshId = "rbxassetid://300344022"
SpecialMesh348.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh348.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh348.TextureId = "rbxassetid://300344518"
SpecialMesh348.MeshType = Enum.MeshType.FileMesh
Part349.Name = "Left Leg"
Part349.Parent = Model318
Part349.CFrame = CFrame.new(23.536747, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part349.Position = Vector3.new(23.536747, 45.1516495, 5.28057623)
Part349.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part349.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part349.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part349.BottomSurface = Enum.SurfaceType.Smooth
Part349.BrickColor = BrickColor.new("Bright yellow")
Part349.CanCollide = false
Part349.brickColor = BrickColor.new("Bright yellow")
Part349.FormFactor = Enum.FormFactor.Symmetric
Part349.formFactor = Enum.FormFactor.Symmetric
SpecialMesh350.Parent = Part349
SpecialMesh350.MeshId = "rbxassetid://300344043"
SpecialMesh350.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh350.TextureId = "rbxassetid://300344518"
SpecialMesh350.MeshType = Enum.MeshType.FileMesh
Part351.Name = "Right Arm"
Part351.Parent = Model318
Part351.CFrame = CFrame.new(30.5497627, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part351.Position = Vector3.new(30.5497627, 52.1646652, 5.28057623)
Part351.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part351.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part351.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part351.BrickColor = BrickColor.new("Bright yellow")
Part351.CanCollide = false
Part351.brickColor = BrickColor.new("Bright yellow")
Part351.FormFactor = Enum.FormFactor.Symmetric
Part351.formFactor = Enum.FormFactor.Symmetric
SpecialMesh352.Parent = Part351
SpecialMesh352.MeshId = "rbxassetid://300344064"
SpecialMesh352.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh352.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh352.TextureId = "rbxassetid://300344518"
SpecialMesh352.MeshType = Enum.MeshType.FileMesh
Part353.Name = "Right Leg"
Part353.Parent = Model318
Part353.CFrame = CFrame.new(27.0432549, 45.1516495, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part353.Position = Vector3.new(27.0432549, 45.1516495, 5.28057623)
Part353.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part353.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part353.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part353.BottomSurface = Enum.SurfaceType.Smooth
Part353.BrickColor = BrickColor.new("Bright yellow")
Part353.CanCollide = false
Part353.brickColor = BrickColor.new("Bright yellow")
Part353.FormFactor = Enum.FormFactor.Symmetric
Part353.formFactor = Enum.FormFactor.Symmetric
SpecialMesh354.Parent = Part353
SpecialMesh354.MeshId = "rbxassetid://300344090"
SpecialMesh354.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh354.TextureId = "rbxassetid://300344518"
SpecialMesh354.MeshType = Enum.MeshType.FileMesh
Part355.Name = "Torso"
Part355.Parent = Model318
Part355.CFrame = CFrame.new(25.2900009, 52.1646652, 5.28057623, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part355.Position = Vector3.new(25.2900009, 52.1646652, 5.28057623)
Part355.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part355.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part355.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part355.BrickColor = BrickColor.new("Bright yellow")
Part355.LeftParamA = 0
Part355.LeftParamB = 0
Part355.LeftSurface = Enum.SurfaceType.Weld
Part355.RightParamA = 0
Part355.RightParamB = 0
Part355.RightSurface = Enum.SurfaceType.Weld
Part355.brickColor = BrickColor.new("Bright yellow")
Part355.FormFactor = Enum.FormFactor.Symmetric
Part355.formFactor = Enum.FormFactor.Symmetric
Decal356.Name = "roblox"
Decal356.Parent = Part355
Motor6D357.Name = "Right Shoulder"
Motor6D357.Parent = Part355
Motor6D357.MaxVelocity = 0.10000000149012
Motor6D357.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D357.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D357.Part0 = Part355
Motor6D357.Part1 = Part351
Motor6D357.part1 = Part351
Motor6D358.Name = "Left Shoulder"
Motor6D358.Parent = Part355
Motor6D358.MaxVelocity = 0.10000000149012
Motor6D358.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D358.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D358.Part0 = Part355
Motor6D358.Part1 = Part347
Motor6D358.part1 = Part347
Motor6D359.Name = "Right Hip"
Motor6D359.Parent = Part355
Motor6D359.MaxVelocity = 0.10000000149012
Motor6D359.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D359.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D359.Part0 = Part355
Motor6D359.Part1 = Part353
Motor6D359.part1 = Part353
Motor6D360.Name = "Left Hip"
Motor6D360.Parent = Part355
Motor6D360.MaxVelocity = 0.10000000149012
Motor6D360.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D360.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D360.Part0 = Part355
Motor6D360.Part1 = Part349
Motor6D360.part1 = Part349
Motor6D361.Name = "Neck"
Motor6D361.Parent = Part355
Motor6D361.MaxVelocity = 0.10000000149012
Motor6D361.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D361.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D361.Part0 = Part355
Motor6D361.Part1 = Part343
Motor6D361.part1 = Part343
SpecialMesh362.Parent = Part355
SpecialMesh362.MeshId = "rbxassetid://300344229"
SpecialMesh362.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh362.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh362.TextureId = "rbxassetid://300344518"
SpecialMesh362.MeshType = Enum.MeshType.FileMesh
Model363.Name = "DanTDM"
Model363.Parent = mas
BodyColors364.Parent = Model363
BodyColors364.HeadColor = BrickColor.new("Bright yellow")
BodyColors364.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors364.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors364.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.RightArmColor = BrickColor.new("Bright yellow")
BodyColors364.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.RightLegColor = BrickColor.new("Bright yellow")
BodyColors364.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors364.TorsoColor = BrickColor.new("Bright yellow")
BodyColors364.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script365.Name = "Health"
Script365.Parent = Model363
table.insert(cors,sandbox(Script365,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script366.Name = "Sound"
Script366.Parent = Model363
table.insert(cors,sandbox(Script366,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript367.Name = "LocalSound"
LocalScript367.Parent = Script366
table.insert(cors,sandbox(LocalScript367,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript368.Name = "Animate"
LocalScript368.Parent = Model363
table.insert(cors,sandbox(LocalScript368,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue369.Name = "idle"
StringValue369.Parent = LocalScript368
Animation370.Name = "Animation1"
Animation370.Parent = StringValue369
Animation370.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue371.Name = "Weight"
NumberValue371.Parent = Animation370
NumberValue371.Value = 9
Animation372.Name = "Animation2"
Animation372.Parent = StringValue369
Animation372.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue373.Name = "Weight"
NumberValue373.Parent = Animation372
NumberValue373.Value = 1
StringValue374.Name = "walk"
StringValue374.Parent = LocalScript368
Animation375.Name = "WalkAnim"
Animation375.Parent = StringValue374
Animation375.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue376.Name = "run"
StringValue376.Parent = LocalScript368
Animation377.Name = "RunAnim"
Animation377.Parent = StringValue376
Animation377.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue378.Name = "jump"
StringValue378.Parent = LocalScript368
Animation379.Name = "JumpAnim"
Animation379.Parent = StringValue378
Animation379.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue380.Name = "climb"
StringValue380.Parent = LocalScript368
Animation381.Name = "ClimbAnim"
Animation381.Parent = StringValue380
Animation381.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue382.Name = "toolnone"
StringValue382.Parent = LocalScript368
Animation383.Name = "ToolNoneAnim"
Animation383.Parent = StringValue382
Animation383.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue384.Name = "fall"
StringValue384.Parent = LocalScript368
Animation385.Name = "FallAnim"
Animation385.Parent = StringValue384
Animation385.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue386.Name = "sit"
StringValue386.Parent = LocalScript368
Animation387.Name = "SitAnim"
Animation387.Parent = StringValue386
Animation387.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part388.Name = "Head"
Part388.Parent = Model363
Part388.CFrame = CFrame.new(-8.8614502, 57.424427, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part388.Position = Vector3.new(-8.8614502, 57.424427, -5.30866861)
Part388.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part388.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part388.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part388.BrickColor = BrickColor.new("Bright yellow")
Part388.TopSurface = Enum.SurfaceType.Smooth
Part388.brickColor = BrickColor.new("Bright yellow")
Part388.FormFactor = Enum.FormFactor.Symmetric
Part388.formFactor = Enum.FormFactor.Symmetric
SpecialMesh389.Parent = Part388
SpecialMesh389.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh389.TextureId = "rbxassetid://300344518"
SpecialMesh389.MeshType = Enum.MeshType.FileMesh
Part390.Name = "HumanoidRootPart"
Part390.Parent = Model363
Part390.CFrame = CFrame.new(-8.8614502, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part390.Position = Vector3.new(-8.8614502, 52.1646652, -5.30866861)
Part390.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part390.Transparency = 1
Part390.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part390.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part390.BottomSurface = Enum.SurfaceType.Smooth
Part390.BrickColor = BrickColor.new("Bright blue")
Part390.CanCollide = false
Part390.LeftParamA = 0
Part390.LeftParamB = 0
Part390.RightParamA = 0
Part390.RightParamB = 0
Part390.TopSurface = Enum.SurfaceType.Smooth
Part390.brickColor = BrickColor.new("Bright blue")
Part390.FormFactor = Enum.FormFactor.Symmetric
Part390.formFactor = Enum.FormFactor.Symmetric
Motor6D391.Name = "RootJoint"
Motor6D391.Parent = Part390
Motor6D391.MaxVelocity = 0.10000000149012
Motor6D391.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D391.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D391.Part0 = Part390
Motor6D391.Part1 = Part400
Motor6D391.part1 = Part400
Part392.Name = "Left Arm"
Part392.Parent = Model363
Part392.CFrame = CFrame.new(-14.1212111, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part392.Position = Vector3.new(-14.1212111, 52.1646652, -5.30866861)
Part392.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part392.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part392.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part392.BrickColor = BrickColor.new("Bright yellow")
Part392.CanCollide = false
Part392.brickColor = BrickColor.new("Bright yellow")
Part392.FormFactor = Enum.FormFactor.Symmetric
Part392.formFactor = Enum.FormFactor.Symmetric
SpecialMesh393.Parent = Part392
SpecialMesh393.MeshId = "rbxassetid://300344022"
SpecialMesh393.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh393.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh393.TextureId = "rbxassetid://300344518"
SpecialMesh393.MeshType = Enum.MeshType.FileMesh
Part394.Name = "Left Leg"
Part394.Parent = Model363
Part394.CFrame = CFrame.new(-10.6147041, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part394.Position = Vector3.new(-10.6147041, 45.1516495, -5.30866861)
Part394.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part394.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part394.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part394.BottomSurface = Enum.SurfaceType.Smooth
Part394.BrickColor = BrickColor.new("Bright yellow")
Part394.CanCollide = false
Part394.brickColor = BrickColor.new("Bright yellow")
Part394.FormFactor = Enum.FormFactor.Symmetric
Part394.formFactor = Enum.FormFactor.Symmetric
SpecialMesh395.Parent = Part394
SpecialMesh395.MeshId = "rbxassetid://300344043"
SpecialMesh395.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh395.TextureId = "rbxassetid://300344518"
SpecialMesh395.MeshType = Enum.MeshType.FileMesh
Part396.Name = "Right Arm"
Part396.Parent = Model363
Part396.CFrame = CFrame.new(-3.60168934, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part396.Position = Vector3.new(-3.60168934, 52.1646652, -5.30866861)
Part396.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part396.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part396.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part396.BrickColor = BrickColor.new("Bright yellow")
Part396.CanCollide = false
Part396.brickColor = BrickColor.new("Bright yellow")
Part396.FormFactor = Enum.FormFactor.Symmetric
Part396.formFactor = Enum.FormFactor.Symmetric
SpecialMesh397.Parent = Part396
SpecialMesh397.MeshId = "rbxassetid://300344064"
SpecialMesh397.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh397.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh397.TextureId = "rbxassetid://300344518"
SpecialMesh397.MeshType = Enum.MeshType.FileMesh
Part398.Name = "Right Leg"
Part398.Parent = Model363
Part398.CFrame = CFrame.new(-7.10819674, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part398.Position = Vector3.new(-7.10819674, 45.1516495, -5.30866861)
Part398.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part398.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part398.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part398.BottomSurface = Enum.SurfaceType.Smooth
Part398.BrickColor = BrickColor.new("Bright yellow")
Part398.CanCollide = false
Part398.brickColor = BrickColor.new("Bright yellow")
Part398.FormFactor = Enum.FormFactor.Symmetric
Part398.formFactor = Enum.FormFactor.Symmetric
SpecialMesh399.Parent = Part398
SpecialMesh399.MeshId = "rbxassetid://300344090"
SpecialMesh399.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh399.TextureId = "rbxassetid://300344518"
SpecialMesh399.MeshType = Enum.MeshType.FileMesh
Part400.Name = "Torso"
Part400.Parent = Model363
Part400.CFrame = CFrame.new(-8.8614502, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part400.Position = Vector3.new(-8.8614502, 52.1646652, -5.30866861)
Part400.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part400.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part400.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part400.BrickColor = BrickColor.new("Bright yellow")
Part400.LeftParamA = 0
Part400.LeftParamB = 0
Part400.LeftSurface = Enum.SurfaceType.Weld
Part400.RightParamA = 0
Part400.RightParamB = 0
Part400.RightSurface = Enum.SurfaceType.Weld
Part400.brickColor = BrickColor.new("Bright yellow")
Part400.FormFactor = Enum.FormFactor.Symmetric
Part400.formFactor = Enum.FormFactor.Symmetric
Decal401.Name = "roblox"
Decal401.Parent = Part400
Motor6D402.Name = "Right Shoulder"
Motor6D402.Parent = Part400
Motor6D402.MaxVelocity = 0.10000000149012
Motor6D402.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D402.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D402.Part0 = Part400
Motor6D402.Part1 = Part396
Motor6D402.part1 = Part396
Motor6D403.Name = "Left Shoulder"
Motor6D403.Parent = Part400
Motor6D403.MaxVelocity = 0.10000000149012
Motor6D403.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D403.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D403.Part0 = Part400
Motor6D403.Part1 = Part392
Motor6D403.part1 = Part392
Motor6D404.Name = "Right Hip"
Motor6D404.Parent = Part400
Motor6D404.MaxVelocity = 0.10000000149012
Motor6D404.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D404.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D404.Part0 = Part400
Motor6D404.Part1 = Part398
Motor6D404.part1 = Part398
Motor6D405.Name = "Left Hip"
Motor6D405.Parent = Part400
Motor6D405.MaxVelocity = 0.10000000149012
Motor6D405.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D405.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D405.Part0 = Part400
Motor6D405.Part1 = Part394
Motor6D405.part1 = Part394
Motor6D406.Name = "Neck"
Motor6D406.Parent = Part400
Motor6D406.MaxVelocity = 0.10000000149012
Motor6D406.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D406.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D406.Part0 = Part400
Motor6D406.Part1 = Part388
Motor6D406.part1 = Part388
SpecialMesh407.Parent = Part400
SpecialMesh407.MeshId = "rbxassetid://300344229"
SpecialMesh407.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh407.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh407.TextureId = "rbxassetid://300344518"
SpecialMesh407.MeshType = Enum.MeshType.FileMesh
Model408.Name = "DanTDM"
Model408.Parent = mas
BodyColors409.Parent = Model408
BodyColors409.HeadColor = BrickColor.new("Bright yellow")
BodyColors409.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors409.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors409.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.RightArmColor = BrickColor.new("Bright yellow")
BodyColors409.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.RightLegColor = BrickColor.new("Bright yellow")
BodyColors409.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors409.TorsoColor = BrickColor.new("Bright yellow")
BodyColors409.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script410.Name = "Health"
Script410.Parent = Model408
table.insert(cors,sandbox(Script410,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script411.Name = "Sound"
Script411.Parent = Model408
table.insert(cors,sandbox(Script411,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript412.Name = "LocalSound"
LocalScript412.Parent = Script411
table.insert(cors,sandbox(LocalScript412,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript413.Name = "Animate"
LocalScript413.Parent = Model408
table.insert(cors,sandbox(LocalScript413,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue414.Name = "idle"
StringValue414.Parent = LocalScript413
Animation415.Name = "Animation1"
Animation415.Parent = StringValue414
Animation415.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue416.Name = "Weight"
NumberValue416.Parent = Animation415
NumberValue416.Value = 9
Animation417.Name = "Animation2"
Animation417.Parent = StringValue414
Animation417.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue418.Name = "Weight"
NumberValue418.Parent = Animation417
NumberValue418.Value = 1
StringValue419.Name = "walk"
StringValue419.Parent = LocalScript413
Animation420.Name = "WalkAnim"
Animation420.Parent = StringValue419
Animation420.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue421.Name = "run"
StringValue421.Parent = LocalScript413
Animation422.Name = "RunAnim"
Animation422.Parent = StringValue421
Animation422.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue423.Name = "jump"
StringValue423.Parent = LocalScript413
Animation424.Name = "JumpAnim"
Animation424.Parent = StringValue423
Animation424.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue425.Name = "climb"
StringValue425.Parent = LocalScript413
Animation426.Name = "ClimbAnim"
Animation426.Parent = StringValue425
Animation426.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue427.Name = "toolnone"
StringValue427.Parent = LocalScript413
Animation428.Name = "ToolNoneAnim"
Animation428.Parent = StringValue427
Animation428.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue429.Name = "fall"
StringValue429.Parent = LocalScript413
Animation430.Name = "FallAnim"
Animation430.Parent = StringValue429
Animation430.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue431.Name = "sit"
StringValue431.Parent = LocalScript413
Animation432.Name = "SitAnim"
Animation432.Parent = StringValue431
Animation432.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part433.Name = "Head"
Part433.Parent = Model408
Part433.CFrame = CFrame.new(2.30972672, 57.424427, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part433.Position = Vector3.new(2.30972672, 57.424427, -5.30866861)
Part433.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part433.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part433.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part433.BrickColor = BrickColor.new("Bright yellow")
Part433.TopSurface = Enum.SurfaceType.Smooth
Part433.brickColor = BrickColor.new("Bright yellow")
Part433.FormFactor = Enum.FormFactor.Symmetric
Part433.formFactor = Enum.FormFactor.Symmetric
SpecialMesh434.Parent = Part433
SpecialMesh434.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh434.TextureId = "rbxassetid://300344518"
SpecialMesh434.MeshType = Enum.MeshType.FileMesh
Part435.Name = "HumanoidRootPart"
Part435.Parent = Model408
Part435.CFrame = CFrame.new(2.30972672, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part435.Position = Vector3.new(2.30972672, 52.1646652, -5.30866861)
Part435.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part435.Transparency = 1
Part435.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part435.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part435.BottomSurface = Enum.SurfaceType.Smooth
Part435.BrickColor = BrickColor.new("Bright blue")
Part435.CanCollide = false
Part435.LeftParamA = 0
Part435.LeftParamB = 0
Part435.RightParamA = 0
Part435.RightParamB = 0
Part435.TopSurface = Enum.SurfaceType.Smooth
Part435.brickColor = BrickColor.new("Bright blue")
Part435.FormFactor = Enum.FormFactor.Symmetric
Part435.formFactor = Enum.FormFactor.Symmetric
Motor6D436.Name = "RootJoint"
Motor6D436.Parent = Part435
Motor6D436.MaxVelocity = 0.10000000149012
Motor6D436.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D436.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D436.Part0 = Part435
Motor6D436.Part1 = Part445
Motor6D436.part1 = Part445
Part437.Name = "Left Arm"
Part437.Parent = Model408
Part437.CFrame = CFrame.new(-2.95003414, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part437.Position = Vector3.new(-2.95003414, 52.1646652, -5.30866861)
Part437.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part437.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part437.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part437.BrickColor = BrickColor.new("Bright yellow")
Part437.CanCollide = false
Part437.brickColor = BrickColor.new("Bright yellow")
Part437.FormFactor = Enum.FormFactor.Symmetric
Part437.formFactor = Enum.FormFactor.Symmetric
SpecialMesh438.Parent = Part437
SpecialMesh438.MeshId = "rbxassetid://300344022"
SpecialMesh438.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh438.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh438.TextureId = "rbxassetid://300344518"
SpecialMesh438.MeshType = Enum.MeshType.FileMesh
Part439.Name = "Left Leg"
Part439.Parent = Model408
Part439.CFrame = CFrame.new(0.556473136, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part439.Position = Vector3.new(0.556473136, 45.1516495, -5.30866861)
Part439.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part439.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part439.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part439.BottomSurface = Enum.SurfaceType.Smooth
Part439.BrickColor = BrickColor.new("Bright yellow")
Part439.CanCollide = false
Part439.brickColor = BrickColor.new("Bright yellow")
Part439.FormFactor = Enum.FormFactor.Symmetric
Part439.formFactor = Enum.FormFactor.Symmetric
SpecialMesh440.Parent = Part439
SpecialMesh440.MeshId = "rbxassetid://300344043"
SpecialMesh440.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh440.TextureId = "rbxassetid://300344518"
SpecialMesh440.MeshType = Enum.MeshType.FileMesh
Part441.Name = "Right Arm"
Part441.Parent = Model408
Part441.CFrame = CFrame.new(7.56948757, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part441.Position = Vector3.new(7.56948757, 52.1646652, -5.30866861)
Part441.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part441.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part441.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part441.BrickColor = BrickColor.new("Bright yellow")
Part441.CanCollide = false
Part441.brickColor = BrickColor.new("Bright yellow")
Part441.FormFactor = Enum.FormFactor.Symmetric
Part441.formFactor = Enum.FormFactor.Symmetric
SpecialMesh442.Parent = Part441
SpecialMesh442.MeshId = "rbxassetid://300344064"
SpecialMesh442.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh442.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh442.TextureId = "rbxassetid://300344518"
SpecialMesh442.MeshType = Enum.MeshType.FileMesh
Part443.Name = "Right Leg"
Part443.Parent = Model408
Part443.CFrame = CFrame.new(4.06298018, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part443.Position = Vector3.new(4.06298018, 45.1516495, -5.30866861)
Part443.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part443.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part443.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part443.BottomSurface = Enum.SurfaceType.Smooth
Part443.BrickColor = BrickColor.new("Bright yellow")
Part443.CanCollide = false
Part443.brickColor = BrickColor.new("Bright yellow")
Part443.FormFactor = Enum.FormFactor.Symmetric
Part443.formFactor = Enum.FormFactor.Symmetric
SpecialMesh444.Parent = Part443
SpecialMesh444.MeshId = "rbxassetid://300344090"
SpecialMesh444.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh444.TextureId = "rbxassetid://300344518"
SpecialMesh444.MeshType = Enum.MeshType.FileMesh
Part445.Name = "Torso"
Part445.Parent = Model408
Part445.CFrame = CFrame.new(2.30972672, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part445.Position = Vector3.new(2.30972672, 52.1646652, -5.30866861)
Part445.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part445.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part445.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part445.BrickColor = BrickColor.new("Bright yellow")
Part445.LeftParamA = 0
Part445.LeftParamB = 0
Part445.LeftSurface = Enum.SurfaceType.Weld
Part445.RightParamA = 0
Part445.RightParamB = 0
Part445.RightSurface = Enum.SurfaceType.Weld
Part445.brickColor = BrickColor.new("Bright yellow")
Part445.FormFactor = Enum.FormFactor.Symmetric
Part445.formFactor = Enum.FormFactor.Symmetric
Decal446.Name = "roblox"
Decal446.Parent = Part445
Motor6D447.Name = "Right Shoulder"
Motor6D447.Parent = Part445
Motor6D447.MaxVelocity = 0.10000000149012
Motor6D447.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D447.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D447.Part0 = Part445
Motor6D447.Part1 = Part441
Motor6D447.part1 = Part441
Motor6D448.Name = "Left Shoulder"
Motor6D448.Parent = Part445
Motor6D448.MaxVelocity = 0.10000000149012
Motor6D448.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D448.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D448.Part0 = Part445
Motor6D448.Part1 = Part437
Motor6D448.part1 = Part437
Motor6D449.Name = "Right Hip"
Motor6D449.Parent = Part445
Motor6D449.MaxVelocity = 0.10000000149012
Motor6D449.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D449.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D449.Part0 = Part445
Motor6D449.Part1 = Part443
Motor6D449.part1 = Part443
Motor6D450.Name = "Left Hip"
Motor6D450.Parent = Part445
Motor6D450.MaxVelocity = 0.10000000149012
Motor6D450.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D450.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D450.Part0 = Part445
Motor6D450.Part1 = Part439
Motor6D450.part1 = Part439
Motor6D451.Name = "Neck"
Motor6D451.Parent = Part445
Motor6D451.MaxVelocity = 0.10000000149012
Motor6D451.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D451.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D451.Part0 = Part445
Motor6D451.Part1 = Part433
Motor6D451.part1 = Part433
SpecialMesh452.Parent = Part445
SpecialMesh452.MeshId = "rbxassetid://300344229"
SpecialMesh452.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh452.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh452.TextureId = "rbxassetid://300344518"
SpecialMesh452.MeshType = Enum.MeshType.FileMesh
Model453.Name = "DanTDM"
Model453.Parent = mas
BodyColors454.Parent = Model453
BodyColors454.HeadColor = BrickColor.new("Bright yellow")
BodyColors454.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors454.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors454.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors454.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors454.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors454.RightArmColor = BrickColor.new("Bright yellow")
BodyColors454.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors454.RightLegColor = BrickColor.new("Bright yellow")
BodyColors454.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors454.TorsoColor = BrickColor.new("Bright yellow")
BodyColors454.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script455.Name = "Health"
Script455.Parent = Model453
table.insert(cors,sandbox(Script455,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script456.Name = "Sound"
Script456.Parent = Model453
table.insert(cors,sandbox(Script456,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript457.Name = "LocalSound"
LocalScript457.Parent = Script456
table.insert(cors,sandbox(LocalScript457,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript458.Name = "Animate"
LocalScript458.Parent = Model453
table.insert(cors,sandbox(LocalScript458,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue459.Name = "idle"
StringValue459.Parent = LocalScript458
Animation460.Name = "Animation1"
Animation460.Parent = StringValue459
Animation460.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue461.Name = "Weight"
NumberValue461.Parent = Animation460
NumberValue461.Value = 9
Animation462.Name = "Animation2"
Animation462.Parent = StringValue459
Animation462.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue463.Name = "Weight"
NumberValue463.Parent = Animation462
NumberValue463.Value = 1
StringValue464.Name = "walk"
StringValue464.Parent = LocalScript458
Animation465.Name = "WalkAnim"
Animation465.Parent = StringValue464
Animation465.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue466.Name = "run"
StringValue466.Parent = LocalScript458
Animation467.Name = "RunAnim"
Animation467.Parent = StringValue466
Animation467.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue468.Name = "jump"
StringValue468.Parent = LocalScript458
Animation469.Name = "JumpAnim"
Animation469.Parent = StringValue468
Animation469.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue470.Name = "climb"
StringValue470.Parent = LocalScript458
Animation471.Name = "ClimbAnim"
Animation471.Parent = StringValue470
Animation471.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue472.Name = "toolnone"
StringValue472.Parent = LocalScript458
Animation473.Name = "ToolNoneAnim"
Animation473.Parent = StringValue472
Animation473.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue474.Name = "fall"
StringValue474.Parent = LocalScript458
Animation475.Name = "FallAnim"
Animation475.Parent = StringValue474
Animation475.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue476.Name = "sit"
StringValue476.Parent = LocalScript458
Animation477.Name = "SitAnim"
Animation477.Parent = StringValue476
Animation477.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part478.Name = "Head"
Part478.Parent = Model453
Part478.CFrame = CFrame.new(14.2657824, 57.424427, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part478.Position = Vector3.new(14.2657824, 57.424427, -5.30866861)
Part478.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part478.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part478.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part478.BrickColor = BrickColor.new("Bright yellow")
Part478.TopSurface = Enum.SurfaceType.Smooth
Part478.brickColor = BrickColor.new("Bright yellow")
Part478.FormFactor = Enum.FormFactor.Symmetric
Part478.formFactor = Enum.FormFactor.Symmetric
SpecialMesh479.Parent = Part478
SpecialMesh479.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh479.TextureId = "rbxassetid://300344518"
SpecialMesh479.MeshType = Enum.MeshType.FileMesh
Part480.Name = "HumanoidRootPart"
Part480.Parent = Model453
Part480.CFrame = CFrame.new(14.2657824, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part480.Position = Vector3.new(14.2657824, 52.1646652, -5.30866861)
Part480.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part480.Transparency = 1
Part480.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part480.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part480.BottomSurface = Enum.SurfaceType.Smooth
Part480.BrickColor = BrickColor.new("Bright blue")
Part480.CanCollide = false
Part480.LeftParamA = 0
Part480.LeftParamB = 0
Part480.RightParamA = 0
Part480.RightParamB = 0
Part480.TopSurface = Enum.SurfaceType.Smooth
Part480.brickColor = BrickColor.new("Bright blue")
Part480.FormFactor = Enum.FormFactor.Symmetric
Part480.formFactor = Enum.FormFactor.Symmetric
Motor6D481.Name = "RootJoint"
Motor6D481.Parent = Part480
Motor6D481.MaxVelocity = 0.10000000149012
Motor6D481.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D481.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D481.Part0 = Part480
Motor6D481.Part1 = Part490
Motor6D481.part1 = Part490
Part482.Name = "Left Arm"
Part482.Parent = Model453
Part482.CFrame = CFrame.new(9.0060215, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part482.Position = Vector3.new(9.0060215, 52.1646652, -5.30866861)
Part482.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part482.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part482.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part482.BrickColor = BrickColor.new("Bright yellow")
Part482.CanCollide = false
Part482.brickColor = BrickColor.new("Bright yellow")
Part482.FormFactor = Enum.FormFactor.Symmetric
Part482.formFactor = Enum.FormFactor.Symmetric
SpecialMesh483.Parent = Part482
SpecialMesh483.MeshId = "rbxassetid://300344022"
SpecialMesh483.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh483.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh483.TextureId = "rbxassetid://300344518"
SpecialMesh483.MeshType = Enum.MeshType.FileMesh
Part484.Name = "Left Leg"
Part484.Parent = Model453
Part484.CFrame = CFrame.new(12.5125284, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part484.Position = Vector3.new(12.5125284, 45.1516495, -5.30866861)
Part484.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part484.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part484.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part484.BottomSurface = Enum.SurfaceType.Smooth
Part484.BrickColor = BrickColor.new("Bright yellow")
Part484.CanCollide = false
Part484.brickColor = BrickColor.new("Bright yellow")
Part484.FormFactor = Enum.FormFactor.Symmetric
Part484.formFactor = Enum.FormFactor.Symmetric
SpecialMesh485.Parent = Part484
SpecialMesh485.MeshId = "rbxassetid://300344043"
SpecialMesh485.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh485.TextureId = "rbxassetid://300344518"
SpecialMesh485.MeshType = Enum.MeshType.FileMesh
Part486.Name = "Right Arm"
Part486.Parent = Model453
Part486.CFrame = CFrame.new(19.5255432, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part486.Position = Vector3.new(19.5255432, 52.1646652, -5.30866861)
Part486.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part486.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part486.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part486.BrickColor = BrickColor.new("Bright yellow")
Part486.CanCollide = false
Part486.brickColor = BrickColor.new("Bright yellow")
Part486.FormFactor = Enum.FormFactor.Symmetric
Part486.formFactor = Enum.FormFactor.Symmetric
SpecialMesh487.Parent = Part486
SpecialMesh487.MeshId = "rbxassetid://300344064"
SpecialMesh487.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh487.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh487.TextureId = "rbxassetid://300344518"
SpecialMesh487.MeshType = Enum.MeshType.FileMesh
Part488.Name = "Right Leg"
Part488.Parent = Model453
Part488.CFrame = CFrame.new(16.0190353, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part488.Position = Vector3.new(16.0190353, 45.1516495, -5.30866861)
Part488.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part488.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part488.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part488.BottomSurface = Enum.SurfaceType.Smooth
Part488.BrickColor = BrickColor.new("Bright yellow")
Part488.CanCollide = false
Part488.brickColor = BrickColor.new("Bright yellow")
Part488.FormFactor = Enum.FormFactor.Symmetric
Part488.formFactor = Enum.FormFactor.Symmetric
SpecialMesh489.Parent = Part488
SpecialMesh489.MeshId = "rbxassetid://300344090"
SpecialMesh489.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh489.TextureId = "rbxassetid://300344518"
SpecialMesh489.MeshType = Enum.MeshType.FileMesh
Part490.Name = "Torso"
Part490.Parent = Model453
Part490.CFrame = CFrame.new(14.2657824, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part490.Position = Vector3.new(14.2657824, 52.1646652, -5.30866861)
Part490.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part490.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part490.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part490.BrickColor = BrickColor.new("Bright yellow")
Part490.LeftParamA = 0
Part490.LeftParamB = 0
Part490.LeftSurface = Enum.SurfaceType.Weld
Part490.RightParamA = 0
Part490.RightParamB = 0
Part490.RightSurface = Enum.SurfaceType.Weld
Part490.brickColor = BrickColor.new("Bright yellow")
Part490.FormFactor = Enum.FormFactor.Symmetric
Part490.formFactor = Enum.FormFactor.Symmetric
Decal491.Name = "roblox"
Decal491.Parent = Part490
Motor6D492.Name = "Right Shoulder"
Motor6D492.Parent = Part490
Motor6D492.MaxVelocity = 0.10000000149012
Motor6D492.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D492.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D492.Part0 = Part490
Motor6D492.Part1 = Part486
Motor6D492.part1 = Part486
Motor6D493.Name = "Left Shoulder"
Motor6D493.Parent = Part490
Motor6D493.MaxVelocity = 0.10000000149012
Motor6D493.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D493.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D493.Part0 = Part490
Motor6D493.Part1 = Part482
Motor6D493.part1 = Part482
Motor6D494.Name = "Right Hip"
Motor6D494.Parent = Part490
Motor6D494.MaxVelocity = 0.10000000149012
Motor6D494.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D494.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D494.Part0 = Part490
Motor6D494.Part1 = Part488
Motor6D494.part1 = Part488
Motor6D495.Name = "Left Hip"
Motor6D495.Parent = Part490
Motor6D495.MaxVelocity = 0.10000000149012
Motor6D495.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D495.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D495.Part0 = Part490
Motor6D495.Part1 = Part484
Motor6D495.part1 = Part484
Motor6D496.Name = "Neck"
Motor6D496.Parent = Part490
Motor6D496.MaxVelocity = 0.10000000149012
Motor6D496.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D496.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D496.Part0 = Part490
Motor6D496.Part1 = Part478
Motor6D496.part1 = Part478
SpecialMesh497.Parent = Part490
SpecialMesh497.MeshId = "rbxassetid://300344229"
SpecialMesh497.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh497.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh497.TextureId = "rbxassetid://300344518"
SpecialMesh497.MeshType = Enum.MeshType.FileMesh
Model498.Name = "DanTDM"
Model498.Parent = mas
BodyColors499.Parent = Model498
BodyColors499.HeadColor = BrickColor.new("Bright yellow")
BodyColors499.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors499.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors499.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors499.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors499.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors499.RightArmColor = BrickColor.new("Bright yellow")
BodyColors499.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors499.RightLegColor = BrickColor.new("Bright yellow")
BodyColors499.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors499.TorsoColor = BrickColor.new("Bright yellow")
BodyColors499.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script500.Name = "Health"
Script500.Parent = Model498
table.insert(cors,sandbox(Script500,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script501.Name = "Sound"
Script501.Parent = Model498
table.insert(cors,sandbox(Script501,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript502.Name = "LocalSound"
LocalScript502.Parent = Script501
table.insert(cors,sandbox(LocalScript502,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript503.Name = "Animate"
LocalScript503.Parent = Model498
table.insert(cors,sandbox(LocalScript503,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue504.Name = "idle"
StringValue504.Parent = LocalScript503
Animation505.Name = "Animation1"
Animation505.Parent = StringValue504
Animation505.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue506.Name = "Weight"
NumberValue506.Parent = Animation505
NumberValue506.Value = 9
Animation507.Name = "Animation2"
Animation507.Parent = StringValue504
Animation507.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue508.Name = "Weight"
NumberValue508.Parent = Animation507
NumberValue508.Value = 1
StringValue509.Name = "walk"
StringValue509.Parent = LocalScript503
Animation510.Name = "WalkAnim"
Animation510.Parent = StringValue509
Animation510.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue511.Name = "run"
StringValue511.Parent = LocalScript503
Animation512.Name = "RunAnim"
Animation512.Parent = StringValue511
Animation512.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue513.Name = "jump"
StringValue513.Parent = LocalScript503
Animation514.Name = "JumpAnim"
Animation514.Parent = StringValue513
Animation514.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue515.Name = "climb"
StringValue515.Parent = LocalScript503
Animation516.Name = "ClimbAnim"
Animation516.Parent = StringValue515
Animation516.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue517.Name = "toolnone"
StringValue517.Parent = LocalScript503
Animation518.Name = "ToolNoneAnim"
Animation518.Parent = StringValue517
Animation518.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue519.Name = "fall"
StringValue519.Parent = LocalScript503
Animation520.Name = "FallAnim"
Animation520.Parent = StringValue519
Animation520.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue521.Name = "sit"
StringValue521.Parent = LocalScript503
Animation522.Name = "SitAnim"
Animation522.Parent = StringValue521
Animation522.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part523.Name = "Head"
Part523.Parent = Model498
Part523.CFrame = CFrame.new(25.2900009, 57.424427, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part523.Position = Vector3.new(25.2900009, 57.424427, -5.30866861)
Part523.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part523.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part523.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part523.BrickColor = BrickColor.new("Bright yellow")
Part523.TopSurface = Enum.SurfaceType.Smooth
Part523.brickColor = BrickColor.new("Bright yellow")
Part523.FormFactor = Enum.FormFactor.Symmetric
Part523.formFactor = Enum.FormFactor.Symmetric
SpecialMesh524.Parent = Part523
SpecialMesh524.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh524.TextureId = "rbxassetid://300344518"
SpecialMesh524.MeshType = Enum.MeshType.FileMesh
Part525.Name = "HumanoidRootPart"
Part525.Parent = Model498
Part525.CFrame = CFrame.new(25.2900009, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part525.Position = Vector3.new(25.2900009, 52.1646652, -5.30866861)
Part525.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part525.Transparency = 1
Part525.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part525.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part525.BottomSurface = Enum.SurfaceType.Smooth
Part525.BrickColor = BrickColor.new("Bright blue")
Part525.CanCollide = false
Part525.LeftParamA = 0
Part525.LeftParamB = 0
Part525.RightParamA = 0
Part525.RightParamB = 0
Part525.TopSurface = Enum.SurfaceType.Smooth
Part525.brickColor = BrickColor.new("Bright blue")
Part525.FormFactor = Enum.FormFactor.Symmetric
Part525.formFactor = Enum.FormFactor.Symmetric
Motor6D526.Name = "RootJoint"
Motor6D526.Parent = Part525
Motor6D526.MaxVelocity = 0.10000000149012
Motor6D526.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D526.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D526.Part0 = Part525
Motor6D526.Part1 = Part535
Motor6D526.part1 = Part535
Part527.Name = "Left Arm"
Part527.Parent = Model498
Part527.CFrame = CFrame.new(20.0302391, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part527.Position = Vector3.new(20.0302391, 52.1646652, -5.30866861)
Part527.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part527.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part527.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part527.BrickColor = BrickColor.new("Bright yellow")
Part527.CanCollide = false
Part527.brickColor = BrickColor.new("Bright yellow")
Part527.FormFactor = Enum.FormFactor.Symmetric
Part527.formFactor = Enum.FormFactor.Symmetric
SpecialMesh528.Parent = Part527
SpecialMesh528.MeshId = "rbxassetid://300344022"
SpecialMesh528.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh528.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh528.TextureId = "rbxassetid://300344518"
SpecialMesh528.MeshType = Enum.MeshType.FileMesh
Part529.Name = "Left Leg"
Part529.Parent = Model498
Part529.CFrame = CFrame.new(23.536747, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part529.Position = Vector3.new(23.536747, 45.1516495, -5.30866861)
Part529.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part529.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part529.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part529.BottomSurface = Enum.SurfaceType.Smooth
Part529.BrickColor = BrickColor.new("Bright yellow")
Part529.CanCollide = false
Part529.brickColor = BrickColor.new("Bright yellow")
Part529.FormFactor = Enum.FormFactor.Symmetric
Part529.formFactor = Enum.FormFactor.Symmetric
SpecialMesh530.Parent = Part529
SpecialMesh530.MeshId = "rbxassetid://300344043"
SpecialMesh530.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh530.TextureId = "rbxassetid://300344518"
SpecialMesh530.MeshType = Enum.MeshType.FileMesh
Part531.Name = "Right Arm"
Part531.Parent = Model498
Part531.CFrame = CFrame.new(30.5497627, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part531.Position = Vector3.new(30.5497627, 52.1646652, -5.30866861)
Part531.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part531.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part531.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part531.BrickColor = BrickColor.new("Bright yellow")
Part531.CanCollide = false
Part531.brickColor = BrickColor.new("Bright yellow")
Part531.FormFactor = Enum.FormFactor.Symmetric
Part531.formFactor = Enum.FormFactor.Symmetric
SpecialMesh532.Parent = Part531
SpecialMesh532.MeshId = "rbxassetid://300344064"
SpecialMesh532.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh532.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh532.TextureId = "rbxassetid://300344518"
SpecialMesh532.MeshType = Enum.MeshType.FileMesh
Part533.Name = "Right Leg"
Part533.Parent = Model498
Part533.CFrame = CFrame.new(27.0432549, 45.1516495, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part533.Position = Vector3.new(27.0432549, 45.1516495, -5.30866861)
Part533.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part533.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part533.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part533.BottomSurface = Enum.SurfaceType.Smooth
Part533.BrickColor = BrickColor.new("Bright yellow")
Part533.CanCollide = false
Part533.brickColor = BrickColor.new("Bright yellow")
Part533.FormFactor = Enum.FormFactor.Symmetric
Part533.formFactor = Enum.FormFactor.Symmetric
SpecialMesh534.Parent = Part533
SpecialMesh534.MeshId = "rbxassetid://300344090"
SpecialMesh534.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh534.TextureId = "rbxassetid://300344518"
SpecialMesh534.MeshType = Enum.MeshType.FileMesh
Part535.Name = "Torso"
Part535.Parent = Model498
Part535.CFrame = CFrame.new(25.2900009, 52.1646652, -5.30866861, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part535.Position = Vector3.new(25.2900009, 52.1646652, -5.30866861)
Part535.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part535.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part535.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part535.BrickColor = BrickColor.new("Bright yellow")
Part535.LeftParamA = 0
Part535.LeftParamB = 0
Part535.LeftSurface = Enum.SurfaceType.Weld
Part535.RightParamA = 0
Part535.RightParamB = 0
Part535.RightSurface = Enum.SurfaceType.Weld
Part535.brickColor = BrickColor.new("Bright yellow")
Part535.FormFactor = Enum.FormFactor.Symmetric
Part535.formFactor = Enum.FormFactor.Symmetric
Decal536.Name = "roblox"
Decal536.Parent = Part535
Motor6D537.Name = "Right Shoulder"
Motor6D537.Parent = Part535
Motor6D537.MaxVelocity = 0.10000000149012
Motor6D537.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D537.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D537.Part0 = Part535
Motor6D537.Part1 = Part531
Motor6D537.part1 = Part531
Motor6D538.Name = "Left Shoulder"
Motor6D538.Parent = Part535
Motor6D538.MaxVelocity = 0.10000000149012
Motor6D538.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D538.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D538.Part0 = Part535
Motor6D538.Part1 = Part527
Motor6D538.part1 = Part527
Motor6D539.Name = "Right Hip"
Motor6D539.Parent = Part535
Motor6D539.MaxVelocity = 0.10000000149012
Motor6D539.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D539.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D539.Part0 = Part535
Motor6D539.Part1 = Part533
Motor6D539.part1 = Part533
Motor6D540.Name = "Left Hip"
Motor6D540.Parent = Part535
Motor6D540.MaxVelocity = 0.10000000149012
Motor6D540.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D540.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D540.Part0 = Part535
Motor6D540.Part1 = Part529
Motor6D540.part1 = Part529
Motor6D541.Name = "Neck"
Motor6D541.Parent = Part535
Motor6D541.MaxVelocity = 0.10000000149012
Motor6D541.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D541.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D541.Part0 = Part535
Motor6D541.Part1 = Part523
Motor6D541.part1 = Part523
SpecialMesh542.Parent = Part535
SpecialMesh542.MeshId = "rbxassetid://300344229"
SpecialMesh542.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh542.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh542.TextureId = "rbxassetid://300344518"
SpecialMesh542.MeshType = Enum.MeshType.FileMesh
Model543.Name = "DanTDM"
Model543.Parent = mas
BodyColors544.Parent = Model543
BodyColors544.HeadColor = BrickColor.new("Bright yellow")
BodyColors544.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors544.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors544.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors544.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors544.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors544.RightArmColor = BrickColor.new("Bright yellow")
BodyColors544.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors544.RightLegColor = BrickColor.new("Bright yellow")
BodyColors544.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors544.TorsoColor = BrickColor.new("Bright yellow")
BodyColors544.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script545.Name = "Health"
Script545.Parent = Model543
table.insert(cors,sandbox(Script545,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script546.Name = "Sound"
Script546.Parent = Model543
table.insert(cors,sandbox(Script546,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript547.Name = "LocalSound"
LocalScript547.Parent = Script546
table.insert(cors,sandbox(LocalScript547,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript548.Name = "Animate"
LocalScript548.Parent = Model543
table.insert(cors,sandbox(LocalScript548,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue549.Name = "idle"
StringValue549.Parent = LocalScript548
Animation550.Name = "Animation1"
Animation550.Parent = StringValue549
Animation550.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue551.Name = "Weight"
NumberValue551.Parent = Animation550
NumberValue551.Value = 9
Animation552.Name = "Animation2"
Animation552.Parent = StringValue549
Animation552.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue553.Name = "Weight"
NumberValue553.Parent = Animation552
NumberValue553.Value = 1
StringValue554.Name = "walk"
StringValue554.Parent = LocalScript548
Animation555.Name = "WalkAnim"
Animation555.Parent = StringValue554
Animation555.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue556.Name = "run"
StringValue556.Parent = LocalScript548
Animation557.Name = "RunAnim"
Animation557.Parent = StringValue556
Animation557.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue558.Name = "jump"
StringValue558.Parent = LocalScript548
Animation559.Name = "JumpAnim"
Animation559.Parent = StringValue558
Animation559.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue560.Name = "climb"
StringValue560.Parent = LocalScript548
Animation561.Name = "ClimbAnim"
Animation561.Parent = StringValue560
Animation561.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue562.Name = "toolnone"
StringValue562.Parent = LocalScript548
Animation563.Name = "ToolNoneAnim"
Animation563.Parent = StringValue562
Animation563.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue564.Name = "fall"
StringValue564.Parent = LocalScript548
Animation565.Name = "FallAnim"
Animation565.Parent = StringValue564
Animation565.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue566.Name = "sit"
StringValue566.Parent = LocalScript548
Animation567.Name = "SitAnim"
Animation567.Parent = StringValue566
Animation567.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part568.Name = "Head"
Part568.Parent = Model543
Part568.CFrame = CFrame.new(-8.8614502, 57.424427, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part568.Position = Vector3.new(-8.8614502, 57.424427, -14.28092)
Part568.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part568.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part568.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part568.BrickColor = BrickColor.new("Bright yellow")
Part568.TopSurface = Enum.SurfaceType.Smooth
Part568.brickColor = BrickColor.new("Bright yellow")
Part568.FormFactor = Enum.FormFactor.Symmetric
Part568.formFactor = Enum.FormFactor.Symmetric
SpecialMesh569.Parent = Part568
SpecialMesh569.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh569.TextureId = "rbxassetid://300344518"
SpecialMesh569.MeshType = Enum.MeshType.FileMesh
Part570.Name = "HumanoidRootPart"
Part570.Parent = Model543
Part570.CFrame = CFrame.new(-8.8614502, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part570.Position = Vector3.new(-8.8614502, 52.1646652, -14.28092)
Part570.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part570.Transparency = 1
Part570.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part570.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part570.BottomSurface = Enum.SurfaceType.Smooth
Part570.BrickColor = BrickColor.new("Bright blue")
Part570.CanCollide = false
Part570.LeftParamA = 0
Part570.LeftParamB = 0
Part570.RightParamA = 0
Part570.RightParamB = 0
Part570.TopSurface = Enum.SurfaceType.Smooth
Part570.brickColor = BrickColor.new("Bright blue")
Part570.FormFactor = Enum.FormFactor.Symmetric
Part570.formFactor = Enum.FormFactor.Symmetric
Motor6D571.Name = "RootJoint"
Motor6D571.Parent = Part570
Motor6D571.MaxVelocity = 0.10000000149012
Motor6D571.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D571.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D571.Part0 = Part570
Motor6D571.Part1 = Part580
Motor6D571.part1 = Part580
Part572.Name = "Left Arm"
Part572.Parent = Model543
Part572.CFrame = CFrame.new(-14.1212111, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part572.Position = Vector3.new(-14.1212111, 52.1646652, -14.28092)
Part572.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part572.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part572.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part572.BrickColor = BrickColor.new("Bright yellow")
Part572.CanCollide = false
Part572.brickColor = BrickColor.new("Bright yellow")
Part572.FormFactor = Enum.FormFactor.Symmetric
Part572.formFactor = Enum.FormFactor.Symmetric
SpecialMesh573.Parent = Part572
SpecialMesh573.MeshId = "rbxassetid://300344022"
SpecialMesh573.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh573.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh573.TextureId = "rbxassetid://300344518"
SpecialMesh573.MeshType = Enum.MeshType.FileMesh
Part574.Name = "Left Leg"
Part574.Parent = Model543
Part574.CFrame = CFrame.new(-10.6147041, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part574.Position = Vector3.new(-10.6147041, 45.1516495, -14.28092)
Part574.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part574.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part574.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part574.BottomSurface = Enum.SurfaceType.Smooth
Part574.BrickColor = BrickColor.new("Bright yellow")
Part574.CanCollide = false
Part574.brickColor = BrickColor.new("Bright yellow")
Part574.FormFactor = Enum.FormFactor.Symmetric
Part574.formFactor = Enum.FormFactor.Symmetric
SpecialMesh575.Parent = Part574
SpecialMesh575.MeshId = "rbxassetid://300344043"
SpecialMesh575.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh575.TextureId = "rbxassetid://300344518"
SpecialMesh575.MeshType = Enum.MeshType.FileMesh
Part576.Name = "Right Arm"
Part576.Parent = Model543
Part576.CFrame = CFrame.new(-3.60168934, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part576.Position = Vector3.new(-3.60168934, 52.1646652, -14.28092)
Part576.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part576.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part576.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part576.BrickColor = BrickColor.new("Bright yellow")
Part576.CanCollide = false
Part576.brickColor = BrickColor.new("Bright yellow")
Part576.FormFactor = Enum.FormFactor.Symmetric
Part576.formFactor = Enum.FormFactor.Symmetric
SpecialMesh577.Parent = Part576
SpecialMesh577.MeshId = "rbxassetid://300344064"
SpecialMesh577.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh577.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh577.TextureId = "rbxassetid://300344518"
SpecialMesh577.MeshType = Enum.MeshType.FileMesh
Part578.Name = "Right Leg"
Part578.Parent = Model543
Part578.CFrame = CFrame.new(-7.10819674, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part578.Position = Vector3.new(-7.10819674, 45.1516495, -14.28092)
Part578.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part578.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part578.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part578.BottomSurface = Enum.SurfaceType.Smooth
Part578.BrickColor = BrickColor.new("Bright yellow")
Part578.CanCollide = false
Part578.brickColor = BrickColor.new("Bright yellow")
Part578.FormFactor = Enum.FormFactor.Symmetric
Part578.formFactor = Enum.FormFactor.Symmetric
SpecialMesh579.Parent = Part578
SpecialMesh579.MeshId = "rbxassetid://300344090"
SpecialMesh579.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh579.TextureId = "rbxassetid://300344518"
SpecialMesh579.MeshType = Enum.MeshType.FileMesh
Part580.Name = "Torso"
Part580.Parent = Model543
Part580.CFrame = CFrame.new(-8.8614502, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part580.Position = Vector3.new(-8.8614502, 52.1646652, -14.28092)
Part580.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part580.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part580.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part580.BrickColor = BrickColor.new("Bright yellow")
Part580.LeftParamA = 0
Part580.LeftParamB = 0
Part580.LeftSurface = Enum.SurfaceType.Weld
Part580.RightParamA = 0
Part580.RightParamB = 0
Part580.RightSurface = Enum.SurfaceType.Weld
Part580.brickColor = BrickColor.new("Bright yellow")
Part580.FormFactor = Enum.FormFactor.Symmetric
Part580.formFactor = Enum.FormFactor.Symmetric
Decal581.Name = "roblox"
Decal581.Parent = Part580
Motor6D582.Name = "Right Shoulder"
Motor6D582.Parent = Part580
Motor6D582.MaxVelocity = 0.10000000149012
Motor6D582.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D582.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D582.Part0 = Part580
Motor6D582.Part1 = Part576
Motor6D582.part1 = Part576
Motor6D583.Name = "Left Shoulder"
Motor6D583.Parent = Part580
Motor6D583.MaxVelocity = 0.10000000149012
Motor6D583.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D583.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D583.Part0 = Part580
Motor6D583.Part1 = Part572
Motor6D583.part1 = Part572
Motor6D584.Name = "Right Hip"
Motor6D584.Parent = Part580
Motor6D584.MaxVelocity = 0.10000000149012
Motor6D584.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D584.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D584.Part0 = Part580
Motor6D584.Part1 = Part578
Motor6D584.part1 = Part578
Motor6D585.Name = "Left Hip"
Motor6D585.Parent = Part580
Motor6D585.MaxVelocity = 0.10000000149012
Motor6D585.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D585.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D585.Part0 = Part580
Motor6D585.Part1 = Part574
Motor6D585.part1 = Part574
Motor6D586.Name = "Neck"
Motor6D586.Parent = Part580
Motor6D586.MaxVelocity = 0.10000000149012
Motor6D586.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D586.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D586.Part0 = Part580
Motor6D586.Part1 = Part568
Motor6D586.part1 = Part568
SpecialMesh587.Parent = Part580
SpecialMesh587.MeshId = "rbxassetid://300344229"
SpecialMesh587.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh587.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh587.TextureId = "rbxassetid://300344518"
SpecialMesh587.MeshType = Enum.MeshType.FileMesh
Model588.Name = "DanTDM"
Model588.Parent = mas
BodyColors589.Parent = Model588
BodyColors589.HeadColor = BrickColor.new("Bright yellow")
BodyColors589.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors589.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors589.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors589.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors589.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors589.RightArmColor = BrickColor.new("Bright yellow")
BodyColors589.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors589.RightLegColor = BrickColor.new("Bright yellow")
BodyColors589.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors589.TorsoColor = BrickColor.new("Bright yellow")
BodyColors589.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script590.Name = "Health"
Script590.Parent = Model588
table.insert(cors,sandbox(Script590,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script591.Name = "Sound"
Script591.Parent = Model588
table.insert(cors,sandbox(Script591,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript592.Name = "LocalSound"
LocalScript592.Parent = Script591
table.insert(cors,sandbox(LocalScript592,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript593.Name = "Animate"
LocalScript593.Parent = Model588
table.insert(cors,sandbox(LocalScript593,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue594.Name = "idle"
StringValue594.Parent = LocalScript593
Animation595.Name = "Animation1"
Animation595.Parent = StringValue594
Animation595.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue596.Name = "Weight"
NumberValue596.Parent = Animation595
NumberValue596.Value = 9
Animation597.Name = "Animation2"
Animation597.Parent = StringValue594
Animation597.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue598.Name = "Weight"
NumberValue598.Parent = Animation597
NumberValue598.Value = 1
StringValue599.Name = "walk"
StringValue599.Parent = LocalScript593
Animation600.Name = "WalkAnim"
Animation600.Parent = StringValue599
Animation600.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue601.Name = "run"
StringValue601.Parent = LocalScript593
Animation602.Name = "RunAnim"
Animation602.Parent = StringValue601
Animation602.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue603.Name = "jump"
StringValue603.Parent = LocalScript593
Animation604.Name = "JumpAnim"
Animation604.Parent = StringValue603
Animation604.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue605.Name = "climb"
StringValue605.Parent = LocalScript593
Animation606.Name = "ClimbAnim"
Animation606.Parent = StringValue605
Animation606.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue607.Name = "toolnone"
StringValue607.Parent = LocalScript593
Animation608.Name = "ToolNoneAnim"
Animation608.Parent = StringValue607
Animation608.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue609.Name = "fall"
StringValue609.Parent = LocalScript593
Animation610.Name = "FallAnim"
Animation610.Parent = StringValue609
Animation610.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue611.Name = "sit"
StringValue611.Parent = LocalScript593
Animation612.Name = "SitAnim"
Animation612.Parent = StringValue611
Animation612.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part613.Name = "Head"
Part613.Parent = Model588
Part613.CFrame = CFrame.new(2.30972672, 57.424427, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part613.Position = Vector3.new(2.30972672, 57.424427, -14.28092)
Part613.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part613.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part613.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part613.BrickColor = BrickColor.new("Bright yellow")
Part613.TopSurface = Enum.SurfaceType.Smooth
Part613.brickColor = BrickColor.new("Bright yellow")
Part613.FormFactor = Enum.FormFactor.Symmetric
Part613.formFactor = Enum.FormFactor.Symmetric
SpecialMesh614.Parent = Part613
SpecialMesh614.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh614.TextureId = "rbxassetid://300344518"
SpecialMesh614.MeshType = Enum.MeshType.FileMesh
Part615.Name = "HumanoidRootPart"
Part615.Parent = Model588
Part615.CFrame = CFrame.new(2.30972672, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part615.Position = Vector3.new(2.30972672, 52.1646652, -14.28092)
Part615.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part615.Transparency = 1
Part615.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part615.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part615.BottomSurface = Enum.SurfaceType.Smooth
Part615.BrickColor = BrickColor.new("Bright blue")
Part615.CanCollide = false
Part615.LeftParamA = 0
Part615.LeftParamB = 0
Part615.RightParamA = 0
Part615.RightParamB = 0
Part615.TopSurface = Enum.SurfaceType.Smooth
Part615.brickColor = BrickColor.new("Bright blue")
Part615.FormFactor = Enum.FormFactor.Symmetric
Part615.formFactor = Enum.FormFactor.Symmetric
Motor6D616.Name = "RootJoint"
Motor6D616.Parent = Part615
Motor6D616.MaxVelocity = 0.10000000149012
Motor6D616.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D616.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D616.Part0 = Part615
Motor6D616.Part1 = Part625
Motor6D616.part1 = Part625
Part617.Name = "Left Arm"
Part617.Parent = Model588
Part617.CFrame = CFrame.new(-2.95003414, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part617.Position = Vector3.new(-2.95003414, 52.1646652, -14.28092)
Part617.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part617.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part617.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part617.BrickColor = BrickColor.new("Bright yellow")
Part617.CanCollide = false
Part617.brickColor = BrickColor.new("Bright yellow")
Part617.FormFactor = Enum.FormFactor.Symmetric
Part617.formFactor = Enum.FormFactor.Symmetric
SpecialMesh618.Parent = Part617
SpecialMesh618.MeshId = "rbxassetid://300344022"
SpecialMesh618.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh618.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh618.TextureId = "rbxassetid://300344518"
SpecialMesh618.MeshType = Enum.MeshType.FileMesh
Part619.Name = "Left Leg"
Part619.Parent = Model588
Part619.CFrame = CFrame.new(0.556473136, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part619.Position = Vector3.new(0.556473136, 45.1516495, -14.28092)
Part619.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part619.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part619.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part619.BottomSurface = Enum.SurfaceType.Smooth
Part619.BrickColor = BrickColor.new("Bright yellow")
Part619.CanCollide = false
Part619.brickColor = BrickColor.new("Bright yellow")
Part619.FormFactor = Enum.FormFactor.Symmetric
Part619.formFactor = Enum.FormFactor.Symmetric
SpecialMesh620.Parent = Part619
SpecialMesh620.MeshId = "rbxassetid://300344043"
SpecialMesh620.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh620.TextureId = "rbxassetid://300344518"
SpecialMesh620.MeshType = Enum.MeshType.FileMesh
Part621.Name = "Right Arm"
Part621.Parent = Model588
Part621.CFrame = CFrame.new(7.56948757, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part621.Position = Vector3.new(7.56948757, 52.1646652, -14.28092)
Part621.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part621.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part621.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part621.BrickColor = BrickColor.new("Bright yellow")
Part621.CanCollide = false
Part621.brickColor = BrickColor.new("Bright yellow")
Part621.FormFactor = Enum.FormFactor.Symmetric
Part621.formFactor = Enum.FormFactor.Symmetric
SpecialMesh622.Parent = Part621
SpecialMesh622.MeshId = "rbxassetid://300344064"
SpecialMesh622.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh622.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh622.TextureId = "rbxassetid://300344518"
SpecialMesh622.MeshType = Enum.MeshType.FileMesh
Part623.Name = "Right Leg"
Part623.Parent = Model588
Part623.CFrame = CFrame.new(4.06298018, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part623.Position = Vector3.new(4.06298018, 45.1516495, -14.28092)
Part623.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part623.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part623.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part623.BottomSurface = Enum.SurfaceType.Smooth
Part623.BrickColor = BrickColor.new("Bright yellow")
Part623.CanCollide = false
Part623.brickColor = BrickColor.new("Bright yellow")
Part623.FormFactor = Enum.FormFactor.Symmetric
Part623.formFactor = Enum.FormFactor.Symmetric
SpecialMesh624.Parent = Part623
SpecialMesh624.MeshId = "rbxassetid://300344090"
SpecialMesh624.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh624.TextureId = "rbxassetid://300344518"
SpecialMesh624.MeshType = Enum.MeshType.FileMesh
Part625.Name = "Torso"
Part625.Parent = Model588
Part625.CFrame = CFrame.new(2.30972672, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part625.Position = Vector3.new(2.30972672, 52.1646652, -14.28092)
Part625.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part625.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part625.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part625.BrickColor = BrickColor.new("Bright yellow")
Part625.LeftParamA = 0
Part625.LeftParamB = 0
Part625.LeftSurface = Enum.SurfaceType.Weld
Part625.RightParamA = 0
Part625.RightParamB = 0
Part625.RightSurface = Enum.SurfaceType.Weld
Part625.brickColor = BrickColor.new("Bright yellow")
Part625.FormFactor = Enum.FormFactor.Symmetric
Part625.formFactor = Enum.FormFactor.Symmetric
Decal626.Name = "roblox"
Decal626.Parent = Part625
Motor6D627.Name = "Right Shoulder"
Motor6D627.Parent = Part625
Motor6D627.MaxVelocity = 0.10000000149012
Motor6D627.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D627.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D627.Part0 = Part625
Motor6D627.Part1 = Part621
Motor6D627.part1 = Part621
Motor6D628.Name = "Left Shoulder"
Motor6D628.Parent = Part625
Motor6D628.MaxVelocity = 0.10000000149012
Motor6D628.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D628.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D628.Part0 = Part625
Motor6D628.Part1 = Part617
Motor6D628.part1 = Part617
Motor6D629.Name = "Right Hip"
Motor6D629.Parent = Part625
Motor6D629.MaxVelocity = 0.10000000149012
Motor6D629.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D629.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D629.Part0 = Part625
Motor6D629.Part1 = Part623
Motor6D629.part1 = Part623
Motor6D630.Name = "Left Hip"
Motor6D630.Parent = Part625
Motor6D630.MaxVelocity = 0.10000000149012
Motor6D630.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D630.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D630.Part0 = Part625
Motor6D630.Part1 = Part619
Motor6D630.part1 = Part619
Motor6D631.Name = "Neck"
Motor6D631.Parent = Part625
Motor6D631.MaxVelocity = 0.10000000149012
Motor6D631.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D631.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D631.Part0 = Part625
Motor6D631.Part1 = Part613
Motor6D631.part1 = Part613
SpecialMesh632.Parent = Part625
SpecialMesh632.MeshId = "rbxassetid://300344229"
SpecialMesh632.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh632.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh632.TextureId = "rbxassetid://300344518"
SpecialMesh632.MeshType = Enum.MeshType.FileMesh
Model633.Name = "DanTDM"
Model633.Parent = mas
BodyColors634.Parent = Model633
BodyColors634.HeadColor = BrickColor.new("Bright yellow")
BodyColors634.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors634.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors634.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors634.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors634.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors634.RightArmColor = BrickColor.new("Bright yellow")
BodyColors634.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors634.RightLegColor = BrickColor.new("Bright yellow")
BodyColors634.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors634.TorsoColor = BrickColor.new("Bright yellow")
BodyColors634.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script635.Name = "Health"
Script635.Parent = Model633
table.insert(cors,sandbox(Script635,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script636.Name = "Sound"
Script636.Parent = Model633
table.insert(cors,sandbox(Script636,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript637.Name = "LocalSound"
LocalScript637.Parent = Script636
table.insert(cors,sandbox(LocalScript637,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript638.Name = "Animate"
LocalScript638.Parent = Model633
table.insert(cors,sandbox(LocalScript638,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue639.Name = "idle"
StringValue639.Parent = LocalScript638
Animation640.Name = "Animation1"
Animation640.Parent = StringValue639
Animation640.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue641.Name = "Weight"
NumberValue641.Parent = Animation640
NumberValue641.Value = 9
Animation642.Name = "Animation2"
Animation642.Parent = StringValue639
Animation642.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue643.Name = "Weight"
NumberValue643.Parent = Animation642
NumberValue643.Value = 1
StringValue644.Name = "walk"
StringValue644.Parent = LocalScript638
Animation645.Name = "WalkAnim"
Animation645.Parent = StringValue644
Animation645.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue646.Name = "run"
StringValue646.Parent = LocalScript638
Animation647.Name = "RunAnim"
Animation647.Parent = StringValue646
Animation647.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue648.Name = "jump"
StringValue648.Parent = LocalScript638
Animation649.Name = "JumpAnim"
Animation649.Parent = StringValue648
Animation649.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue650.Name = "climb"
StringValue650.Parent = LocalScript638
Animation651.Name = "ClimbAnim"
Animation651.Parent = StringValue650
Animation651.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue652.Name = "toolnone"
StringValue652.Parent = LocalScript638
Animation653.Name = "ToolNoneAnim"
Animation653.Parent = StringValue652
Animation653.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue654.Name = "fall"
StringValue654.Parent = LocalScript638
Animation655.Name = "FallAnim"
Animation655.Parent = StringValue654
Animation655.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue656.Name = "sit"
StringValue656.Parent = LocalScript638
Animation657.Name = "SitAnim"
Animation657.Parent = StringValue656
Animation657.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part658.Name = "Head"
Part658.Parent = Model633
Part658.CFrame = CFrame.new(14.2657824, 57.424427, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part658.Position = Vector3.new(14.2657824, 57.424427, -14.28092)
Part658.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part658.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part658.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part658.BrickColor = BrickColor.new("Bright yellow")
Part658.TopSurface = Enum.SurfaceType.Smooth
Part658.brickColor = BrickColor.new("Bright yellow")
Part658.FormFactor = Enum.FormFactor.Symmetric
Part658.formFactor = Enum.FormFactor.Symmetric
SpecialMesh659.Parent = Part658
SpecialMesh659.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh659.TextureId = "rbxassetid://300344518"
SpecialMesh659.MeshType = Enum.MeshType.FileMesh
Part660.Name = "HumanoidRootPart"
Part660.Parent = Model633
Part660.CFrame = CFrame.new(14.2657824, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part660.Position = Vector3.new(14.2657824, 52.1646652, -14.28092)
Part660.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part660.Transparency = 1
Part660.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part660.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part660.BottomSurface = Enum.SurfaceType.Smooth
Part660.BrickColor = BrickColor.new("Bright blue")
Part660.CanCollide = false
Part660.LeftParamA = 0
Part660.LeftParamB = 0
Part660.RightParamA = 0
Part660.RightParamB = 0
Part660.TopSurface = Enum.SurfaceType.Smooth
Part660.brickColor = BrickColor.new("Bright blue")
Part660.FormFactor = Enum.FormFactor.Symmetric
Part660.formFactor = Enum.FormFactor.Symmetric
Motor6D661.Name = "RootJoint"
Motor6D661.Parent = Part660
Motor6D661.MaxVelocity = 0.10000000149012
Motor6D661.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D661.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D661.Part0 = Part660
Motor6D661.Part1 = Part670
Motor6D661.part1 = Part670
Part662.Name = "Left Arm"
Part662.Parent = Model633
Part662.CFrame = CFrame.new(9.0060215, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part662.Position = Vector3.new(9.0060215, 52.1646652, -14.28092)
Part662.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part662.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part662.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part662.BrickColor = BrickColor.new("Bright yellow")
Part662.CanCollide = false
Part662.brickColor = BrickColor.new("Bright yellow")
Part662.FormFactor = Enum.FormFactor.Symmetric
Part662.formFactor = Enum.FormFactor.Symmetric
SpecialMesh663.Parent = Part662
SpecialMesh663.MeshId = "rbxassetid://300344022"
SpecialMesh663.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh663.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh663.TextureId = "rbxassetid://300344518"
SpecialMesh663.MeshType = Enum.MeshType.FileMesh
Part664.Name = "Left Leg"
Part664.Parent = Model633
Part664.CFrame = CFrame.new(12.5125284, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part664.Position = Vector3.new(12.5125284, 45.1516495, -14.28092)
Part664.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part664.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part664.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part664.BottomSurface = Enum.SurfaceType.Smooth
Part664.BrickColor = BrickColor.new("Bright yellow")
Part664.CanCollide = false
Part664.brickColor = BrickColor.new("Bright yellow")
Part664.FormFactor = Enum.FormFactor.Symmetric
Part664.formFactor = Enum.FormFactor.Symmetric
SpecialMesh665.Parent = Part664
SpecialMesh665.MeshId = "rbxassetid://300344043"
SpecialMesh665.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh665.TextureId = "rbxassetid://300344518"
SpecialMesh665.MeshType = Enum.MeshType.FileMesh
Part666.Name = "Right Arm"
Part666.Parent = Model633
Part666.CFrame = CFrame.new(19.5255432, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part666.Position = Vector3.new(19.5255432, 52.1646652, -14.28092)
Part666.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part666.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part666.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part666.BrickColor = BrickColor.new("Bright yellow")
Part666.CanCollide = false
Part666.brickColor = BrickColor.new("Bright yellow")
Part666.FormFactor = Enum.FormFactor.Symmetric
Part666.formFactor = Enum.FormFactor.Symmetric
SpecialMesh667.Parent = Part666
SpecialMesh667.MeshId = "rbxassetid://300344064"
SpecialMesh667.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh667.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh667.TextureId = "rbxassetid://300344518"
SpecialMesh667.MeshType = Enum.MeshType.FileMesh
Part668.Name = "Right Leg"
Part668.Parent = Model633
Part668.CFrame = CFrame.new(16.0190353, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part668.Position = Vector3.new(16.0190353, 45.1516495, -14.28092)
Part668.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part668.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part668.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part668.BottomSurface = Enum.SurfaceType.Smooth
Part668.BrickColor = BrickColor.new("Bright yellow")
Part668.CanCollide = false
Part668.brickColor = BrickColor.new("Bright yellow")
Part668.FormFactor = Enum.FormFactor.Symmetric
Part668.formFactor = Enum.FormFactor.Symmetric
SpecialMesh669.Parent = Part668
SpecialMesh669.MeshId = "rbxassetid://300344090"
SpecialMesh669.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh669.TextureId = "rbxassetid://300344518"
SpecialMesh669.MeshType = Enum.MeshType.FileMesh
Part670.Name = "Torso"
Part670.Parent = Model633
Part670.CFrame = CFrame.new(14.2657824, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part670.Position = Vector3.new(14.2657824, 52.1646652, -14.28092)
Part670.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part670.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part670.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part670.BrickColor = BrickColor.new("Bright yellow")
Part670.LeftParamA = 0
Part670.LeftParamB = 0
Part670.LeftSurface = Enum.SurfaceType.Weld
Part670.RightParamA = 0
Part670.RightParamB = 0
Part670.RightSurface = Enum.SurfaceType.Weld
Part670.brickColor = BrickColor.new("Bright yellow")
Part670.FormFactor = Enum.FormFactor.Symmetric
Part670.formFactor = Enum.FormFactor.Symmetric
Decal671.Name = "roblox"
Decal671.Parent = Part670
Motor6D672.Name = "Right Shoulder"
Motor6D672.Parent = Part670
Motor6D672.MaxVelocity = 0.10000000149012
Motor6D672.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D672.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D672.Part0 = Part670
Motor6D672.Part1 = Part666
Motor6D672.part1 = Part666
Motor6D673.Name = "Left Shoulder"
Motor6D673.Parent = Part670
Motor6D673.MaxVelocity = 0.10000000149012
Motor6D673.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D673.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D673.Part0 = Part670
Motor6D673.Part1 = Part662
Motor6D673.part1 = Part662
Motor6D674.Name = "Right Hip"
Motor6D674.Parent = Part670
Motor6D674.MaxVelocity = 0.10000000149012
Motor6D674.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D674.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D674.Part0 = Part670
Motor6D674.Part1 = Part668
Motor6D674.part1 = Part668
Motor6D675.Name = "Left Hip"
Motor6D675.Parent = Part670
Motor6D675.MaxVelocity = 0.10000000149012
Motor6D675.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D675.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D675.Part0 = Part670
Motor6D675.Part1 = Part664
Motor6D675.part1 = Part664
Motor6D676.Name = "Neck"
Motor6D676.Parent = Part670
Motor6D676.MaxVelocity = 0.10000000149012
Motor6D676.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D676.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D676.Part0 = Part670
Motor6D676.Part1 = Part658
Motor6D676.part1 = Part658
SpecialMesh677.Parent = Part670
SpecialMesh677.MeshId = "rbxassetid://300344229"
SpecialMesh677.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh677.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh677.TextureId = "rbxassetid://300344518"
SpecialMesh677.MeshType = Enum.MeshType.FileMesh
Model678.Name = "DanTDM"
Model678.Parent = mas
BodyColors679.Parent = Model678
BodyColors679.HeadColor = BrickColor.new("Bright yellow")
BodyColors679.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors679.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors679.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors679.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors679.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors679.RightArmColor = BrickColor.new("Bright yellow")
BodyColors679.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors679.RightLegColor = BrickColor.new("Bright yellow")
BodyColors679.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors679.TorsoColor = BrickColor.new("Bright yellow")
BodyColors679.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script680.Name = "Health"
Script680.Parent = Model678
table.insert(cors,sandbox(Script680,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script681.Name = "Sound"
Script681.Parent = Model678
table.insert(cors,sandbox(Script681,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript682.Name = "LocalSound"
LocalScript682.Parent = Script681
table.insert(cors,sandbox(LocalScript682,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript683.Name = "Animate"
LocalScript683.Parent = Model678
table.insert(cors,sandbox(LocalScript683,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue684.Name = "idle"
StringValue684.Parent = LocalScript683
Animation685.Name = "Animation1"
Animation685.Parent = StringValue684
Animation685.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue686.Name = "Weight"
NumberValue686.Parent = Animation685
NumberValue686.Value = 9
Animation687.Name = "Animation2"
Animation687.Parent = StringValue684
Animation687.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue688.Name = "Weight"
NumberValue688.Parent = Animation687
NumberValue688.Value = 1
StringValue689.Name = "walk"
StringValue689.Parent = LocalScript683
Animation690.Name = "WalkAnim"
Animation690.Parent = StringValue689
Animation690.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue691.Name = "run"
StringValue691.Parent = LocalScript683
Animation692.Name = "RunAnim"
Animation692.Parent = StringValue691
Animation692.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue693.Name = "jump"
StringValue693.Parent = LocalScript683
Animation694.Name = "JumpAnim"
Animation694.Parent = StringValue693
Animation694.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue695.Name = "climb"
StringValue695.Parent = LocalScript683
Animation696.Name = "ClimbAnim"
Animation696.Parent = StringValue695
Animation696.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue697.Name = "toolnone"
StringValue697.Parent = LocalScript683
Animation698.Name = "ToolNoneAnim"
Animation698.Parent = StringValue697
Animation698.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue699.Name = "fall"
StringValue699.Parent = LocalScript683
Animation700.Name = "FallAnim"
Animation700.Parent = StringValue699
Animation700.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue701.Name = "sit"
StringValue701.Parent = LocalScript683
Animation702.Name = "SitAnim"
Animation702.Parent = StringValue701
Animation702.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part703.Name = "Head"
Part703.Parent = Model678
Part703.CFrame = CFrame.new(25.2900009, 57.424427, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part703.Position = Vector3.new(25.2900009, 57.424427, -14.28092)
Part703.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part703.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part703.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part703.BrickColor = BrickColor.new("Bright yellow")
Part703.TopSurface = Enum.SurfaceType.Smooth
Part703.brickColor = BrickColor.new("Bright yellow")
Part703.FormFactor = Enum.FormFactor.Symmetric
Part703.formFactor = Enum.FormFactor.Symmetric
SpecialMesh704.Parent = Part703
SpecialMesh704.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh704.TextureId = "rbxassetid://300344518"
SpecialMesh704.MeshType = Enum.MeshType.FileMesh
Part705.Name = "HumanoidRootPart"
Part705.Parent = Model678
Part705.CFrame = CFrame.new(25.2900009, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part705.Position = Vector3.new(25.2900009, 52.1646652, -14.28092)
Part705.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part705.Transparency = 1
Part705.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part705.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part705.BottomSurface = Enum.SurfaceType.Smooth
Part705.BrickColor = BrickColor.new("Bright blue")
Part705.CanCollide = false
Part705.LeftParamA = 0
Part705.LeftParamB = 0
Part705.RightParamA = 0
Part705.RightParamB = 0
Part705.TopSurface = Enum.SurfaceType.Smooth
Part705.brickColor = BrickColor.new("Bright blue")
Part705.FormFactor = Enum.FormFactor.Symmetric
Part705.formFactor = Enum.FormFactor.Symmetric
Motor6D706.Name = "RootJoint"
Motor6D706.Parent = Part705
Motor6D706.MaxVelocity = 0.10000000149012
Motor6D706.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D706.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D706.Part0 = Part705
Motor6D706.Part1 = Part715
Motor6D706.part1 = Part715
Part707.Name = "Left Arm"
Part707.Parent = Model678
Part707.CFrame = CFrame.new(20.0302391, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part707.Position = Vector3.new(20.0302391, 52.1646652, -14.28092)
Part707.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part707.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part707.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part707.BrickColor = BrickColor.new("Bright yellow")
Part707.CanCollide = false
Part707.brickColor = BrickColor.new("Bright yellow")
Part707.FormFactor = Enum.FormFactor.Symmetric
Part707.formFactor = Enum.FormFactor.Symmetric
SpecialMesh708.Parent = Part707
SpecialMesh708.MeshId = "rbxassetid://300344022"
SpecialMesh708.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh708.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh708.TextureId = "rbxassetid://300344518"
SpecialMesh708.MeshType = Enum.MeshType.FileMesh
Part709.Name = "Left Leg"
Part709.Parent = Model678
Part709.CFrame = CFrame.new(23.536747, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part709.Position = Vector3.new(23.536747, 45.1516495, -14.28092)
Part709.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part709.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part709.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part709.BottomSurface = Enum.SurfaceType.Smooth
Part709.BrickColor = BrickColor.new("Bright yellow")
Part709.CanCollide = false
Part709.brickColor = BrickColor.new("Bright yellow")
Part709.FormFactor = Enum.FormFactor.Symmetric
Part709.formFactor = Enum.FormFactor.Symmetric
SpecialMesh710.Parent = Part709
SpecialMesh710.MeshId = "rbxassetid://300344043"
SpecialMesh710.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh710.TextureId = "rbxassetid://300344518"
SpecialMesh710.MeshType = Enum.MeshType.FileMesh
Part711.Name = "Right Arm"
Part711.Parent = Model678
Part711.CFrame = CFrame.new(30.5497627, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part711.Position = Vector3.new(30.5497627, 52.1646652, -14.28092)
Part711.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part711.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part711.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part711.BrickColor = BrickColor.new("Bright yellow")
Part711.CanCollide = false
Part711.brickColor = BrickColor.new("Bright yellow")
Part711.FormFactor = Enum.FormFactor.Symmetric
Part711.formFactor = Enum.FormFactor.Symmetric
SpecialMesh712.Parent = Part711
SpecialMesh712.MeshId = "rbxassetid://300344064"
SpecialMesh712.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh712.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh712.TextureId = "rbxassetid://300344518"
SpecialMesh712.MeshType = Enum.MeshType.FileMesh
Part713.Name = "Right Leg"
Part713.Parent = Model678
Part713.CFrame = CFrame.new(27.0432549, 45.1516495, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part713.Position = Vector3.new(27.0432549, 45.1516495, -14.28092)
Part713.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part713.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part713.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part713.BottomSurface = Enum.SurfaceType.Smooth
Part713.BrickColor = BrickColor.new("Bright yellow")
Part713.CanCollide = false
Part713.brickColor = BrickColor.new("Bright yellow")
Part713.FormFactor = Enum.FormFactor.Symmetric
Part713.formFactor = Enum.FormFactor.Symmetric
SpecialMesh714.Parent = Part713
SpecialMesh714.MeshId = "rbxassetid://300344090"
SpecialMesh714.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh714.TextureId = "rbxassetid://300344518"
SpecialMesh714.MeshType = Enum.MeshType.FileMesh
Part715.Name = "Torso"
Part715.Parent = Model678
Part715.CFrame = CFrame.new(25.2900009, 52.1646652, -14.28092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part715.Position = Vector3.new(25.2900009, 52.1646652, -14.28092)
Part715.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part715.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part715.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part715.BrickColor = BrickColor.new("Bright yellow")
Part715.LeftParamA = 0
Part715.LeftParamB = 0
Part715.LeftSurface = Enum.SurfaceType.Weld
Part715.RightParamA = 0
Part715.RightParamB = 0
Part715.RightSurface = Enum.SurfaceType.Weld
Part715.brickColor = BrickColor.new("Bright yellow")
Part715.FormFactor = Enum.FormFactor.Symmetric
Part715.formFactor = Enum.FormFactor.Symmetric
Decal716.Name = "roblox"
Decal716.Parent = Part715
Motor6D717.Name = "Right Shoulder"
Motor6D717.Parent = Part715
Motor6D717.MaxVelocity = 0.10000000149012
Motor6D717.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D717.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D717.Part0 = Part715
Motor6D717.Part1 = Part711
Motor6D717.part1 = Part711
Motor6D718.Name = "Left Shoulder"
Motor6D718.Parent = Part715
Motor6D718.MaxVelocity = 0.10000000149012
Motor6D718.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D718.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D718.Part0 = Part715
Motor6D718.Part1 = Part707
Motor6D718.part1 = Part707
Motor6D719.Name = "Right Hip"
Motor6D719.Parent = Part715
Motor6D719.MaxVelocity = 0.10000000149012
Motor6D719.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D719.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D719.Part0 = Part715
Motor6D719.Part1 = Part713
Motor6D719.part1 = Part713
Motor6D720.Name = "Left Hip"
Motor6D720.Parent = Part715
Motor6D720.MaxVelocity = 0.10000000149012
Motor6D720.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D720.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D720.Part0 = Part715
Motor6D720.Part1 = Part709
Motor6D720.part1 = Part709
Motor6D721.Name = "Neck"
Motor6D721.Parent = Part715
Motor6D721.MaxVelocity = 0.10000000149012
Motor6D721.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D721.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D721.Part0 = Part715
Motor6D721.Part1 = Part703
Motor6D721.part1 = Part703
SpecialMesh722.Parent = Part715
SpecialMesh722.MeshId = "rbxassetid://300344229"
SpecialMesh722.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh722.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh722.TextureId = "rbxassetid://300344518"
SpecialMesh722.MeshType = Enum.MeshType.FileMesh
Model723.Name = "DanTDM"
Model723.Parent = mas
BodyColors724.Parent = Model723
BodyColors724.HeadColor = BrickColor.new("Bright yellow")
BodyColors724.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors724.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors724.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors724.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors724.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors724.RightArmColor = BrickColor.new("Bright yellow")
BodyColors724.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors724.RightLegColor = BrickColor.new("Bright yellow")
BodyColors724.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors724.TorsoColor = BrickColor.new("Bright yellow")
BodyColors724.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script725.Name = "Health"
Script725.Parent = Model723
table.insert(cors,sandbox(Script725,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script726.Name = "Sound"
Script726.Parent = Model723
table.insert(cors,sandbox(Script726,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript727.Name = "LocalSound"
LocalScript727.Parent = Script726
table.insert(cors,sandbox(LocalScript727,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript728.Name = "Animate"
LocalScript728.Parent = Model723
table.insert(cors,sandbox(LocalScript728,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue729.Name = "idle"
StringValue729.Parent = LocalScript728
Animation730.Name = "Animation1"
Animation730.Parent = StringValue729
Animation730.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue731.Name = "Weight"
NumberValue731.Parent = Animation730
NumberValue731.Value = 9
Animation732.Name = "Animation2"
Animation732.Parent = StringValue729
Animation732.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue733.Name = "Weight"
NumberValue733.Parent = Animation732
NumberValue733.Value = 1
StringValue734.Name = "walk"
StringValue734.Parent = LocalScript728
Animation735.Name = "WalkAnim"
Animation735.Parent = StringValue734
Animation735.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue736.Name = "run"
StringValue736.Parent = LocalScript728
Animation737.Name = "RunAnim"
Animation737.Parent = StringValue736
Animation737.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue738.Name = "jump"
StringValue738.Parent = LocalScript728
Animation739.Name = "JumpAnim"
Animation739.Parent = StringValue738
Animation739.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue740.Name = "climb"
StringValue740.Parent = LocalScript728
Animation741.Name = "ClimbAnim"
Animation741.Parent = StringValue740
Animation741.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue742.Name = "toolnone"
StringValue742.Parent = LocalScript728
Animation743.Name = "ToolNoneAnim"
Animation743.Parent = StringValue742
Animation743.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue744.Name = "fall"
StringValue744.Parent = LocalScript728
Animation745.Name = "FallAnim"
Animation745.Parent = StringValue744
Animation745.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue746.Name = "sit"
StringValue746.Parent = LocalScript728
Animation747.Name = "SitAnim"
Animation747.Parent = StringValue746
Animation747.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part748.Name = "Head"
Part748.Parent = Model723
Part748.CFrame = CFrame.new(-8.8614502, 57.424427, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part748.Position = Vector3.new(-8.8614502, 57.424427, -28.1640892)
Part748.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part748.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part748.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part748.BrickColor = BrickColor.new("Bright yellow")
Part748.TopSurface = Enum.SurfaceType.Smooth
Part748.brickColor = BrickColor.new("Bright yellow")
Part748.FormFactor = Enum.FormFactor.Symmetric
Part748.formFactor = Enum.FormFactor.Symmetric
SpecialMesh749.Parent = Part748
SpecialMesh749.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh749.TextureId = "rbxassetid://300344518"
SpecialMesh749.MeshType = Enum.MeshType.FileMesh
Part750.Name = "HumanoidRootPart"
Part750.Parent = Model723
Part750.CFrame = CFrame.new(-8.8614502, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part750.Position = Vector3.new(-8.8614502, 52.1646652, -28.1640892)
Part750.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part750.Transparency = 1
Part750.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part750.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part750.BottomSurface = Enum.SurfaceType.Smooth
Part750.BrickColor = BrickColor.new("Bright blue")
Part750.CanCollide = false
Part750.LeftParamA = 0
Part750.LeftParamB = 0
Part750.RightParamA = 0
Part750.RightParamB = 0
Part750.TopSurface = Enum.SurfaceType.Smooth
Part750.brickColor = BrickColor.new("Bright blue")
Part750.FormFactor = Enum.FormFactor.Symmetric
Part750.formFactor = Enum.FormFactor.Symmetric
Motor6D751.Name = "RootJoint"
Motor6D751.Parent = Part750
Motor6D751.MaxVelocity = 0.10000000149012
Motor6D751.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D751.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D751.Part0 = Part750
Motor6D751.Part1 = Part760
Motor6D751.part1 = Part760
Part752.Name = "Left Arm"
Part752.Parent = Model723
Part752.CFrame = CFrame.new(-14.1212111, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part752.Position = Vector3.new(-14.1212111, 52.1646652, -28.1640892)
Part752.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part752.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part752.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part752.BrickColor = BrickColor.new("Bright yellow")
Part752.CanCollide = false
Part752.brickColor = BrickColor.new("Bright yellow")
Part752.FormFactor = Enum.FormFactor.Symmetric
Part752.formFactor = Enum.FormFactor.Symmetric
SpecialMesh753.Parent = Part752
SpecialMesh753.MeshId = "rbxassetid://300344022"
SpecialMesh753.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh753.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh753.TextureId = "rbxassetid://300344518"
SpecialMesh753.MeshType = Enum.MeshType.FileMesh
Part754.Name = "Left Leg"
Part754.Parent = Model723
Part754.CFrame = CFrame.new(-10.6147041, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part754.Position = Vector3.new(-10.6147041, 45.1516495, -28.1640892)
Part754.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part754.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part754.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part754.BottomSurface = Enum.SurfaceType.Smooth
Part754.BrickColor = BrickColor.new("Bright yellow")
Part754.CanCollide = false
Part754.brickColor = BrickColor.new("Bright yellow")
Part754.FormFactor = Enum.FormFactor.Symmetric
Part754.formFactor = Enum.FormFactor.Symmetric
SpecialMesh755.Parent = Part754
SpecialMesh755.MeshId = "rbxassetid://300344043"
SpecialMesh755.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh755.TextureId = "rbxassetid://300344518"
SpecialMesh755.MeshType = Enum.MeshType.FileMesh
Part756.Name = "Right Arm"
Part756.Parent = Model723
Part756.CFrame = CFrame.new(-3.60168934, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part756.Position = Vector3.new(-3.60168934, 52.1646652, -28.1640892)
Part756.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part756.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part756.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part756.BrickColor = BrickColor.new("Bright yellow")
Part756.CanCollide = false
Part756.brickColor = BrickColor.new("Bright yellow")
Part756.FormFactor = Enum.FormFactor.Symmetric
Part756.formFactor = Enum.FormFactor.Symmetric
SpecialMesh757.Parent = Part756
SpecialMesh757.MeshId = "rbxassetid://300344064"
SpecialMesh757.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh757.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh757.TextureId = "rbxassetid://300344518"
SpecialMesh757.MeshType = Enum.MeshType.FileMesh
Part758.Name = "Right Leg"
Part758.Parent = Model723
Part758.CFrame = CFrame.new(-7.10819674, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part758.Position = Vector3.new(-7.10819674, 45.1516495, -28.1640892)
Part758.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part758.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part758.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part758.BottomSurface = Enum.SurfaceType.Smooth
Part758.BrickColor = BrickColor.new("Bright yellow")
Part758.CanCollide = false
Part758.brickColor = BrickColor.new("Bright yellow")
Part758.FormFactor = Enum.FormFactor.Symmetric
Part758.formFactor = Enum.FormFactor.Symmetric
SpecialMesh759.Parent = Part758
SpecialMesh759.MeshId = "rbxassetid://300344090"
SpecialMesh759.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh759.TextureId = "rbxassetid://300344518"
SpecialMesh759.MeshType = Enum.MeshType.FileMesh
Part760.Name = "Torso"
Part760.Parent = Model723
Part760.CFrame = CFrame.new(-8.8614502, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part760.Position = Vector3.new(-8.8614502, 52.1646652, -28.1640892)
Part760.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part760.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part760.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part760.BrickColor = BrickColor.new("Bright yellow")
Part760.LeftParamA = 0
Part760.LeftParamB = 0
Part760.LeftSurface = Enum.SurfaceType.Weld
Part760.RightParamA = 0
Part760.RightParamB = 0
Part760.RightSurface = Enum.SurfaceType.Weld
Part760.brickColor = BrickColor.new("Bright yellow")
Part760.FormFactor = Enum.FormFactor.Symmetric
Part760.formFactor = Enum.FormFactor.Symmetric
Decal761.Name = "roblox"
Decal761.Parent = Part760
Motor6D762.Name = "Right Shoulder"
Motor6D762.Parent = Part760
Motor6D762.MaxVelocity = 0.10000000149012
Motor6D762.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D762.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D762.Part0 = Part760
Motor6D762.Part1 = Part756
Motor6D762.part1 = Part756
Motor6D763.Name = "Left Shoulder"
Motor6D763.Parent = Part760
Motor6D763.MaxVelocity = 0.10000000149012
Motor6D763.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D763.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D763.Part0 = Part760
Motor6D763.Part1 = Part752
Motor6D763.part1 = Part752
Motor6D764.Name = "Right Hip"
Motor6D764.Parent = Part760
Motor6D764.MaxVelocity = 0.10000000149012
Motor6D764.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D764.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D764.Part0 = Part760
Motor6D764.Part1 = Part758
Motor6D764.part1 = Part758
Motor6D765.Name = "Left Hip"
Motor6D765.Parent = Part760
Motor6D765.MaxVelocity = 0.10000000149012
Motor6D765.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D765.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D765.Part0 = Part760
Motor6D765.Part1 = Part754
Motor6D765.part1 = Part754
Motor6D766.Name = "Neck"
Motor6D766.Parent = Part760
Motor6D766.MaxVelocity = 0.10000000149012
Motor6D766.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D766.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D766.Part0 = Part760
Motor6D766.Part1 = Part748
Motor6D766.part1 = Part748
SpecialMesh767.Parent = Part760
SpecialMesh767.MeshId = "rbxassetid://300344229"
SpecialMesh767.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh767.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh767.TextureId = "rbxassetid://300344518"
SpecialMesh767.MeshType = Enum.MeshType.FileMesh
Model768.Name = "DanTDM"
Model768.Parent = mas
BodyColors769.Parent = Model768
BodyColors769.HeadColor = BrickColor.new("Bright yellow")
BodyColors769.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors769.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors769.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors769.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors769.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors769.RightArmColor = BrickColor.new("Bright yellow")
BodyColors769.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors769.RightLegColor = BrickColor.new("Bright yellow")
BodyColors769.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors769.TorsoColor = BrickColor.new("Bright yellow")
BodyColors769.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script770.Name = "Health"
Script770.Parent = Model768
table.insert(cors,sandbox(Script770,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script771.Name = "Sound"
Script771.Parent = Model768
table.insert(cors,sandbox(Script771,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript772.Name = "LocalSound"
LocalScript772.Parent = Script771
table.insert(cors,sandbox(LocalScript772,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript773.Name = "Animate"
LocalScript773.Parent = Model768
table.insert(cors,sandbox(LocalScript773,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue774.Name = "idle"
StringValue774.Parent = LocalScript773
Animation775.Name = "Animation1"
Animation775.Parent = StringValue774
Animation775.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue776.Name = "Weight"
NumberValue776.Parent = Animation775
NumberValue776.Value = 9
Animation777.Name = "Animation2"
Animation777.Parent = StringValue774
Animation777.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue778.Name = "Weight"
NumberValue778.Parent = Animation777
NumberValue778.Value = 1
StringValue779.Name = "walk"
StringValue779.Parent = LocalScript773
Animation780.Name = "WalkAnim"
Animation780.Parent = StringValue779
Animation780.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue781.Name = "run"
StringValue781.Parent = LocalScript773
Animation782.Name = "RunAnim"
Animation782.Parent = StringValue781
Animation782.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue783.Name = "jump"
StringValue783.Parent = LocalScript773
Animation784.Name = "JumpAnim"
Animation784.Parent = StringValue783
Animation784.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue785.Name = "climb"
StringValue785.Parent = LocalScript773
Animation786.Name = "ClimbAnim"
Animation786.Parent = StringValue785
Animation786.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue787.Name = "toolnone"
StringValue787.Parent = LocalScript773
Animation788.Name = "ToolNoneAnim"
Animation788.Parent = StringValue787
Animation788.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue789.Name = "fall"
StringValue789.Parent = LocalScript773
Animation790.Name = "FallAnim"
Animation790.Parent = StringValue789
Animation790.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue791.Name = "sit"
StringValue791.Parent = LocalScript773
Animation792.Name = "SitAnim"
Animation792.Parent = StringValue791
Animation792.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part793.Name = "Head"
Part793.Parent = Model768
Part793.CFrame = CFrame.new(2.30972672, 57.424427, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part793.Position = Vector3.new(2.30972672, 57.424427, -28.1640892)
Part793.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part793.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part793.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part793.BrickColor = BrickColor.new("Bright yellow")
Part793.TopSurface = Enum.SurfaceType.Smooth
Part793.brickColor = BrickColor.new("Bright yellow")
Part793.FormFactor = Enum.FormFactor.Symmetric
Part793.formFactor = Enum.FormFactor.Symmetric
SpecialMesh794.Parent = Part793
SpecialMesh794.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh794.TextureId = "rbxassetid://300344518"
SpecialMesh794.MeshType = Enum.MeshType.FileMesh
Part795.Name = "HumanoidRootPart"
Part795.Parent = Model768
Part795.CFrame = CFrame.new(2.30972672, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part795.Position = Vector3.new(2.30972672, 52.1646652, -28.1640892)
Part795.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part795.Transparency = 1
Part795.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part795.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part795.BottomSurface = Enum.SurfaceType.Smooth
Part795.BrickColor = BrickColor.new("Bright blue")
Part795.CanCollide = false
Part795.LeftParamA = 0
Part795.LeftParamB = 0
Part795.RightParamA = 0
Part795.RightParamB = 0
Part795.TopSurface = Enum.SurfaceType.Smooth
Part795.brickColor = BrickColor.new("Bright blue")
Part795.FormFactor = Enum.FormFactor.Symmetric
Part795.formFactor = Enum.FormFactor.Symmetric
Motor6D796.Name = "RootJoint"
Motor6D796.Parent = Part795
Motor6D796.MaxVelocity = 0.10000000149012
Motor6D796.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D796.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D796.Part0 = Part795
Motor6D796.Part1 = Part805
Motor6D796.part1 = Part805
Part797.Name = "Left Arm"
Part797.Parent = Model768
Part797.CFrame = CFrame.new(-2.95003414, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part797.Position = Vector3.new(-2.95003414, 52.1646652, -28.1640892)
Part797.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part797.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part797.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part797.BrickColor = BrickColor.new("Bright yellow")
Part797.CanCollide = false
Part797.brickColor = BrickColor.new("Bright yellow")
Part797.FormFactor = Enum.FormFactor.Symmetric
Part797.formFactor = Enum.FormFactor.Symmetric
SpecialMesh798.Parent = Part797
SpecialMesh798.MeshId = "rbxassetid://300344022"
SpecialMesh798.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh798.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh798.TextureId = "rbxassetid://300344518"
SpecialMesh798.MeshType = Enum.MeshType.FileMesh
Part799.Name = "Left Leg"
Part799.Parent = Model768
Part799.CFrame = CFrame.new(0.556473136, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part799.Position = Vector3.new(0.556473136, 45.1516495, -28.1640892)
Part799.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part799.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part799.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part799.BottomSurface = Enum.SurfaceType.Smooth
Part799.BrickColor = BrickColor.new("Bright yellow")
Part799.CanCollide = false
Part799.brickColor = BrickColor.new("Bright yellow")
Part799.FormFactor = Enum.FormFactor.Symmetric
Part799.formFactor = Enum.FormFactor.Symmetric
SpecialMesh800.Parent = Part799
SpecialMesh800.MeshId = "rbxassetid://300344043"
SpecialMesh800.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh800.TextureId = "rbxassetid://300344518"
SpecialMesh800.MeshType = Enum.MeshType.FileMesh
Part801.Name = "Right Arm"
Part801.Parent = Model768
Part801.CFrame = CFrame.new(7.56948757, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part801.Position = Vector3.new(7.56948757, 52.1646652, -28.1640892)
Part801.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part801.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part801.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part801.BrickColor = BrickColor.new("Bright yellow")
Part801.CanCollide = false
Part801.brickColor = BrickColor.new("Bright yellow")
Part801.FormFactor = Enum.FormFactor.Symmetric
Part801.formFactor = Enum.FormFactor.Symmetric
SpecialMesh802.Parent = Part801
SpecialMesh802.MeshId = "rbxassetid://300344064"
SpecialMesh802.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh802.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh802.TextureId = "rbxassetid://300344518"
SpecialMesh802.MeshType = Enum.MeshType.FileMesh
Part803.Name = "Right Leg"
Part803.Parent = Model768
Part803.CFrame = CFrame.new(4.06298018, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part803.Position = Vector3.new(4.06298018, 45.1516495, -28.1640892)
Part803.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part803.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part803.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part803.BottomSurface = Enum.SurfaceType.Smooth
Part803.BrickColor = BrickColor.new("Bright yellow")
Part803.CanCollide = false
Part803.brickColor = BrickColor.new("Bright yellow")
Part803.FormFactor = Enum.FormFactor.Symmetric
Part803.formFactor = Enum.FormFactor.Symmetric
SpecialMesh804.Parent = Part803
SpecialMesh804.MeshId = "rbxassetid://300344090"
SpecialMesh804.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh804.TextureId = "rbxassetid://300344518"
SpecialMesh804.MeshType = Enum.MeshType.FileMesh
Part805.Name = "Torso"
Part805.Parent = Model768
Part805.CFrame = CFrame.new(2.30972672, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part805.Position = Vector3.new(2.30972672, 52.1646652, -28.1640892)
Part805.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part805.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part805.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part805.BrickColor = BrickColor.new("Bright yellow")
Part805.LeftParamA = 0
Part805.LeftParamB = 0
Part805.LeftSurface = Enum.SurfaceType.Weld
Part805.RightParamA = 0
Part805.RightParamB = 0
Part805.RightSurface = Enum.SurfaceType.Weld
Part805.brickColor = BrickColor.new("Bright yellow")
Part805.FormFactor = Enum.FormFactor.Symmetric
Part805.formFactor = Enum.FormFactor.Symmetric
Decal806.Name = "roblox"
Decal806.Parent = Part805
Motor6D807.Name = "Right Shoulder"
Motor6D807.Parent = Part805
Motor6D807.MaxVelocity = 0.10000000149012
Motor6D807.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D807.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D807.Part0 = Part805
Motor6D807.Part1 = Part801
Motor6D807.part1 = Part801
Motor6D808.Name = "Left Shoulder"
Motor6D808.Parent = Part805
Motor6D808.MaxVelocity = 0.10000000149012
Motor6D808.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D808.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D808.Part0 = Part805
Motor6D808.Part1 = Part797
Motor6D808.part1 = Part797
Motor6D809.Name = "Right Hip"
Motor6D809.Parent = Part805
Motor6D809.MaxVelocity = 0.10000000149012
Motor6D809.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D809.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D809.Part0 = Part805
Motor6D809.Part1 = Part803
Motor6D809.part1 = Part803
Motor6D810.Name = "Left Hip"
Motor6D810.Parent = Part805
Motor6D810.MaxVelocity = 0.10000000149012
Motor6D810.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D810.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D810.Part0 = Part805
Motor6D810.Part1 = Part799
Motor6D810.part1 = Part799
Motor6D811.Name = "Neck"
Motor6D811.Parent = Part805
Motor6D811.MaxVelocity = 0.10000000149012
Motor6D811.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D811.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D811.Part0 = Part805
Motor6D811.Part1 = Part793
Motor6D811.part1 = Part793
SpecialMesh812.Parent = Part805
SpecialMesh812.MeshId = "rbxassetid://300344229"
SpecialMesh812.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh812.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh812.TextureId = "rbxassetid://300344518"
SpecialMesh812.MeshType = Enum.MeshType.FileMesh
Model813.Name = "DanTDM"
Model813.Parent = mas
BodyColors814.Parent = Model813
BodyColors814.HeadColor = BrickColor.new("Bright yellow")
BodyColors814.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors814.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors814.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors814.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors814.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors814.RightArmColor = BrickColor.new("Bright yellow")
BodyColors814.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors814.RightLegColor = BrickColor.new("Bright yellow")
BodyColors814.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors814.TorsoColor = BrickColor.new("Bright yellow")
BodyColors814.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script815.Name = "Health"
Script815.Parent = Model813
table.insert(cors,sandbox(Script815,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script816.Name = "Sound"
Script816.Parent = Model813
table.insert(cors,sandbox(Script816,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript817.Name = "LocalSound"
LocalScript817.Parent = Script816
table.insert(cors,sandbox(LocalScript817,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript818.Name = "Animate"
LocalScript818.Parent = Model813
table.insert(cors,sandbox(LocalScript818,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue819.Name = "idle"
StringValue819.Parent = LocalScript818
Animation820.Name = "Animation1"
Animation820.Parent = StringValue819
Animation820.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue821.Name = "Weight"
NumberValue821.Parent = Animation820
NumberValue821.Value = 9
Animation822.Name = "Animation2"
Animation822.Parent = StringValue819
Animation822.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue823.Name = "Weight"
NumberValue823.Parent = Animation822
NumberValue823.Value = 1
StringValue824.Name = "walk"
StringValue824.Parent = LocalScript818
Animation825.Name = "WalkAnim"
Animation825.Parent = StringValue824
Animation825.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue826.Name = "run"
StringValue826.Parent = LocalScript818
Animation827.Name = "RunAnim"
Animation827.Parent = StringValue826
Animation827.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue828.Name = "jump"
StringValue828.Parent = LocalScript818
Animation829.Name = "JumpAnim"
Animation829.Parent = StringValue828
Animation829.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue830.Name = "climb"
StringValue830.Parent = LocalScript818
Animation831.Name = "ClimbAnim"
Animation831.Parent = StringValue830
Animation831.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue832.Name = "toolnone"
StringValue832.Parent = LocalScript818
Animation833.Name = "ToolNoneAnim"
Animation833.Parent = StringValue832
Animation833.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue834.Name = "fall"
StringValue834.Parent = LocalScript818
Animation835.Name = "FallAnim"
Animation835.Parent = StringValue834
Animation835.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue836.Name = "sit"
StringValue836.Parent = LocalScript818
Animation837.Name = "SitAnim"
Animation837.Parent = StringValue836
Animation837.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part838.Name = "Head"
Part838.Parent = Model813
Part838.CFrame = CFrame.new(14.2657824, 57.424427, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part838.Position = Vector3.new(14.2657824, 57.424427, -28.1640892)
Part838.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part838.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part838.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part838.BrickColor = BrickColor.new("Bright yellow")
Part838.TopSurface = Enum.SurfaceType.Smooth
Part838.brickColor = BrickColor.new("Bright yellow")
Part838.FormFactor = Enum.FormFactor.Symmetric
Part838.formFactor = Enum.FormFactor.Symmetric
SpecialMesh839.Parent = Part838
SpecialMesh839.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh839.TextureId = "rbxassetid://300344518"
SpecialMesh839.MeshType = Enum.MeshType.FileMesh
Part840.Name = "HumanoidRootPart"
Part840.Parent = Model813
Part840.CFrame = CFrame.new(14.2657824, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part840.Position = Vector3.new(14.2657824, 52.1646652, -28.1640892)
Part840.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part840.Transparency = 1
Part840.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part840.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part840.BottomSurface = Enum.SurfaceType.Smooth
Part840.BrickColor = BrickColor.new("Bright blue")
Part840.CanCollide = false
Part840.LeftParamA = 0
Part840.LeftParamB = 0
Part840.RightParamA = 0
Part840.RightParamB = 0
Part840.TopSurface = Enum.SurfaceType.Smooth
Part840.brickColor = BrickColor.new("Bright blue")
Part840.FormFactor = Enum.FormFactor.Symmetric
Part840.formFactor = Enum.FormFactor.Symmetric
Motor6D841.Name = "RootJoint"
Motor6D841.Parent = Part840
Motor6D841.MaxVelocity = 0.10000000149012
Motor6D841.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D841.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D841.Part0 = Part840
Motor6D841.Part1 = Part850
Motor6D841.part1 = Part850
Part842.Name = "Left Arm"
Part842.Parent = Model813
Part842.CFrame = CFrame.new(9.0060215, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part842.Position = Vector3.new(9.0060215, 52.1646652, -28.1640892)
Part842.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part842.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part842.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part842.BrickColor = BrickColor.new("Bright yellow")
Part842.CanCollide = false
Part842.brickColor = BrickColor.new("Bright yellow")
Part842.FormFactor = Enum.FormFactor.Symmetric
Part842.formFactor = Enum.FormFactor.Symmetric
SpecialMesh843.Parent = Part842
SpecialMesh843.MeshId = "rbxassetid://300344022"
SpecialMesh843.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh843.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh843.TextureId = "rbxassetid://300344518"
SpecialMesh843.MeshType = Enum.MeshType.FileMesh
Part844.Name = "Left Leg"
Part844.Parent = Model813
Part844.CFrame = CFrame.new(12.5125284, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part844.Position = Vector3.new(12.5125284, 45.1516495, -28.1640892)
Part844.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part844.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part844.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part844.BottomSurface = Enum.SurfaceType.Smooth
Part844.BrickColor = BrickColor.new("Bright yellow")
Part844.CanCollide = false
Part844.brickColor = BrickColor.new("Bright yellow")
Part844.FormFactor = Enum.FormFactor.Symmetric
Part844.formFactor = Enum.FormFactor.Symmetric
SpecialMesh845.Parent = Part844
SpecialMesh845.MeshId = "rbxassetid://300344043"
SpecialMesh845.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh845.TextureId = "rbxassetid://300344518"
SpecialMesh845.MeshType = Enum.MeshType.FileMesh
Part846.Name = "Right Arm"
Part846.Parent = Model813
Part846.CFrame = CFrame.new(19.5255432, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part846.Position = Vector3.new(19.5255432, 52.1646652, -28.1640892)
Part846.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part846.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part846.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part846.BrickColor = BrickColor.new("Bright yellow")
Part846.CanCollide = false
Part846.brickColor = BrickColor.new("Bright yellow")
Part846.FormFactor = Enum.FormFactor.Symmetric
Part846.formFactor = Enum.FormFactor.Symmetric
SpecialMesh847.Parent = Part846
SpecialMesh847.MeshId = "rbxassetid://300344064"
SpecialMesh847.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh847.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh847.TextureId = "rbxassetid://300344518"
SpecialMesh847.MeshType = Enum.MeshType.FileMesh
Part848.Name = "Right Leg"
Part848.Parent = Model813
Part848.CFrame = CFrame.new(16.0190353, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part848.Position = Vector3.new(16.0190353, 45.1516495, -28.1640892)
Part848.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part848.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part848.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part848.BottomSurface = Enum.SurfaceType.Smooth
Part848.BrickColor = BrickColor.new("Bright yellow")
Part848.CanCollide = false
Part848.brickColor = BrickColor.new("Bright yellow")
Part848.FormFactor = Enum.FormFactor.Symmetric
Part848.formFactor = Enum.FormFactor.Symmetric
SpecialMesh849.Parent = Part848
SpecialMesh849.MeshId = "rbxassetid://300344090"
SpecialMesh849.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh849.TextureId = "rbxassetid://300344518"
SpecialMesh849.MeshType = Enum.MeshType.FileMesh
Part850.Name = "Torso"
Part850.Parent = Model813
Part850.CFrame = CFrame.new(14.2657824, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part850.Position = Vector3.new(14.2657824, 52.1646652, -28.1640892)
Part850.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part850.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part850.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part850.BrickColor = BrickColor.new("Bright yellow")
Part850.LeftParamA = 0
Part850.LeftParamB = 0
Part850.LeftSurface = Enum.SurfaceType.Weld
Part850.RightParamA = 0
Part850.RightParamB = 0
Part850.RightSurface = Enum.SurfaceType.Weld
Part850.brickColor = BrickColor.new("Bright yellow")
Part850.FormFactor = Enum.FormFactor.Symmetric
Part850.formFactor = Enum.FormFactor.Symmetric
Decal851.Name = "roblox"
Decal851.Parent = Part850
Motor6D852.Name = "Right Shoulder"
Motor6D852.Parent = Part850
Motor6D852.MaxVelocity = 0.10000000149012
Motor6D852.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D852.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D852.Part0 = Part850
Motor6D852.Part1 = Part846
Motor6D852.part1 = Part846
Motor6D853.Name = "Left Shoulder"
Motor6D853.Parent = Part850
Motor6D853.MaxVelocity = 0.10000000149012
Motor6D853.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D853.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D853.Part0 = Part850
Motor6D853.Part1 = Part842
Motor6D853.part1 = Part842
Motor6D854.Name = "Right Hip"
Motor6D854.Parent = Part850
Motor6D854.MaxVelocity = 0.10000000149012
Motor6D854.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D854.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D854.Part0 = Part850
Motor6D854.Part1 = Part848
Motor6D854.part1 = Part848
Motor6D855.Name = "Left Hip"
Motor6D855.Parent = Part850
Motor6D855.MaxVelocity = 0.10000000149012
Motor6D855.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D855.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D855.Part0 = Part850
Motor6D855.Part1 = Part844
Motor6D855.part1 = Part844
Motor6D856.Name = "Neck"
Motor6D856.Parent = Part850
Motor6D856.MaxVelocity = 0.10000000149012
Motor6D856.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D856.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D856.Part0 = Part850
Motor6D856.Part1 = Part838
Motor6D856.part1 = Part838
SpecialMesh857.Parent = Part850
SpecialMesh857.MeshId = "rbxassetid://300344229"
SpecialMesh857.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh857.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh857.TextureId = "rbxassetid://300344518"
SpecialMesh857.MeshType = Enum.MeshType.FileMesh
Model858.Name = "DanTDM"
Model858.Parent = mas
BodyColors859.Parent = Model858
BodyColors859.HeadColor = BrickColor.new("Bright yellow")
BodyColors859.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors859.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors859.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors859.LeftLegColor = BrickColor.new("Bright yellow")
BodyColors859.LeftLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors859.RightArmColor = BrickColor.new("Bright yellow")
BodyColors859.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors859.RightLegColor = BrickColor.new("Bright yellow")
BodyColors859.RightLegColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors859.TorsoColor = BrickColor.new("Bright yellow")
BodyColors859.TorsoColor3 = Color3.new(0.960784, 0.803922, 0.188235)
Script860.Name = "Health"
Script860.Parent = Model858
table.insert(cors,sandbox(Script860,function()
	--Responsible for regening a player's humanoid's health

	-- declarations
	local Figure = script.Parent
	local Head = Figure:WaitForChild("Head")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local regening = false

	-- regeneration
	function regenHealth()
		if regening then return end
		regening = true

		while Humanoid.Health < Humanoid.MaxHealth do
			local s = wait(1)
			local health = Humanoid.Health
			if health > 0 and health < Humanoid.MaxHealth then
				local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
				health = health + newHealthDelta
				Humanoid.Health = math.min(health,Humanoid.MaxHealth)
			end
		end

		if Humanoid.Health > Humanoid.MaxHealth then
			Humanoid.Health = Humanoid.MaxHealth
		end

		regening = false
	end

	Humanoid.HealthChanged:connect(regenHealth)

end))
Script861.Name = "Sound"
Script861.Parent = Model858
table.insert(cors,sandbox(Script861,function()
	---This server script creates the sounds and also exists so that it can be easily copied into an NPC and create sounds for that NPC. 
	--Remove the local script if you copy this into an NPC.

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	function newSound(name, id)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.Name = name
		sound.archivable = false
		sound.Parent = script.Parent.Head
		return sound
	end

	-- declarations

	local sGettingUp = newSound("GettingUp", "rbxasset://sounds/action_get_up.mp3")
	local sDied = newSound("Died", "rbxasset://sounds/uuhhh.mp3") 
	local sFreeFalling = newSound("FreeFalling", "rbxasset://sounds/action_falling.mp3")
	local sJumping = newSound("Jumping", "rbxasset://sounds/action_jump.mp3")
	local sLanding = newSound("Landing", "rbxasset://sounds/action_jump_land.mp3")
	local sSplash = newSound("Splash", "rbxasset://sounds/impact_water.mp3")
	local sRunning = newSound("Running", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sRunning.Looped = true
	local sSwimming = newSound("Swimming", "rbxasset://sounds/action_swim.mp3")
	sSwimming.Looped = true
	local sClimbing = newSound("Climbing", "rbxasset://sounds/action_footsteps_plastic.mp3")
	sClimbing.Looped = true

	local Figure = script.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local hasPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local filteringEnabled = game.Workspace.FilteringEnabled

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	if hasPlayer == nil then
		Humanoid.Died:connect(onDied)
		Humanoid.Running:connect(onRunning)
		Humanoid.Swimming:connect(onSwimming)
		Humanoid.Climbing:connect(onClimbing)
		Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
		Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
		Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
		Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
		Humanoid.StateChanged:connect(function(old, new) 
			if not (new.Name == "Dead" or 
				new.Name == "Running" or 
				new.Name == "RunningNoPhysics" or 
				new.Name == "Swimming" or 
				new.Name == "Jumping" or 
				new.Name == "GettingUp" or 
				new.Name == "Freefall" or 
				new.Name == "FallingDown") then
				stopLoopedSounds()
			end
		end)
	end

end))
LocalScript862.Name = "LocalSound"
LocalScript862.Parent = Script861
table.insert(cors,sandbox(LocalScript862,function()
	--This local script will run only for the player whos character it is in. It's changes to the sounds will replicate as they are changes to the character.
	-- util

	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end


	-- declarations

	local Figure = script.Parent.Parent
	local Head = waitForChild(Figure, "Head")
	local Humanoid = waitForChild(Figure, "Humanoid")

	local sGettingUp = waitForChild(Head, "GettingUp")
	local sDied = waitForChild(Head, "Died") 
	local sFreeFalling = waitForChild(Head, "FreeFalling")
	local sJumping = waitForChild(Head, "Jumping")
	local sLanding = waitForChild(Head, "Landing")
	local sSplash = waitForChild(Head, "Splash")
	local sRunning = waitForChild(Head, "Running")
	sRunning.Looped = true
	local sSwimming = waitForChild(Head, "Swimming")
	sSwimming.Looped = true
	local sClimbing =waitForChild(Head, "Climbing")
	sClimbing.Looped = true

	local prevState = "None"

	-- functions

	function onDied()
		stopLoopedSounds()
		sDied:Play()
	end

	local fallCount = 0
	local fallSpeed = 0
	function onStateFall(state, sound)
		fallCount = fallCount + 1
		if state then
			sound.Volume = 0
			sound:Play()
			Spawn( function()
				local t = 0
				local thisFall = fallCount
				while t < 1.5 and fallCount == thisFall do
					local vol = math.max(t - 0.3 , 0)
					sound.Volume = vol
					wait(0.1)
					t = t + 0.1
				end
			end)
		else
			sound:Stop()
		end
		fallSpeed = math.max(fallSpeed, math.abs(Head.Velocity.Y))
	end


	function onStateNoStop(state, sound)
		if state then
			sound:Play()
		end
	end


	function onRunning(speed)
		sClimbing:Stop()
		sSwimming:Stop()
		if (prevState == "FreeFall" and fallSpeed > 0.1) then
			local vol = math.min(1.0, math.max(0.0, (fallSpeed - 50) / 110))
			sLanding.Volume = vol
			sLanding:Play()
			fallSpeed = 0
		end
		if speed>0.5 then
			sRunning:Play()
			sRunning.Pitch = speed / 8.0
		else
			sRunning:Stop()
		end
		prevState = "Run"
	end

	function onSwimming(speed)
		if (prevState ~= "Swim" and speed > 0.1) then
			local volume = math.min(1.0, speed / 350)
			sSplash.Volume = volume
			sSplash:Play()
			prevState = "Swim"
		end
		sClimbing:Stop()
		sRunning:Stop()
		sSwimming.Pitch = 1.6
		sSwimming:Play()
	end

	function onClimbing(speed)
		sRunning:Stop()
		sSwimming:Stop()	
		if speed>0.01 then
			sClimbing:Play()
			sClimbing.Pitch = speed / 5.5
		else
			sClimbing:Stop()
		end
		prevState = "Climb"
	end
	-- connect up

	function stopLoopedSounds()
		sRunning:Stop() 
		sClimbing:Stop()
		sSwimming:Stop()
	end

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Swimming:connect(onSwimming)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.Jumping:connect(function(state) onStateNoStop(state, sJumping) prevState = "Jump" end)
	Humanoid.GettingUp:connect(function(state) stopLoopedSounds() onStateNoStop(state, sGettingUp) prevState = "GetUp" end)
	Humanoid.FreeFalling:connect(function(state) stopLoopedSounds() onStateFall(state, sFreeFalling) prevState = "FreeFall" end)
	Humanoid.FallingDown:connect(function(state) stopLoopedSounds() end)
	Humanoid.StateChanged:connect(function(old, new) 
		if not (new.Name == "Dead" or 
			new.Name == "Running" or 
			new.Name == "RunningNoPhysics" or 
			new.Name == "Swimming" or 
			new.Name == "Jumping" or 
			new.Name == "GettingUp" or 
			new.Name == "Freefall" or 
			new.Name == "FallingDown") then
			stopLoopedSounds()
		end
	end)


end))
LocalScript863.Name = "Animate"
LocalScript863.Parent = Model858
table.insert(cors,sandbox(LocalScript863,function()
	function   waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	local Figure = script.Parent
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
			{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
			{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
		},
		walk = 	{ 	
			{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
		}, 
		run = 	{
			{ id = "run.xml", weight = 10 } 
		}, 
		jump = 	{
			{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
		}, 
		fall = 	{
			{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
		}, 
		climb = {
			{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
		}, 
		sit = 	{
			{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
		},	
		toolnone = {
			{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
		},
		toolslash = {
			{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
			--				{ id = "slash.xml", weight = 10 } 
		},
		toollunge = {
			{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
		},
		wave = {
			{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
		},
		point = {
			{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
		},
		dance1 = {
			{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
		},
		dance2 = {
			{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
		},
		dance3 = {
			{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
			{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
		},
		laugh = {
			{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
		},
		cheer = {
			{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
		},
	}
	local dances = {"dance1", "dance2", "dance3"}

	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}

		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
			--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end

		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)


	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	

	-- ANIMATION

	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end

		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end

	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then

			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end

			currentAnimSpeed = 1.0

			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim

			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

		end

	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid)	 

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end


		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------


	function onRunning(speed)
		if speed>0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end

	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid)
			return
		end

		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid)
			return
		end

		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid)
			return
		end
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	local lastTick = 0

	function move(time)
		local amplitude = 1
		local frequency = 1
		local deltaTime = time - lastTick
		lastTick = time

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		if (setAngles) then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end

		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end

	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game.Players.LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end

		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end

	end)


	-- main program

	local runService = game:service("RunService");

	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end



end))
StringValue864.Name = "idle"
StringValue864.Parent = LocalScript863
Animation865.Name = "Animation1"
Animation865.Parent = StringValue864
Animation865.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue866.Name = "Weight"
NumberValue866.Parent = Animation865
NumberValue866.Value = 9
Animation867.Name = "Animation2"
Animation867.Parent = StringValue864
Animation867.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue868.Name = "Weight"
NumberValue868.Parent = Animation867
NumberValue868.Value = 1
StringValue869.Name = "walk"
StringValue869.Parent = LocalScript863
Animation870.Name = "WalkAnim"
Animation870.Parent = StringValue869
Animation870.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue871.Name = "run"
StringValue871.Parent = LocalScript863
Animation872.Name = "RunAnim"
Animation872.Parent = StringValue871
Animation872.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue873.Name = "jump"
StringValue873.Parent = LocalScript863
Animation874.Name = "JumpAnim"
Animation874.Parent = StringValue873
Animation874.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue875.Name = "climb"
StringValue875.Parent = LocalScript863
Animation876.Name = "ClimbAnim"
Animation876.Parent = StringValue875
Animation876.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue877.Name = "toolnone"
StringValue877.Parent = LocalScript863
Animation878.Name = "ToolNoneAnim"
Animation878.Parent = StringValue877
Animation878.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue879.Name = "fall"
StringValue879.Parent = LocalScript863
Animation880.Name = "FallAnim"
Animation880.Parent = StringValue879
Animation880.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue881.Name = "sit"
StringValue881.Parent = LocalScript863
Animation882.Name = "SitAnim"
Animation882.Parent = StringValue881
Animation882.AnimationId = "http://www.roblox.com/asset/?id=178130996"
Part883.Name = "Head"
Part883.Parent = Model858
Part883.CFrame = CFrame.new(25.2900009, 57.424427, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part883.Position = Vector3.new(25.2900009, 57.424427, -28.1640892)
Part883.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part883.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part883.Size = Vector3.new(7.01301432, 3.50650716, 3.50650716)
Part883.BrickColor = BrickColor.new("Bright yellow")
Part883.TopSurface = Enum.SurfaceType.Smooth
Part883.brickColor = BrickColor.new("Bright yellow")
Part883.FormFactor = Enum.FormFactor.Symmetric
Part883.formFactor = Enum.FormFactor.Symmetric
SpecialMesh884.Parent = Part883
SpecialMesh884.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh884.TextureId = "rbxassetid://300344518"
SpecialMesh884.MeshType = Enum.MeshType.FileMesh
Part885.Name = "HumanoidRootPart"
Part885.Parent = Model858
Part885.CFrame = CFrame.new(25.2900009, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part885.Position = Vector3.new(25.2900009, 52.1646652, -28.1640892)
Part885.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part885.Transparency = 1
Part885.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part885.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part885.BottomSurface = Enum.SurfaceType.Smooth
Part885.BrickColor = BrickColor.new("Bright blue")
Part885.CanCollide = false
Part885.LeftParamA = 0
Part885.LeftParamB = 0
Part885.RightParamA = 0
Part885.RightParamB = 0
Part885.TopSurface = Enum.SurfaceType.Smooth
Part885.brickColor = BrickColor.new("Bright blue")
Part885.FormFactor = Enum.FormFactor.Symmetric
Part885.formFactor = Enum.FormFactor.Symmetric
Motor6D886.Name = "RootJoint"
Motor6D886.Parent = Part885
Motor6D886.MaxVelocity = 0.10000000149012
Motor6D886.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D886.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D886.Part0 = Part885
Motor6D886.Part1 = Part895
Motor6D886.part1 = Part895
Part887.Name = "Left Arm"
Part887.Parent = Model858
Part887.CFrame = CFrame.new(20.0302391, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part887.Position = Vector3.new(20.0302391, 52.1646652, -28.1640892)
Part887.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part887.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part887.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part887.BrickColor = BrickColor.new("Bright yellow")
Part887.CanCollide = false
Part887.brickColor = BrickColor.new("Bright yellow")
Part887.FormFactor = Enum.FormFactor.Symmetric
Part887.formFactor = Enum.FormFactor.Symmetric
SpecialMesh888.Parent = Part887
SpecialMesh888.MeshId = "rbxassetid://300344022"
SpecialMesh888.Offset = Vector3.new(0.701301455, -2.45455503, 0)
SpecialMesh888.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh888.TextureId = "rbxassetid://300344518"
SpecialMesh888.MeshType = Enum.MeshType.FileMesh
Part889.Name = "Left Leg"
Part889.Parent = Model858
Part889.CFrame = CFrame.new(23.536747, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part889.Position = Vector3.new(23.536747, 45.1516495, -28.1640892)
Part889.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part889.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part889.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part889.BottomSurface = Enum.SurfaceType.Smooth
Part889.BrickColor = BrickColor.new("Bright yellow")
Part889.CanCollide = false
Part889.brickColor = BrickColor.new("Bright yellow")
Part889.FormFactor = Enum.FormFactor.Symmetric
Part889.formFactor = Enum.FormFactor.Symmetric
SpecialMesh890.Parent = Part889
SpecialMesh890.MeshId = "rbxassetid://300344043"
SpecialMesh890.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh890.TextureId = "rbxassetid://300344518"
SpecialMesh890.MeshType = Enum.MeshType.FileMesh
Part891.Name = "Right Arm"
Part891.Parent = Model858
Part891.CFrame = CFrame.new(30.5497627, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part891.Position = Vector3.new(30.5497627, 52.1646652, -28.1640892)
Part891.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part891.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part891.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part891.BrickColor = BrickColor.new("Bright yellow")
Part891.CanCollide = false
Part891.brickColor = BrickColor.new("Bright yellow")
Part891.FormFactor = Enum.FormFactor.Symmetric
Part891.formFactor = Enum.FormFactor.Symmetric
SpecialMesh892.Parent = Part891
SpecialMesh892.MeshId = "rbxassetid://300344064"
SpecialMesh892.Offset = Vector3.new(-1.40260291, -1.75325358, -3.50650716)
SpecialMesh892.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh892.TextureId = "rbxassetid://300344518"
SpecialMesh892.MeshType = Enum.MeshType.FileMesh
Part893.Name = "Right Leg"
Part893.Parent = Model858
Part893.CFrame = CFrame.new(27.0432549, 45.1516495, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part893.Position = Vector3.new(27.0432549, 45.1516495, -28.1640892)
Part893.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part893.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part893.Size = Vector3.new(3.50650716, 7.01301432, 3.50650716)
Part893.BottomSurface = Enum.SurfaceType.Smooth
Part893.BrickColor = BrickColor.new("Bright yellow")
Part893.CanCollide = false
Part893.brickColor = BrickColor.new("Bright yellow")
Part893.FormFactor = Enum.FormFactor.Symmetric
Part893.formFactor = Enum.FormFactor.Symmetric
SpecialMesh894.Parent = Part893
SpecialMesh894.MeshId = "rbxassetid://300344090"
SpecialMesh894.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh894.TextureId = "rbxassetid://300344518"
SpecialMesh894.MeshType = Enum.MeshType.FileMesh
Part895.Name = "Torso"
Part895.Parent = Model858
Part895.CFrame = CFrame.new(25.2900009, 52.1646652, -28.1640892, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part895.Position = Vector3.new(25.2900009, 52.1646652, -28.1640892)
Part895.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part895.Velocity = Vector3.new(-1.40129846e-45, -1.80124334e-05, -2.80259693e-45)
Part895.Size = Vector3.new(7.01301432, 7.01301432, 3.50650716)
Part895.BrickColor = BrickColor.new("Bright yellow")
Part895.LeftParamA = 0
Part895.LeftParamB = 0
Part895.LeftSurface = Enum.SurfaceType.Weld
Part895.RightParamA = 0
Part895.RightParamB = 0
Part895.RightSurface = Enum.SurfaceType.Weld
Part895.brickColor = BrickColor.new("Bright yellow")
Part895.FormFactor = Enum.FormFactor.Symmetric
Part895.formFactor = Enum.FormFactor.Symmetric
Decal896.Name = "roblox"
Decal896.Parent = Part895
Motor6D897.Name = "Right Shoulder"
Motor6D897.Parent = Part895
Motor6D897.MaxVelocity = 0.10000000149012
Motor6D897.C0 = CFrame.new(3.50650716, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D897.C1 = CFrame.new(-1.75325358, 1.75325358, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D897.Part0 = Part895
Motor6D897.Part1 = Part891
Motor6D897.part1 = Part891
Motor6D898.Name = "Left Shoulder"
Motor6D898.Parent = Part895
Motor6D898.MaxVelocity = 0.10000000149012
Motor6D898.C0 = CFrame.new(-3.50650716, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D898.C1 = CFrame.new(1.75325358, 1.75325358, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D898.Part0 = Part895
Motor6D898.Part1 = Part887
Motor6D898.part1 = Part887
Motor6D899.Name = "Right Hip"
Motor6D899.Parent = Part895
Motor6D899.MaxVelocity = 0.10000000149012
Motor6D899.C0 = CFrame.new(3.50650716, -3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D899.C1 = CFrame.new(1.75325358, 3.50650716, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
Motor6D899.Part0 = Part895
Motor6D899.Part1 = Part893
Motor6D899.part1 = Part893
Motor6D900.Name = "Left Hip"
Motor6D900.Parent = Part895
Motor6D900.MaxVelocity = 0.10000000149012
Motor6D900.C0 = CFrame.new(-3.50650716, -3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D900.C1 = CFrame.new(-1.75325358, 3.50650716, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
Motor6D900.Part0 = Part895
Motor6D900.Part1 = Part889
Motor6D900.part1 = Part889
Motor6D901.Name = "Neck"
Motor6D901.Parent = Part895
Motor6D901.MaxVelocity = 0.10000000149012
Motor6D901.C0 = CFrame.new(0, 3.50650716, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D901.C1 = CFrame.new(0, -1.75325358, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Motor6D901.Part0 = Part895
Motor6D901.Part1 = Part883
Motor6D901.part1 = Part883
SpecialMesh902.Parent = Part895
SpecialMesh902.MeshId = "rbxassetid://300344229"
SpecialMesh902.Offset = Vector3.new(0, 1.75325358, 0)
SpecialMesh902.Scale = Vector3.new(2.98053122, 2.98053122, 2.98053122)
SpecialMesh902.TextureId = "rbxassetid://300344518"
SpecialMesh902.MeshType = Enum.MeshType.FileMesh
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end

